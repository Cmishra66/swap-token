{
	"id": "6377990d60866e4ee5656c72bc355f87",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.22",
	"solcLongVersion": "0.8.22+commit.4fc1097e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/swap.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\n\r\ncontract TokenSwap {\r\n    using SafeERC20 for IERC20;\r\n\r\n    address public owner;\r\n    IERC20 public tokenA;\r\n    IERC20 public tokenB;\r\n    uint256 public exchangeRate;\r\n\r\n    event Swap(address indexed user, uint256 amountA, uint256 amountB);\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner, \"Not the owner\");\r\n        _;\r\n    }\r\n\r\n    constructor(\r\n        address _tokenA,\r\n        address _tokenB,\r\n        uint256 _exchangeRate\r\n    ) {\r\n        owner = msg.sender;\r\n        tokenA = IERC20(_tokenA);\r\n        tokenB = IERC20(_tokenB);\r\n        exchangeRate = _exchangeRate;\r\n    }\r\n\r\n    function swapAForB(uint256 amountA) external {\r\n        uint256 amountB = (amountA * exchangeRate) / 1e18; // Calculate amountB based on exchange rate\r\n        require(tokenA.balanceOf(msg.sender) >= amountA, \"Insufficient balance of TokenA\");\r\n        require(tokenB.balanceOf(address(this)) >= amountB, \"Insufficient balance of TokenB\");\r\n\r\n        tokenA.safeTransferFrom(msg.sender, address(this), amountA);\r\n        tokenB.safeTransfer(msg.sender, amountB);\r\n\r\n        emit Swap(msg.sender, amountA, amountB);\r\n    }\r\n\r\n    function swapBForA(uint256 amountB) external {\r\n        uint256 amountA = (amountB * 1e18) / exchangeRate; // Calculate amountA based on exchange rate\r\n        require(tokenB.balanceOf(msg.sender) >= amountB, \"Insufficient balance of TokenB\");\r\n        require(tokenA.balanceOf(address(this)) >= amountA, \"Insufficient balance of TokenA\");\r\n\r\n        tokenB.safeTransferFrom(msg.sender, address(this), amountB);\r\n        tokenA.safeTransfer(msg.sender, amountA);\r\n\r\n        emit Swap(msg.sender, amountB, amountA);\r\n    }\r\n\r\n    // Owner functions to update parameters\r\n    function setExchangeRate(uint256 _exchangeRate) external onlyOwner {\r\n        exchangeRate = _exchangeRate;\r\n    }\r\n\r\n    function transferOwnership(address newOwner) external onlyOwner {\r\n        owner = newOwner;\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC20Permit} from \"../extensions/IERC20Permit.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev An operation with an ERC20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data);\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122073d84d22d1835a3ca1124d5ef32ee0684f3380077180c5ea7fe8765448de492764736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122073d84d22d1835a3ca1124d5ef32ee0684f3380077180c5ea7fe8765448de492764736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH20 0xD84D22D1835A3CA1124D5EF32EE0684F33800771 DUP1 0xC5 0xEA PUSH32 0xE8765448DE492764736F6C634300081600330000000000000000000000000000 ",
							"sourceMap": "751:5018:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122073d84d22d1835a3ca1124d5ef32ee0684f3380077180c5ea7fe8765448de492764736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH20 0xD84D22D1835A3CA1124D5EF32EE0684F33800771 DUP1 0xC5 0xEA PUSH32 0xE8765448DE492764736F6C634300081600330000000000000000000000000000 ",
							"sourceMap": "751:5018:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122073d84d22d1835a3ca1124d5ef32ee0684f3380077180c5ea7fe8765448de492764736f6c63430008160033",
									".code": [
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"contracts/swap.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b4c4e35247520cdd85d45047f2877f29a37f5eec48fffaa17cb54307a6a87d8464736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b4c4e35247520cdd85d45047f2877f29a37f5eec48fffaa17cb54307a6a87d8464736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 0xC4 0xE3 MSTORE SELFBALANCE MSTORE 0xC 0xDD DUP6 0xD4 POP SELFBALANCE CALLCODE DUP8 PUSH32 0x29A37F5EEC48FFFAA17CB54307A6A87D8464736F6C6343000816003300000000 ",
							"sourceMap": "195:6066:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b4c4e35247520cdd85d45047f2877f29a37f5eec48fffaa17cb54307a6a87d8464736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 0xC4 0xE3 MSTORE SELFBALANCE MSTORE 0xC 0xDD DUP6 0xD4 POP SELFBALANCE CALLCODE DUP8 PUSH32 0x29A37F5EEC48FFFAA17CB54307A6A87D8464736F6C6343000816003300000000 ",
							"sourceMap": "195:6066:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b4c4e35247520cdd85d45047f2877f29a37f5eec48fffaa17cb54307a6a87d8464736f6c63430008160033",
									".code": [
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"contracts/swap.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/swap.sol": {
				"TokenSwap": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_exchangeRate",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "exchangeRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_exchangeRate",
									"type": "uint256"
								}
							],
							"name": "setExchangeRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								}
							],
							"name": "swapAForB",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"name": "swapBForA",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenA",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenB",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/swap.sol\":187:2129  contract TokenSwap {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/swap.sol\":545:794  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/swap.sol\":667:677  msg.sender */\n  caller\n    /* \"contracts/swap.sol\":659:664  owner */\n  0x00\n  dup1\n    /* \"contracts/swap.sol\":659:677  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/swap.sol\":704:711  _tokenA */\n  dup3\n    /* \"contracts/swap.sol\":688:694  tokenA */\n  0x01\n  0x00\n    /* \"contracts/swap.sol\":688:712  tokenA = IERC20(_tokenA) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/swap.sol\":739:746  _tokenB */\n  dup2\n    /* \"contracts/swap.sol\":723:729  tokenB */\n  0x02\n  0x00\n    /* \"contracts/swap.sol\":723:747  tokenB = IERC20(_tokenB) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/swap.sol\":773:786  _exchangeRate */\n  dup1\n    /* \"contracts/swap.sol\":758:770  exchangeRate */\n  0x03\n    /* \"contracts/swap.sol\":758:786  exchangeRate = _exchangeRate */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/swap.sol\":545:794  constructor(... */\n  pop\n  pop\n  pop\n    /* \"contracts/swap.sol\":187:2129  contract TokenSwap {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_23\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_25\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_26\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_26:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_28\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:922   */\ntag_14:\n    /* \"#utility.yul\":882:889   */\n  0x00\n    /* \"#utility.yul\":911:916   */\n  dup2\n    /* \"#utility.yul\":900:916   */\n  swap1\n  pop\n    /* \"#utility.yul\":845:922   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":928:1050   */\ntag_15:\n    /* \"#utility.yul\":1001:1025   */\n  tag_31\n    /* \"#utility.yul\":1019:1024   */\n  dup2\n    /* \"#utility.yul\":1001:1025   */\n  tag_14\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":994:999   */\n  dup2\n    /* \"#utility.yul\":991:1026   */\n  eq\n    /* \"#utility.yul\":981:1044   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":1040:1041   */\n  0x00\n    /* \"#utility.yul\":1037:1038   */\n  dup1\n    /* \"#utility.yul\":1030:1042   */\n  revert\n    /* \"#utility.yul\":981:1044   */\ntag_32:\n    /* \"#utility.yul\":928:1050   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1199   */\ntag_16:\n    /* \"#utility.yul\":1113:1118   */\n  0x00\n    /* \"#utility.yul\":1144:1150   */\n  dup2\n    /* \"#utility.yul\":1138:1151   */\n  mload\n    /* \"#utility.yul\":1129:1151   */\n  swap1\n  pop\n    /* \"#utility.yul\":1160:1193   */\n  tag_34\n    /* \"#utility.yul\":1187:1192   */\n  dup2\n    /* \"#utility.yul\":1160:1193   */\n  tag_15\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":1056:1199   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1205:1868   */\ntag_3:\n    /* \"#utility.yul\":1293:1299   */\n  0x00\n    /* \"#utility.yul\":1301:1307   */\n  dup1\n    /* \"#utility.yul\":1309:1315   */\n  0x00\n    /* \"#utility.yul\":1358:1360   */\n  0x60\n    /* \"#utility.yul\":1346:1355   */\n  dup5\n    /* \"#utility.yul\":1337:1344   */\n  dup7\n    /* \"#utility.yul\":1333:1356   */\n  sub\n    /* \"#utility.yul\":1329:1361   */\n  slt\n    /* \"#utility.yul\":1326:1445   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1364:1443   */\n  tag_37\n  tag_8\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":1326:1445   */\ntag_36:\n    /* \"#utility.yul\":1484:1485   */\n  0x00\n    /* \"#utility.yul\":1509:1573   */\n  tag_38\n    /* \"#utility.yul\":1565:1572   */\n  dup7\n    /* \"#utility.yul\":1556:1562   */\n  dup3\n    /* \"#utility.yul\":1545:1554   */\n  dup8\n    /* \"#utility.yul\":1541:1563   */\n  add\n    /* \"#utility.yul\":1509:1573   */\n  tag_13\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1499:1573   */\n  swap4\n  pop\n    /* \"#utility.yul\":1455:1583   */\n  pop\n    /* \"#utility.yul\":1622:1624   */\n  0x20\n    /* \"#utility.yul\":1648:1712   */\n  tag_39\n    /* \"#utility.yul\":1704:1711   */\n  dup7\n    /* \"#utility.yul\":1695:1701   */\n  dup3\n    /* \"#utility.yul\":1684:1693   */\n  dup8\n    /* \"#utility.yul\":1680:1702   */\n  add\n    /* \"#utility.yul\":1648:1712   */\n  tag_13\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1638:1712   */\n  swap3\n  pop\n    /* \"#utility.yul\":1593:1722   */\n  pop\n    /* \"#utility.yul\":1761:1763   */\n  0x40\n    /* \"#utility.yul\":1787:1851   */\n  tag_40\n    /* \"#utility.yul\":1843:1850   */\n  dup7\n    /* \"#utility.yul\":1834:1840   */\n  dup3\n    /* \"#utility.yul\":1823:1832   */\n  dup8\n    /* \"#utility.yul\":1819:1841   */\n  add\n    /* \"#utility.yul\":1787:1851   */\n  tag_16\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1777:1851   */\n  swap2\n  pop\n    /* \"#utility.yul\":1732:1861   */\n  pop\n    /* \"#utility.yul\":1205:1868   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"contracts/swap.sol\":187:2129  contract TokenSwap {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/swap.sol\":187:2129  contract TokenSwap {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xdb068e0e\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xe619a498\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_11:\n      dup1\n      0x03102091\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0fc63d10\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x3ba0b9a9\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x5f64b55b\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/swap.sol\":802:1323  function swapAForB(uint256 amountA) external {... */\n    tag_3:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      stop\n        /* \"contracts/swap.sol\":275:295  IERC20 public tokenA */\n    tag_4:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/swap.sol\":329:356  uint256 public exchangeRate */\n    tag_5:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/swap.sol\":302:322  IERC20 public tokenB */\n    tag_6:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/swap.sol\":248:268  address public owner */\n    tag_7:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/swap.sol\":1905:2019  function setExchangeRate(uint256 _exchangeRate) external onlyOwner {... */\n    tag_8:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_32:\n      tag_33\n      jump\t// in\n    tag_31:\n      stop\n        /* \"contracts/swap.sol\":1331:1852  function swapBForA(uint256 amountB) external {... */\n    tag_9:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_35:\n      tag_36\n      jump\t// in\n    tag_34:\n      stop\n        /* \"contracts/swap.sol\":2027:2126  function transferOwnership(address newOwner) external onlyOwner {... */\n    tag_10:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n    tag_37:\n      stop\n        /* \"contracts/swap.sol\":802:1323  function swapAForB(uint256 amountA) external {... */\n    tag_15:\n        /* \"contracts/swap.sol\":858:873  uint256 amountB */\n      0x00\n        /* \"contracts/swap.sol\":903:907  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/swap.sol\":887:899  exchangeRate */\n      sload(0x03)\n        /* \"contracts/swap.sol\":877:884  amountA */\n      dup4\n        /* \"contracts/swap.sol\":877:899  amountA * exchangeRate */\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n        /* \"contracts/swap.sol\":876:907  (amountA * exchangeRate) / 1e18 */\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n        /* \"contracts/swap.sol\":858:907  uint256 amountB = (amountA * exchangeRate) / 1e18 */\n      swap1\n      pop\n        /* \"contracts/swap.sol\":1002:1009  amountA */\n      dup2\n        /* \"contracts/swap.sol\":970:976  tokenA */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/swap.sol\":970:986  tokenA.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/swap.sol\":987:997  msg.sender */\n      caller\n        /* \"contracts/swap.sol\":970:998  tokenA.balanceOf(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_46\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_46:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_48\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_48:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n        /* \"contracts/swap.sol\":970:1009  tokenA.balanceOf(msg.sender) >= amountA */\n      lt\n      iszero\n        /* \"contracts/swap.sol\":962:1044  require(tokenA.balanceOf(msg.sender) >= amountA, \"Insufficient balance of TokenA\") */\n      tag_51\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_52\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_51:\n        /* \"contracts/swap.sol\":1098:1105  amountB */\n      dup1\n        /* \"contracts/swap.sol\":1063:1069  tokenB */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/swap.sol\":1063:1079  tokenB.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/swap.sol\":1088:1092  this */\n      address\n        /* \"contracts/swap.sol\":1063:1094  tokenB.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_54\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_54:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_56\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_56:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_57:\n        /* \"contracts/swap.sol\":1063:1105  tokenB.balanceOf(address(this)) >= amountB */\n      lt\n      iszero\n        /* \"contracts/swap.sol\":1055:1140  require(tokenB.balanceOf(address(this)) >= amountB, \"Insufficient balance of TokenB\") */\n      tag_58\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_59\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_58:\n        /* \"contracts/swap.sol\":1153:1212  tokenA.safeTransferFrom(msg.sender, address(this), amountA) */\n      tag_61\n        /* \"contracts/swap.sol\":1177:1187  msg.sender */\n      caller\n        /* \"contracts/swap.sol\":1197:1201  this */\n      address\n        /* \"contracts/swap.sol\":1204:1211  amountA */\n      dup5\n        /* \"contracts/swap.sol\":1153:1159  tokenA */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/swap.sol\":1153:1176  tokenA.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_62\n      swap1\n        /* \"contracts/swap.sol\":1153:1212  tokenA.safeTransferFrom(msg.sender, address(this), amountA) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_61:\n        /* \"contracts/swap.sol\":1223:1263  tokenB.safeTransfer(msg.sender, amountB) */\n      tag_63\n        /* \"contracts/swap.sol\":1243:1253  msg.sender */\n      caller\n        /* \"contracts/swap.sol\":1255:1262  amountB */\n      dup3\n        /* \"contracts/swap.sol\":1223:1229  tokenB */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/swap.sol\":1223:1242  tokenB.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_64\n      swap1\n        /* \"contracts/swap.sol\":1223:1263  tokenB.safeTransfer(msg.sender, amountB) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_63:\n        /* \"contracts/swap.sol\":1286:1296  msg.sender */\n      caller\n        /* \"contracts/swap.sol\":1281:1315  Swap(msg.sender, amountA, amountB) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x77f92a1b6a1a11de8ca49515ad4c1fad45632dd3442167d74b90b304a3c7a758\n        /* \"contracts/swap.sol\":1298:1305  amountA */\n      dup4\n        /* \"contracts/swap.sol\":1307:1314  amountB */\n      dup4\n        /* \"contracts/swap.sol\":1281:1315  Swap(msg.sender, amountA, amountB) */\n      mload(0x40)\n      tag_65\n      swap3\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/swap.sol\":847:1323  {... */\n      pop\n        /* \"contracts/swap.sol\":802:1323  function swapAForB(uint256 amountA) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/swap.sol\":275:295  IERC20 public tokenA */\n    tag_17:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/swap.sol\":329:356  uint256 public exchangeRate */\n    tag_21:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"contracts/swap.sol\":302:322  IERC20 public tokenB */\n    tag_25:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/swap.sol\":248:268  address public owner */\n    tag_28:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/swap.sol\":1905:2019  function setExchangeRate(uint256 _exchangeRate) external onlyOwner {... */\n    tag_33:\n        /* \"contracts/swap.sol\":494:499  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/swap.sol\":480:499  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/swap.sol\":480:490  msg.sender */\n      caller\n        /* \"contracts/swap.sol\":480:499  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/swap.sol\":472:517  require(msg.sender == owner, \"Not the owner\") */\n      tag_68\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_69\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_68:\n        /* \"contracts/swap.sol\":1998:2011  _exchangeRate */\n      dup1\n        /* \"contracts/swap.sol\":1983:1995  exchangeRate */\n      0x03\n        /* \"contracts/swap.sol\":1983:2011  exchangeRate = _exchangeRate */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/swap.sol\":1905:2019  function setExchangeRate(uint256 _exchangeRate) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/swap.sol\":1331:1852  function swapBForA(uint256 amountB) external {... */\n    tag_36:\n        /* \"contracts/swap.sol\":1387:1402  uint256 amountA */\n      0x00\n        /* \"contracts/swap.sol\":1424:1436  exchangeRate */\n      sload(0x03)\n        /* \"contracts/swap.sol\":1416:1420  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/swap.sol\":1406:1413  amountB */\n      dup4\n        /* \"contracts/swap.sol\":1406:1420  amountB * 1e18 */\n      tag_73\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_73:\n        /* \"contracts/swap.sol\":1405:1436  (amountB * 1e18) / exchangeRate */\n      tag_74\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_74:\n        /* \"contracts/swap.sol\":1387:1436  uint256 amountA = (amountB * 1e18) / exchangeRate */\n      swap1\n      pop\n        /* \"contracts/swap.sol\":1531:1538  amountB */\n      dup2\n        /* \"contracts/swap.sol\":1499:1505  tokenB */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/swap.sol\":1499:1515  tokenB.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/swap.sol\":1516:1526  msg.sender */\n      caller\n        /* \"contracts/swap.sol\":1499:1527  tokenB.balanceOf(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_75\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_75:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_77\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_77:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_78\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_78:\n        /* \"contracts/swap.sol\":1499:1538  tokenB.balanceOf(msg.sender) >= amountB */\n      lt\n      iszero\n        /* \"contracts/swap.sol\":1491:1573  require(tokenB.balanceOf(msg.sender) >= amountB, \"Insufficient balance of TokenB\") */\n      tag_79\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_80\n      swap1\n      tag_60\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_79:\n        /* \"contracts/swap.sol\":1627:1634  amountA */\n      dup1\n        /* \"contracts/swap.sol\":1592:1598  tokenA */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/swap.sol\":1592:1608  tokenA.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/swap.sol\":1617:1621  this */\n      address\n        /* \"contracts/swap.sol\":1592:1623  tokenA.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_81\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_81:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_83\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_83:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_84:\n        /* \"contracts/swap.sol\":1592:1634  tokenA.balanceOf(address(this)) >= amountA */\n      lt\n      iszero\n        /* \"contracts/swap.sol\":1584:1669  require(tokenA.balanceOf(address(this)) >= amountA, \"Insufficient balance of TokenA\") */\n      tag_85\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_86\n      swap1\n      tag_53\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_85:\n        /* \"contracts/swap.sol\":1682:1741  tokenB.safeTransferFrom(msg.sender, address(this), amountB) */\n      tag_87\n        /* \"contracts/swap.sol\":1706:1716  msg.sender */\n      caller\n        /* \"contracts/swap.sol\":1726:1730  this */\n      address\n        /* \"contracts/swap.sol\":1733:1740  amountB */\n      dup5\n        /* \"contracts/swap.sol\":1682:1688  tokenB */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/swap.sol\":1682:1705  tokenB.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_62\n      swap1\n        /* \"contracts/swap.sol\":1682:1741  tokenB.safeTransferFrom(msg.sender, address(this), amountB) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_87:\n        /* \"contracts/swap.sol\":1752:1792  tokenA.safeTransfer(msg.sender, amountA) */\n      tag_88\n        /* \"contracts/swap.sol\":1772:1782  msg.sender */\n      caller\n        /* \"contracts/swap.sol\":1784:1791  amountA */\n      dup3\n        /* \"contracts/swap.sol\":1752:1758  tokenA */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/swap.sol\":1752:1771  tokenA.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_64\n      swap1\n        /* \"contracts/swap.sol\":1752:1792  tokenA.safeTransfer(msg.sender, amountA) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_88:\n        /* \"contracts/swap.sol\":1815:1825  msg.sender */\n      caller\n        /* \"contracts/swap.sol\":1810:1844  Swap(msg.sender, amountB, amountA) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x77f92a1b6a1a11de8ca49515ad4c1fad45632dd3442167d74b90b304a3c7a758\n        /* \"contracts/swap.sol\":1827:1834  amountB */\n      dup4\n        /* \"contracts/swap.sol\":1836:1843  amountA */\n      dup4\n        /* \"contracts/swap.sol\":1810:1844  Swap(msg.sender, amountB, amountA) */\n      mload(0x40)\n      tag_89\n      swap3\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/swap.sol\":1376:1852  {... */\n      pop\n        /* \"contracts/swap.sol\":1331:1852  function swapBForA(uint256 amountB) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/swap.sol\":2027:2126  function transferOwnership(address newOwner) external onlyOwner {... */\n    tag_40:\n        /* \"contracts/swap.sol\":494:499  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/swap.sol\":480:499  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/swap.sol\":480:490  msg.sender */\n      caller\n        /* \"contracts/swap.sol\":480:499  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/swap.sol\":472:517  require(msg.sender == owner, \"Not the owner\") */\n      tag_91\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_92\n      swap1\n      tag_70\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_91:\n        /* \"contracts/swap.sol\":2110:2118  newOwner */\n      dup1\n        /* \"contracts/swap.sol\":2102:2107  owner */\n      0x00\n      dup1\n        /* \"contracts/swap.sol\":2102:2118  owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/swap.sol\":2027:2126  function transferOwnership(address newOwner) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1702:1890  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1802:1883  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_95\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1822:1827  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1844:1849  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1844:1862  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1865:1869  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1871:1873  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1875:1880  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1829:1882  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      add(0x24, mload(0x40))\n      tag_96\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1802:1821  _callOptionalReturn */\n      tag_98\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1802:1883  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_95:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1702:1890  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1303:1463  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1456  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_100\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1405:1410  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1427:1432  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1427:1441  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1444:1446  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1448:1453  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1412:1455  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_101\n      swap3\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1404  _callOptionalReturn */\n      tag_98\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1456  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_100:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1303:1463  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4059:4688  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4478:4501  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4537  address(token).functionCall(data) */\n      tag_104\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4532:4536  data */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4512:4517  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4531  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_105\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4537  address(token).functionCall(data) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_104:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4478:4537  bytes memory returndata = address(token).functionCall(data) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4572:4573  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4561  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4568  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4573  returndata.length != 0 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n      dup1\n      iszero\n      tag_106\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4589:4599  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4578:4608  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_107\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_107:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4577:4608  !abi.decode(returndata, (bool)) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n    tag_106:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4547:4682  if (returndata.length != 0 && !abi.decode(returndata, (bool))) {... */\n      iszero\n      tag_109\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4664:4669  token */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4631:4671  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_110\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4547:4682  if (returndata.length != 0 && !abi.decode(returndata, (bool))) {... */\n    tag_109:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4129:4688  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4059:4688  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2705:2856  function functionCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_105:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2780:2792  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2849  functionCallWithValue(target, data, 0) */\n      tag_112\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2833:2839  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2841:2845  data */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2847:2848  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2832  functionCallWithValue */\n      tag_113\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2849  functionCallWithValue(target, data, 0) */\n      jump\t// in\n    tag_112:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2804:2849  return functionCallWithValue(target, data, 0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2705:2856  function functionCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3180:3572  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n    tag_113:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3279:3291  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3331:3336  value */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3307:3328  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3307:3336  address(this).balance < value */\n      lt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3303:3411  if (address(this).balance < value) {... */\n      iszero\n      tag_115\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3394:3398  this */\n      address\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3359:3400  AddressInsufficientBalance(address(this)) */\n      mload(0x40)\n      0xcd78605900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_116\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3303:3411  if (address(this).balance < value) {... */\n    tag_115:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3421:3433  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3435:3458  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3468  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3473  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3481:3486  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3488:3492  data */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3493  target.call{value: value}(data) */\n      mload(0x40)\n      tag_117\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_117:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_121\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_120)\n    tag_121:\n      0x60\n      swap2\n      pop\n    tag_120:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3420:3493  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      tag_122\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3537:3543  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3545:3552  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3554:3564  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3536  verifyCallResultFromTarget */\n      tag_123\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      jump\t// in\n    tag_122:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3503:3565  return verifyCallResultFromTarget(target, success, returndata) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3180:3572  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_123:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4769:4781  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4798:4805  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      tag_125\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      tag_126\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4829:4839  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4828  _revert */\n      tag_127\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      jump\t// in\n    tag_126:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      jump(tag_128)\n    tag_125:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5066:5067  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5055  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5062  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5067  returndata.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      iszero\n      tag_129\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5093:5094  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5077  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5089  target.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5094  target.code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n    tag_129:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n      iszero\n      tag_130\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5138:5144  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      mload(0x40)\n      0x9996b31500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_131\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_130:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5180:5190  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5173:5190  return returndata */\n      swap1\n      pop\n      jump(tag_124)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n    tag_128:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_124:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5743:6259  function _revert(bytes memory returndata) private pure {... */\n    tag_127:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5894:5895  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5884  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5891  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5895  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n      iszero\n      tag_133\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6102:6112  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6096:6113  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6158:6173  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6145:6155  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6141:6143  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6137:6156  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6130:6174  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n    tag_133:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6225:6242  FailedInnerCall() */\n      mload(0x40)\n      0x1425ea4200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":88:205   */\n    tag_136:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_138:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_139:\n        /* \"#utility.yul\":490:514   */\n      tag_175\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_138\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_176\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_176:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_140:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_178\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_139\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_14:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_180\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_181\n      tag_136\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":766:885   */\n    tag_180:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_182\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_140\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1151   */\n    tag_141:\n        /* \"#utility.yul\":1062:1069   */\n      0x00\n        /* \"#utility.yul\":1102:1144   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1095:1100   */\n      dup3\n        /* \"#utility.yul\":1091:1145   */\n      and\n        /* \"#utility.yul\":1080:1145   */\n      swap1\n      pop\n        /* \"#utility.yul\":1025:1151   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1157:1217   */\n    tag_142:\n        /* \"#utility.yul\":1185:1188   */\n      0x00\n        /* \"#utility.yul\":1206:1211   */\n      dup2\n        /* \"#utility.yul\":1199:1211   */\n      swap1\n      pop\n        /* \"#utility.yul\":1157:1217   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1223:1365   */\n    tag_143:\n        /* \"#utility.yul\":1273:1282   */\n      0x00\n        /* \"#utility.yul\":1306:1359   */\n      tag_186\n        /* \"#utility.yul\":1324:1358   */\n      tag_187\n        /* \"#utility.yul\":1333:1357   */\n      tag_188\n        /* \"#utility.yul\":1351:1356   */\n      dup5\n        /* \"#utility.yul\":1333:1357   */\n      tag_141\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":1324:1358   */\n      tag_142\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":1306:1359   */\n      tag_141\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":1293:1359   */\n      swap1\n      pop\n        /* \"#utility.yul\":1223:1365   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1371:1497   */\n    tag_144:\n        /* \"#utility.yul\":1421:1430   */\n      0x00\n        /* \"#utility.yul\":1454:1491   */\n      tag_190\n        /* \"#utility.yul\":1485:1490   */\n      dup3\n        /* \"#utility.yul\":1454:1491   */\n      tag_143\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":1441:1491   */\n      swap1\n      pop\n        /* \"#utility.yul\":1371:1497   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1503:1642   */\n    tag_145:\n        /* \"#utility.yul\":1566:1575   */\n      0x00\n        /* \"#utility.yul\":1599:1636   */\n      tag_192\n        /* \"#utility.yul\":1630:1635   */\n      dup3\n        /* \"#utility.yul\":1599:1636   */\n      tag_144\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":1586:1636   */\n      swap1\n      pop\n        /* \"#utility.yul\":1503:1642   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1648:1805   */\n    tag_146:\n        /* \"#utility.yul\":1748:1798   */\n      tag_194\n        /* \"#utility.yul\":1792:1797   */\n      dup2\n        /* \"#utility.yul\":1748:1798   */\n      tag_145\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":1743:1746   */\n      dup3\n        /* \"#utility.yul\":1736:1799   */\n      mstore\n        /* \"#utility.yul\":1648:1805   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1811:2059   */\n    tag_19:\n        /* \"#utility.yul\":1917:1921   */\n      0x00\n        /* \"#utility.yul\":1955:1957   */\n      0x20\n        /* \"#utility.yul\":1944:1953   */\n      dup3\n        /* \"#utility.yul\":1940:1958   */\n      add\n        /* \"#utility.yul\":1932:1958   */\n      swap1\n      pop\n        /* \"#utility.yul\":1968:2052   */\n      tag_196\n        /* \"#utility.yul\":2049:2050   */\n      0x00\n        /* \"#utility.yul\":2038:2047   */\n      dup4\n        /* \"#utility.yul\":2034:2051   */\n      add\n        /* \"#utility.yul\":2025:2031   */\n      dup5\n        /* \"#utility.yul\":1968:2052   */\n      tag_146\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":1811:2059   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2065:2183   */\n    tag_147:\n        /* \"#utility.yul\":2152:2176   */\n      tag_198\n        /* \"#utility.yul\":2170:2175   */\n      dup2\n        /* \"#utility.yul\":2152:2176   */\n      tag_138\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":2147:2150   */\n      dup3\n        /* \"#utility.yul\":2140:2177   */\n      mstore\n        /* \"#utility.yul\":2065:2183   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2189:2411   */\n    tag_23:\n        /* \"#utility.yul\":2282:2286   */\n      0x00\n        /* \"#utility.yul\":2320:2322   */\n      0x20\n        /* \"#utility.yul\":2309:2318   */\n      dup3\n        /* \"#utility.yul\":2305:2323   */\n      add\n        /* \"#utility.yul\":2297:2323   */\n      swap1\n      pop\n        /* \"#utility.yul\":2333:2404   */\n      tag_200\n        /* \"#utility.yul\":2401:2402   */\n      0x00\n        /* \"#utility.yul\":2390:2399   */\n      dup4\n        /* \"#utility.yul\":2386:2403   */\n      add\n        /* \"#utility.yul\":2377:2383   */\n      dup5\n        /* \"#utility.yul\":2333:2404   */\n      tag_147\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":2189:2411   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2417:2513   */\n    tag_148:\n        /* \"#utility.yul\":2454:2461   */\n      0x00\n        /* \"#utility.yul\":2483:2507   */\n      tag_202\n        /* \"#utility.yul\":2501:2506   */\n      dup3\n        /* \"#utility.yul\":2483:2507   */\n      tag_141\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":2472:2507   */\n      swap1\n      pop\n        /* \"#utility.yul\":2417:2513   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2519:2637   */\n    tag_149:\n        /* \"#utility.yul\":2606:2630   */\n      tag_204\n        /* \"#utility.yul\":2624:2629   */\n      dup2\n        /* \"#utility.yul\":2606:2630   */\n      tag_148\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":2601:2604   */\n      dup3\n        /* \"#utility.yul\":2594:2631   */\n      mstore\n        /* \"#utility.yul\":2519:2637   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2643:2865   */\n    tag_30:\n        /* \"#utility.yul\":2736:2740   */\n      0x00\n        /* \"#utility.yul\":2774:2776   */\n      0x20\n        /* \"#utility.yul\":2763:2772   */\n      dup3\n        /* \"#utility.yul\":2759:2777   */\n      add\n        /* \"#utility.yul\":2751:2777   */\n      swap1\n      pop\n        /* \"#utility.yul\":2787:2858   */\n      tag_206\n        /* \"#utility.yul\":2855:2856   */\n      0x00\n        /* \"#utility.yul\":2844:2853   */\n      dup4\n        /* \"#utility.yul\":2840:2857   */\n      add\n        /* \"#utility.yul\":2831:2837   */\n      dup5\n        /* \"#utility.yul\":2787:2858   */\n      tag_149\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":2643:2865   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2871:2993   */\n    tag_150:\n        /* \"#utility.yul\":2944:2968   */\n      tag_208\n        /* \"#utility.yul\":2962:2967   */\n      dup2\n        /* \"#utility.yul\":2944:2968   */\n      tag_148\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":2937:2942   */\n      dup2\n        /* \"#utility.yul\":2934:2969   */\n      eq\n        /* \"#utility.yul\":2924:2987   */\n      tag_209\n      jumpi\n        /* \"#utility.yul\":2983:2984   */\n      0x00\n        /* \"#utility.yul\":2980:2981   */\n      dup1\n        /* \"#utility.yul\":2973:2985   */\n      revert\n        /* \"#utility.yul\":2924:2987   */\n    tag_209:\n        /* \"#utility.yul\":2871:2993   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2999:3138   */\n    tag_151:\n        /* \"#utility.yul\":3045:3050   */\n      0x00\n        /* \"#utility.yul\":3083:3089   */\n      dup2\n        /* \"#utility.yul\":3070:3090   */\n      calldataload\n        /* \"#utility.yul\":3061:3090   */\n      swap1\n      pop\n        /* \"#utility.yul\":3099:3132   */\n      tag_211\n        /* \"#utility.yul\":3126:3131   */\n      dup2\n        /* \"#utility.yul\":3099:3132   */\n      tag_150\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":2999:3138   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3144:3473   */\n    tag_39:\n        /* \"#utility.yul\":3203:3209   */\n      0x00\n        /* \"#utility.yul\":3252:3254   */\n      0x20\n        /* \"#utility.yul\":3240:3249   */\n      dup3\n        /* \"#utility.yul\":3231:3238   */\n      dup5\n        /* \"#utility.yul\":3227:3250   */\n      sub\n        /* \"#utility.yul\":3223:3255   */\n      slt\n        /* \"#utility.yul\":3220:3339   */\n      iszero\n      tag_213\n      jumpi\n        /* \"#utility.yul\":3258:3337   */\n      tag_214\n      tag_136\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":3220:3339   */\n    tag_213:\n        /* \"#utility.yul\":3378:3379   */\n      0x00\n        /* \"#utility.yul\":3403:3456   */\n      tag_215\n        /* \"#utility.yul\":3448:3455   */\n      dup5\n        /* \"#utility.yul\":3439:3445   */\n      dup3\n        /* \"#utility.yul\":3428:3437   */\n      dup6\n        /* \"#utility.yul\":3424:3446   */\n      add\n        /* \"#utility.yul\":3403:3456   */\n      tag_151\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":3393:3456   */\n      swap2\n      pop\n        /* \"#utility.yul\":3349:3466   */\n      pop\n        /* \"#utility.yul\":3144:3473   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3479:3659   */\n    tag_152:\n        /* \"#utility.yul\":3527:3604   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3524:3525   */\n      0x00\n        /* \"#utility.yul\":3517:3605   */\n      mstore\n        /* \"#utility.yul\":3624:3628   */\n      0x11\n        /* \"#utility.yul\":3621:3622   */\n      0x04\n        /* \"#utility.yul\":3614:3629   */\n      mstore\n        /* \"#utility.yul\":3648:3652   */\n      0x24\n        /* \"#utility.yul\":3645:3646   */\n      0x00\n        /* \"#utility.yul\":3638:3653   */\n      revert\n        /* \"#utility.yul\":3665:4075   */\n    tag_43:\n        /* \"#utility.yul\":3705:3712   */\n      0x00\n        /* \"#utility.yul\":3728:3748   */\n      tag_218\n        /* \"#utility.yul\":3746:3747   */\n      dup3\n        /* \"#utility.yul\":3728:3748   */\n      tag_138\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":3723:3748   */\n      swap2\n      pop\n        /* \"#utility.yul\":3762:3782   */\n      tag_219\n        /* \"#utility.yul\":3780:3781   */\n      dup4\n        /* \"#utility.yul\":3762:3782   */\n      tag_138\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":3757:3782   */\n      swap3\n      pop\n        /* \"#utility.yul\":3817:3818   */\n      dup3\n        /* \"#utility.yul\":3814:3815   */\n      dup3\n        /* \"#utility.yul\":3810:3819   */\n      mul\n        /* \"#utility.yul\":3839:3869   */\n      tag_220\n        /* \"#utility.yul\":3857:3868   */\n      dup2\n        /* \"#utility.yul\":3839:3869   */\n      tag_138\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":3828:3869   */\n      swap2\n      pop\n        /* \"#utility.yul\":4018:4019   */\n      dup3\n        /* \"#utility.yul\":4009:4016   */\n      dup3\n        /* \"#utility.yul\":4005:4020   */\n      div\n        /* \"#utility.yul\":4002:4003   */\n      dup5\n        /* \"#utility.yul\":3999:4021   */\n      eq\n        /* \"#utility.yul\":3979:3980   */\n      dup4\n        /* \"#utility.yul\":3972:3981   */\n      iszero\n        /* \"#utility.yul\":3952:4035   */\n      or\n        /* \"#utility.yul\":3929:4068   */\n      tag_221\n      jumpi\n        /* \"#utility.yul\":4048:4066   */\n      tag_222\n      tag_152\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":3929:4068   */\n    tag_221:\n        /* \"#utility.yul\":3713:4075   */\n      pop\n        /* \"#utility.yul\":3665:4075   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4081:4261   */\n    tag_153:\n        /* \"#utility.yul\":4129:4206   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4126:4127   */\n      0x00\n        /* \"#utility.yul\":4119:4207   */\n      mstore\n        /* \"#utility.yul\":4226:4230   */\n      0x12\n        /* \"#utility.yul\":4223:4224   */\n      0x04\n        /* \"#utility.yul\":4216:4231   */\n      mstore\n        /* \"#utility.yul\":4250:4254   */\n      0x24\n        /* \"#utility.yul\":4247:4248   */\n      0x00\n        /* \"#utility.yul\":4240:4255   */\n      revert\n        /* \"#utility.yul\":4267:4452   */\n    tag_45:\n        /* \"#utility.yul\":4307:4308   */\n      0x00\n        /* \"#utility.yul\":4324:4344   */\n      tag_225\n        /* \"#utility.yul\":4342:4343   */\n      dup3\n        /* \"#utility.yul\":4324:4344   */\n      tag_138\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":4319:4344   */\n      swap2\n      pop\n        /* \"#utility.yul\":4358:4378   */\n      tag_226\n        /* \"#utility.yul\":4376:4377   */\n      dup4\n        /* \"#utility.yul\":4358:4378   */\n      tag_138\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":4353:4378   */\n      swap3\n      pop\n        /* \"#utility.yul\":4397:4398   */\n      dup3\n        /* \"#utility.yul\":4387:4422   */\n      tag_227\n      jumpi\n        /* \"#utility.yul\":4402:4420   */\n      tag_228\n      tag_153\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":4387:4422   */\n    tag_227:\n        /* \"#utility.yul\":4444:4445   */\n      dup3\n        /* \"#utility.yul\":4441:4442   */\n      dup3\n        /* \"#utility.yul\":4437:4446   */\n      div\n        /* \"#utility.yul\":4432:4446   */\n      swap1\n      pop\n        /* \"#utility.yul\":4267:4452   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4458:4601   */\n    tag_154:\n        /* \"#utility.yul\":4515:4520   */\n      0x00\n        /* \"#utility.yul\":4546:4552   */\n      dup2\n        /* \"#utility.yul\":4540:4553   */\n      mload\n        /* \"#utility.yul\":4531:4553   */\n      swap1\n      pop\n        /* \"#utility.yul\":4562:4595   */\n      tag_230\n        /* \"#utility.yul\":4589:4594   */\n      dup2\n        /* \"#utility.yul\":4562:4595   */\n      tag_139\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":4458:4601   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4607:4958   */\n    tag_50:\n        /* \"#utility.yul\":4677:4683   */\n      0x00\n        /* \"#utility.yul\":4726:4728   */\n      0x20\n        /* \"#utility.yul\":4714:4723   */\n      dup3\n        /* \"#utility.yul\":4705:4712   */\n      dup5\n        /* \"#utility.yul\":4701:4724   */\n      sub\n        /* \"#utility.yul\":4697:4729   */\n      slt\n        /* \"#utility.yul\":4694:4813   */\n      iszero\n      tag_232\n      jumpi\n        /* \"#utility.yul\":4732:4811   */\n      tag_233\n      tag_136\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":4694:4813   */\n    tag_232:\n        /* \"#utility.yul\":4852:4853   */\n      0x00\n        /* \"#utility.yul\":4877:4941   */\n      tag_234\n        /* \"#utility.yul\":4933:4940   */\n      dup5\n        /* \"#utility.yul\":4924:4930   */\n      dup3\n        /* \"#utility.yul\":4913:4922   */\n      dup6\n        /* \"#utility.yul\":4909:4931   */\n      add\n        /* \"#utility.yul\":4877:4941   */\n      tag_154\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":4867:4941   */\n      swap2\n      pop\n        /* \"#utility.yul\":4823:4951   */\n      pop\n        /* \"#utility.yul\":4607:4958   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4964:5133   */\n    tag_155:\n        /* \"#utility.yul\":5048:5059   */\n      0x00\n        /* \"#utility.yul\":5082:5088   */\n      dup3\n        /* \"#utility.yul\":5077:5080   */\n      dup3\n        /* \"#utility.yul\":5070:5089   */\n      mstore\n        /* \"#utility.yul\":5122:5126   */\n      0x20\n        /* \"#utility.yul\":5117:5120   */\n      dup3\n        /* \"#utility.yul\":5113:5127   */\n      add\n        /* \"#utility.yul\":5098:5127   */\n      swap1\n      pop\n        /* \"#utility.yul\":4964:5133   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5139:5319   */\n    tag_156:\n        /* \"#utility.yul\":5279:5311   */\n      0x496e73756666696369656e742062616c616e6365206f6620546f6b656e410000\n        /* \"#utility.yul\":5275:5276   */\n      0x00\n        /* \"#utility.yul\":5267:5273   */\n      dup3\n        /* \"#utility.yul\":5263:5277   */\n      add\n        /* \"#utility.yul\":5256:5312   */\n      mstore\n        /* \"#utility.yul\":5139:5319   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5325:5691   */\n    tag_157:\n        /* \"#utility.yul\":5467:5470   */\n      0x00\n        /* \"#utility.yul\":5488:5555   */\n      tag_238\n        /* \"#utility.yul\":5552:5554   */\n      0x1e\n        /* \"#utility.yul\":5547:5550   */\n      dup4\n        /* \"#utility.yul\":5488:5555   */\n      tag_155\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":5481:5555   */\n      swap2\n      pop\n        /* \"#utility.yul\":5564:5657   */\n      tag_239\n        /* \"#utility.yul\":5653:5656   */\n      dup3\n        /* \"#utility.yul\":5564:5657   */\n      tag_156\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":5682:5684   */\n      0x20\n        /* \"#utility.yul\":5677:5680   */\n      dup3\n        /* \"#utility.yul\":5673:5685   */\n      add\n        /* \"#utility.yul\":5666:5685   */\n      swap1\n      pop\n        /* \"#utility.yul\":5325:5691   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5697:6116   */\n    tag_53:\n        /* \"#utility.yul\":5863:5867   */\n      0x00\n        /* \"#utility.yul\":5901:5903   */\n      0x20\n        /* \"#utility.yul\":5890:5899   */\n      dup3\n        /* \"#utility.yul\":5886:5904   */\n      add\n        /* \"#utility.yul\":5878:5904   */\n      swap1\n      pop\n        /* \"#utility.yul\":5950:5959   */\n      dup2\n        /* \"#utility.yul\":5944:5948   */\n      dup2\n        /* \"#utility.yul\":5940:5960   */\n      sub\n        /* \"#utility.yul\":5936:5937   */\n      0x00\n        /* \"#utility.yul\":5925:5934   */\n      dup4\n        /* \"#utility.yul\":5921:5938   */\n      add\n        /* \"#utility.yul\":5914:5961   */\n      mstore\n        /* \"#utility.yul\":5978:6109   */\n      tag_241\n        /* \"#utility.yul\":6104:6108   */\n      dup2\n        /* \"#utility.yul\":5978:6109   */\n      tag_157\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":5970:6109   */\n      swap1\n      pop\n        /* \"#utility.yul\":5697:6116   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6122:6302   */\n    tag_158:\n        /* \"#utility.yul\":6262:6294   */\n      0x496e73756666696369656e742062616c616e6365206f6620546f6b656e420000\n        /* \"#utility.yul\":6258:6259   */\n      0x00\n        /* \"#utility.yul\":6250:6256   */\n      dup3\n        /* \"#utility.yul\":6246:6260   */\n      add\n        /* \"#utility.yul\":6239:6295   */\n      mstore\n        /* \"#utility.yul\":6122:6302   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6308:6674   */\n    tag_159:\n        /* \"#utility.yul\":6450:6453   */\n      0x00\n        /* \"#utility.yul\":6471:6538   */\n      tag_244\n        /* \"#utility.yul\":6535:6537   */\n      0x1e\n        /* \"#utility.yul\":6530:6533   */\n      dup4\n        /* \"#utility.yul\":6471:6538   */\n      tag_155\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":6464:6538   */\n      swap2\n      pop\n        /* \"#utility.yul\":6547:6640   */\n      tag_245\n        /* \"#utility.yul\":6636:6639   */\n      dup3\n        /* \"#utility.yul\":6547:6640   */\n      tag_158\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":6665:6667   */\n      0x20\n        /* \"#utility.yul\":6660:6663   */\n      dup3\n        /* \"#utility.yul\":6656:6668   */\n      add\n        /* \"#utility.yul\":6649:6668   */\n      swap1\n      pop\n        /* \"#utility.yul\":6308:6674   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6680:7099   */\n    tag_60:\n        /* \"#utility.yul\":6846:6850   */\n      0x00\n        /* \"#utility.yul\":6884:6886   */\n      0x20\n        /* \"#utility.yul\":6873:6882   */\n      dup3\n        /* \"#utility.yul\":6869:6887   */\n      add\n        /* \"#utility.yul\":6861:6887   */\n      swap1\n      pop\n        /* \"#utility.yul\":6933:6942   */\n      dup2\n        /* \"#utility.yul\":6927:6931   */\n      dup2\n        /* \"#utility.yul\":6923:6943   */\n      sub\n        /* \"#utility.yul\":6919:6920   */\n      0x00\n        /* \"#utility.yul\":6908:6917   */\n      dup4\n        /* \"#utility.yul\":6904:6921   */\n      add\n        /* \"#utility.yul\":6897:6944   */\n      mstore\n        /* \"#utility.yul\":6961:7092   */\n      tag_247\n        /* \"#utility.yul\":7087:7091   */\n      dup2\n        /* \"#utility.yul\":6961:7092   */\n      tag_159\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":6953:7092   */\n      swap1\n      pop\n        /* \"#utility.yul\":6680:7099   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7105:7437   */\n    tag_66:\n        /* \"#utility.yul\":7226:7230   */\n      0x00\n        /* \"#utility.yul\":7264:7266   */\n      0x40\n        /* \"#utility.yul\":7253:7262   */\n      dup3\n        /* \"#utility.yul\":7249:7267   */\n      add\n        /* \"#utility.yul\":7241:7267   */\n      swap1\n      pop\n        /* \"#utility.yul\":7277:7348   */\n      tag_249\n        /* \"#utility.yul\":7345:7346   */\n      0x00\n        /* \"#utility.yul\":7334:7343   */\n      dup4\n        /* \"#utility.yul\":7330:7347   */\n      add\n        /* \"#utility.yul\":7321:7327   */\n      dup6\n        /* \"#utility.yul\":7277:7348   */\n      tag_147\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":7358:7430   */\n      tag_250\n        /* \"#utility.yul\":7426:7428   */\n      0x20\n        /* \"#utility.yul\":7415:7424   */\n      dup4\n        /* \"#utility.yul\":7411:7429   */\n      add\n        /* \"#utility.yul\":7402:7408   */\n      dup5\n        /* \"#utility.yul\":7358:7430   */\n      tag_147\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":7105:7437   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7443:7606   */\n    tag_160:\n        /* \"#utility.yul\":7583:7598   */\n      0x4e6f7420746865206f776e657200000000000000000000000000000000000000\n        /* \"#utility.yul\":7579:7580   */\n      0x00\n        /* \"#utility.yul\":7571:7577   */\n      dup3\n        /* \"#utility.yul\":7567:7581   */\n      add\n        /* \"#utility.yul\":7560:7599   */\n      mstore\n        /* \"#utility.yul\":7443:7606   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7612:7978   */\n    tag_161:\n        /* \"#utility.yul\":7754:7757   */\n      0x00\n        /* \"#utility.yul\":7775:7842   */\n      tag_253\n        /* \"#utility.yul\":7839:7841   */\n      0x0d\n        /* \"#utility.yul\":7834:7837   */\n      dup4\n        /* \"#utility.yul\":7775:7842   */\n      tag_155\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":7768:7842   */\n      swap2\n      pop\n        /* \"#utility.yul\":7851:7944   */\n      tag_254\n        /* \"#utility.yul\":7940:7943   */\n      dup3\n        /* \"#utility.yul\":7851:7944   */\n      tag_160\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":7969:7971   */\n      0x20\n        /* \"#utility.yul\":7964:7967   */\n      dup3\n        /* \"#utility.yul\":7960:7972   */\n      add\n        /* \"#utility.yul\":7953:7972   */\n      swap1\n      pop\n        /* \"#utility.yul\":7612:7978   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7984:8403   */\n    tag_70:\n        /* \"#utility.yul\":8150:8154   */\n      0x00\n        /* \"#utility.yul\":8188:8190   */\n      0x20\n        /* \"#utility.yul\":8177:8186   */\n      dup3\n        /* \"#utility.yul\":8173:8191   */\n      add\n        /* \"#utility.yul\":8165:8191   */\n      swap1\n      pop\n        /* \"#utility.yul\":8237:8246   */\n      dup2\n        /* \"#utility.yul\":8231:8235   */\n      dup2\n        /* \"#utility.yul\":8227:8247   */\n      sub\n        /* \"#utility.yul\":8223:8224   */\n      0x00\n        /* \"#utility.yul\":8212:8221   */\n      dup4\n        /* \"#utility.yul\":8208:8225   */\n      add\n        /* \"#utility.yul\":8201:8248   */\n      mstore\n        /* \"#utility.yul\":8265:8396   */\n      tag_256\n        /* \"#utility.yul\":8391:8395   */\n      dup2\n        /* \"#utility.yul\":8265:8396   */\n      tag_161\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":8257:8396   */\n      swap1\n      pop\n        /* \"#utility.yul\":7984:8403   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8409:8851   */\n    tag_97:\n        /* \"#utility.yul\":8558:8562   */\n      0x00\n        /* \"#utility.yul\":8596:8598   */\n      0x60\n        /* \"#utility.yul\":8585:8594   */\n      dup3\n        /* \"#utility.yul\":8581:8599   */\n      add\n        /* \"#utility.yul\":8573:8599   */\n      swap1\n      pop\n        /* \"#utility.yul\":8609:8680   */\n      tag_258\n        /* \"#utility.yul\":8677:8678   */\n      0x00\n        /* \"#utility.yul\":8666:8675   */\n      dup4\n        /* \"#utility.yul\":8662:8679   */\n      add\n        /* \"#utility.yul\":8653:8659   */\n      dup7\n        /* \"#utility.yul\":8609:8680   */\n      tag_149\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":8690:8762   */\n      tag_259\n        /* \"#utility.yul\":8758:8760   */\n      0x20\n        /* \"#utility.yul\":8747:8756   */\n      dup4\n        /* \"#utility.yul\":8743:8761   */\n      add\n        /* \"#utility.yul\":8734:8740   */\n      dup6\n        /* \"#utility.yul\":8690:8762   */\n      tag_149\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":8772:8844   */\n      tag_260\n        /* \"#utility.yul\":8840:8842   */\n      0x40\n        /* \"#utility.yul\":8829:8838   */\n      dup4\n        /* \"#utility.yul\":8825:8843   */\n      add\n        /* \"#utility.yul\":8816:8822   */\n      dup5\n        /* \"#utility.yul\":8772:8844   */\n      tag_147\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":8409:8851   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8857:9189   */\n    tag_102:\n        /* \"#utility.yul\":8978:8982   */\n      0x00\n        /* \"#utility.yul\":9016:9018   */\n      0x40\n        /* \"#utility.yul\":9005:9014   */\n      dup3\n        /* \"#utility.yul\":9001:9019   */\n      add\n        /* \"#utility.yul\":8993:9019   */\n      swap1\n      pop\n        /* \"#utility.yul\":9029:9100   */\n      tag_262\n        /* \"#utility.yul\":9097:9098   */\n      0x00\n        /* \"#utility.yul\":9086:9095   */\n      dup4\n        /* \"#utility.yul\":9082:9099   */\n      add\n        /* \"#utility.yul\":9073:9079   */\n      dup6\n        /* \"#utility.yul\":9029:9100   */\n      tag_149\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":9110:9182   */\n      tag_263\n        /* \"#utility.yul\":9178:9180   */\n      0x20\n        /* \"#utility.yul\":9167:9176   */\n      dup4\n        /* \"#utility.yul\":9163:9181   */\n      add\n        /* \"#utility.yul\":9154:9160   */\n      dup5\n        /* \"#utility.yul\":9110:9182   */\n      tag_147\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":8857:9189   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9195:9285   */\n    tag_162:\n        /* \"#utility.yul\":9229:9236   */\n      0x00\n        /* \"#utility.yul\":9272:9277   */\n      dup2\n        /* \"#utility.yul\":9265:9278   */\n      iszero\n        /* \"#utility.yul\":9258:9279   */\n      iszero\n        /* \"#utility.yul\":9247:9279   */\n      swap1\n      pop\n        /* \"#utility.yul\":9195:9285   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9291:9407   */\n    tag_163:\n        /* \"#utility.yul\":9361:9382   */\n      tag_266\n        /* \"#utility.yul\":9376:9381   */\n      dup2\n        /* \"#utility.yul\":9361:9382   */\n      tag_162\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":9354:9359   */\n      dup2\n        /* \"#utility.yul\":9351:9383   */\n      eq\n        /* \"#utility.yul\":9341:9401   */\n      tag_267\n      jumpi\n        /* \"#utility.yul\":9397:9398   */\n      0x00\n        /* \"#utility.yul\":9394:9395   */\n      dup1\n        /* \"#utility.yul\":9387:9399   */\n      revert\n        /* \"#utility.yul\":9341:9401   */\n    tag_267:\n        /* \"#utility.yul\":9291:9407   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9413:9550   */\n    tag_164:\n        /* \"#utility.yul\":9467:9472   */\n      0x00\n        /* \"#utility.yul\":9498:9504   */\n      dup2\n        /* \"#utility.yul\":9492:9505   */\n      mload\n        /* \"#utility.yul\":9483:9505   */\n      swap1\n      pop\n        /* \"#utility.yul\":9514:9544   */\n      tag_269\n        /* \"#utility.yul\":9538:9543   */\n      dup2\n        /* \"#utility.yul\":9514:9544   */\n      tag_163\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":9413:9550   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9556:9901   */\n    tag_108:\n        /* \"#utility.yul\":9623:9629   */\n      0x00\n        /* \"#utility.yul\":9672:9674   */\n      0x20\n        /* \"#utility.yul\":9660:9669   */\n      dup3\n        /* \"#utility.yul\":9651:9658   */\n      dup5\n        /* \"#utility.yul\":9647:9670   */\n      sub\n        /* \"#utility.yul\":9643:9675   */\n      slt\n        /* \"#utility.yul\":9640:9759   */\n      iszero\n      tag_271\n      jumpi\n        /* \"#utility.yul\":9678:9757   */\n      tag_272\n      tag_136\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":9640:9759   */\n    tag_271:\n        /* \"#utility.yul\":9798:9799   */\n      0x00\n        /* \"#utility.yul\":9823:9884   */\n      tag_273\n        /* \"#utility.yul\":9876:9883   */\n      dup5\n        /* \"#utility.yul\":9867:9873   */\n      dup3\n        /* \"#utility.yul\":9856:9865   */\n      dup6\n        /* \"#utility.yul\":9852:9874   */\n      add\n        /* \"#utility.yul\":9823:9884   */\n      tag_164\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":9813:9884   */\n      swap2\n      pop\n        /* \"#utility.yul\":9769:9894   */\n      pop\n        /* \"#utility.yul\":9556:9901   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9907:10005   */\n    tag_165:\n        /* \"#utility.yul\":9958:9964   */\n      0x00\n        /* \"#utility.yul\":9992:9997   */\n      dup2\n        /* \"#utility.yul\":9986:9998   */\n      mload\n        /* \"#utility.yul\":9976:9998   */\n      swap1\n      pop\n        /* \"#utility.yul\":9907:10005   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10011:10158   */\n    tag_166:\n        /* \"#utility.yul\":10112:10123   */\n      0x00\n        /* \"#utility.yul\":10149:10152   */\n      dup2\n        /* \"#utility.yul\":10134:10152   */\n      swap1\n      pop\n        /* \"#utility.yul\":10011:10158   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10164:10410   */\n    tag_167:\n        /* \"#utility.yul\":10245:10246   */\n      0x00\n        /* \"#utility.yul\":10255:10368   */\n    tag_277:\n        /* \"#utility.yul\":10269:10275   */\n      dup4\n        /* \"#utility.yul\":10266:10267   */\n      dup2\n        /* \"#utility.yul\":10263:10276   */\n      lt\n        /* \"#utility.yul\":10255:10368   */\n      iszero\n      tag_279\n      jumpi\n        /* \"#utility.yul\":10354:10355   */\n      dup1\n        /* \"#utility.yul\":10349:10352   */\n      dup3\n        /* \"#utility.yul\":10345:10356   */\n      add\n        /* \"#utility.yul\":10339:10357   */\n      mload\n        /* \"#utility.yul\":10335:10336   */\n      dup2\n        /* \"#utility.yul\":10330:10333   */\n      dup5\n        /* \"#utility.yul\":10326:10337   */\n      add\n        /* \"#utility.yul\":10319:10358   */\n      mstore\n        /* \"#utility.yul\":10291:10293   */\n      0x20\n        /* \"#utility.yul\":10288:10289   */\n      dup2\n        /* \"#utility.yul\":10284:10294   */\n      add\n        /* \"#utility.yul\":10279:10294   */\n      swap1\n      pop\n        /* \"#utility.yul\":10255:10368   */\n      jump(tag_277)\n    tag_279:\n        /* \"#utility.yul\":10402:10403   */\n      0x00\n        /* \"#utility.yul\":10393:10399   */\n      dup5\n        /* \"#utility.yul\":10388:10391   */\n      dup5\n        /* \"#utility.yul\":10384:10400   */\n      add\n        /* \"#utility.yul\":10377:10404   */\n      mstore\n        /* \"#utility.yul\":10226:10410   */\n      pop\n        /* \"#utility.yul\":10164:10410   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10416:10802   */\n    tag_168:\n        /* \"#utility.yul\":10520:10523   */\n      0x00\n        /* \"#utility.yul\":10548:10586   */\n      tag_281\n        /* \"#utility.yul\":10580:10585   */\n      dup3\n        /* \"#utility.yul\":10548:10586   */\n      tag_165\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":10602:10690   */\n      tag_282\n        /* \"#utility.yul\":10683:10689   */\n      dup2\n        /* \"#utility.yul\":10678:10681   */\n      dup6\n        /* \"#utility.yul\":10602:10690   */\n      tag_166\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":10595:10690   */\n      swap4\n      pop\n        /* \"#utility.yul\":10699:10764   */\n      tag_283\n        /* \"#utility.yul\":10757:10763   */\n      dup2\n        /* \"#utility.yul\":10752:10755   */\n      dup6\n        /* \"#utility.yul\":10745:10749   */\n      0x20\n        /* \"#utility.yul\":10738:10743   */\n      dup7\n        /* \"#utility.yul\":10734:10750   */\n      add\n        /* \"#utility.yul\":10699:10764   */\n      tag_167\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":10789:10795   */\n      dup1\n        /* \"#utility.yul\":10784:10787   */\n      dup5\n        /* \"#utility.yul\":10780:10796   */\n      add\n        /* \"#utility.yul\":10773:10796   */\n      swap2\n      pop\n        /* \"#utility.yul\":10524:10802   */\n      pop\n        /* \"#utility.yul\":10416:10802   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10808:11079   */\n    tag_118:\n        /* \"#utility.yul\":10938:10941   */\n      0x00\n        /* \"#utility.yul\":10960:11053   */\n      tag_285\n        /* \"#utility.yul\":11049:11052   */\n      dup3\n        /* \"#utility.yul\":11040:11046   */\n      dup5\n        /* \"#utility.yul\":10960:11053   */\n      tag_168\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":10953:11053   */\n      swap2\n      pop\n        /* \"#utility.yul\":11070:11073   */\n      dup2\n        /* \"#utility.yul\":11063:11073   */\n      swap1\n      pop\n        /* \"#utility.yul\":10808:11079   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122046b51783409d0870b912fa030a152413d87f5604f1194d287be12e1fb2cc1c0164736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_725": {
									"entryPoint": null,
									"id": 725,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 340,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 396,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256_fromMemory": {
									"entryPoint": 418,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 296,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 265,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 362,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 261,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 315,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 371,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1871:5",
										"nodeType": "YulBlock",
										"src": "0:1871:5",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:5",
													"nodeType": "YulBlock",
													"src": "47:35:5",
													"statements": [
														{
															"nativeSrc": "57:19:5",
															"nodeType": "YulAssignment",
															"src": "57:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:5",
																		"nodeType": "YulLiteral",
																		"src": "73:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:5"
																},
																"nativeSrc": "67:9:5",
																"nodeType": "YulFunctionCall",
																"src": "67:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:5",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:5",
														"nodeType": "YulTypedName",
														"src": "40:6:5",
														"type": ""
													}
												],
												"src": "7:75:5"
											},
											{
												"body": {
													"nativeSrc": "177:28:5",
													"nodeType": "YulBlock",
													"src": "177:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:5",
																		"nodeType": "YulLiteral",
																		"src": "194:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:5",
																		"nodeType": "YulLiteral",
																		"src": "197:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:5"
																},
																"nativeSrc": "187:12:5",
																"nodeType": "YulFunctionCall",
																"src": "187:12:5"
															},
															"nativeSrc": "187:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:5"
											},
											{
												"body": {
													"nativeSrc": "300:28:5",
													"nodeType": "YulBlock",
													"src": "300:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:5",
																		"nodeType": "YulLiteral",
																		"src": "317:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:5",
																		"nodeType": "YulLiteral",
																		"src": "320:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:5"
																},
																"nativeSrc": "310:12:5",
																"nodeType": "YulFunctionCall",
																"src": "310:12:5"
															},
															"nativeSrc": "310:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:5"
											},
											{
												"body": {
													"nativeSrc": "379:81:5",
													"nodeType": "YulBlock",
													"src": "379:81:5",
													"statements": [
														{
															"nativeSrc": "389:65:5",
															"nodeType": "YulAssignment",
															"src": "389:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:5",
																		"nodeType": "YulLiteral",
																		"src": "411:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:5"
																},
																"nativeSrc": "400:54:5",
																"nodeType": "YulFunctionCall",
																"src": "400:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:5",
														"nodeType": "YulTypedName",
														"src": "361:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:5",
														"nodeType": "YulTypedName",
														"src": "371:7:5",
														"type": ""
													}
												],
												"src": "334:126:5"
											},
											{
												"body": {
													"nativeSrc": "511:51:5",
													"nodeType": "YulBlock",
													"src": "511:51:5",
													"statements": [
														{
															"nativeSrc": "521:35:5",
															"nodeType": "YulAssignment",
															"src": "521:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:5"
																},
																"nativeSrc": "532:24:5",
																"nodeType": "YulFunctionCall",
																"src": "532:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:5",
														"nodeType": "YulTypedName",
														"src": "493:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:5",
														"nodeType": "YulTypedName",
														"src": "503:7:5",
														"type": ""
													}
												],
												"src": "466:96:5"
											},
											{
												"body": {
													"nativeSrc": "611:79:5",
													"nodeType": "YulBlock",
													"src": "611:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:5",
																"nodeType": "YulBlock",
																"src": "668:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:5",
																					"nodeType": "YulLiteral",
																					"src": "677:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:5",
																					"nodeType": "YulLiteral",
																					"src": "680:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:5"
																			},
																			"nativeSrc": "670:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:5"
																		},
																		"nativeSrc": "670:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:5"
																				},
																				"nativeSrc": "641:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:5"
																		},
																		"nativeSrc": "631:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:5"
																},
																"nativeSrc": "624:43:5",
																"nodeType": "YulFunctionCall",
																"src": "624:43:5"
															},
															"nativeSrc": "621:63:5",
															"nodeType": "YulIf",
															"src": "621:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:5",
														"nodeType": "YulTypedName",
														"src": "604:5:5",
														"type": ""
													}
												],
												"src": "568:122:5"
											},
											{
												"body": {
													"nativeSrc": "759:80:5",
													"nodeType": "YulBlock",
													"src": "759:80:5",
													"statements": [
														{
															"nativeSrc": "769:22:5",
															"nodeType": "YulAssignment",
															"src": "769:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:5"
																},
																"nativeSrc": "778:13:5",
																"nodeType": "YulFunctionCall",
																"src": "778:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:5"
																},
																"nativeSrc": "800:33:5",
																"nodeType": "YulFunctionCall",
																"src": "800:33:5"
															},
															"nativeSrc": "800:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:5"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:5",
														"nodeType": "YulTypedName",
														"src": "737:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:5",
														"nodeType": "YulTypedName",
														"src": "745:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:5",
														"nodeType": "YulTypedName",
														"src": "753:5:5",
														"type": ""
													}
												],
												"src": "696:143:5"
											},
											{
												"body": {
													"nativeSrc": "890:32:5",
													"nodeType": "YulBlock",
													"src": "890:32:5",
													"statements": [
														{
															"nativeSrc": "900:16:5",
															"nodeType": "YulAssignment",
															"src": "900:16:5",
															"value": {
																"name": "value",
																"nativeSrc": "911:5:5",
																"nodeType": "YulIdentifier",
																"src": "911:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "900:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "900:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "845:77:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "872:5:5",
														"nodeType": "YulTypedName",
														"src": "872:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "882:7:5",
														"nodeType": "YulTypedName",
														"src": "882:7:5",
														"type": ""
													}
												],
												"src": "845:77:5"
											},
											{
												"body": {
													"nativeSrc": "971:79:5",
													"nodeType": "YulBlock",
													"src": "971:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1028:16:5",
																"nodeType": "YulBlock",
																"src": "1028:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1037:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1037:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1040:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1040:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1030:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1030:6:5"
																			},
																			"nativeSrc": "1030:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1030:12:5"
																		},
																		"nativeSrc": "1030:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1030:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "994:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "994:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1019:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "1019:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1001:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "1001:17:5"
																				},
																				"nativeSrc": "1001:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1001:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "991:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "991:2:5"
																		},
																		"nativeSrc": "991:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "991:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "984:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "984:6:5"
																},
																"nativeSrc": "984:43:5",
																"nodeType": "YulFunctionCall",
																"src": "984:43:5"
															},
															"nativeSrc": "981:63:5",
															"nodeType": "YulIf",
															"src": "981:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "928:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "964:5:5",
														"nodeType": "YulTypedName",
														"src": "964:5:5",
														"type": ""
													}
												],
												"src": "928:122:5"
											},
											{
												"body": {
													"nativeSrc": "1119:80:5",
													"nodeType": "YulBlock",
													"src": "1119:80:5",
													"statements": [
														{
															"nativeSrc": "1129:22:5",
															"nodeType": "YulAssignment",
															"src": "1129:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1144:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1144:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1138:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1138:5:5"
																},
																"nativeSrc": "1138:13:5",
																"nodeType": "YulFunctionCall",
																"src": "1138:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1129:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1129:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1187:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1187:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1160:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "1160:26:5"
																},
																"nativeSrc": "1160:33:5",
																"nodeType": "YulFunctionCall",
																"src": "1160:33:5"
															},
															"nativeSrc": "1160:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "1160:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "1056:143:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1097:6:5",
														"nodeType": "YulTypedName",
														"src": "1097:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1105:3:5",
														"nodeType": "YulTypedName",
														"src": "1105:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1113:5:5",
														"nodeType": "YulTypedName",
														"src": "1113:5:5",
														"type": ""
													}
												],
												"src": "1056:143:5"
											},
											{
												"body": {
													"nativeSrc": "1316:552:5",
													"nodeType": "YulBlock",
													"src": "1316:552:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1362:83:5",
																"nodeType": "YulBlock",
																"src": "1362:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1364:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "1364:77:5"
																			},
																			"nativeSrc": "1364:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1364:79:5"
																		},
																		"nativeSrc": "1364:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1364:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1337:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1337:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1346:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1346:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1333:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1333:3:5"
																		},
																		"nativeSrc": "1333:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1333:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1358:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1358:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1329:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1329:3:5"
																},
																"nativeSrc": "1329:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1329:32:5"
															},
															"nativeSrc": "1326:119:5",
															"nodeType": "YulIf",
															"src": "1326:119:5"
														},
														{
															"nativeSrc": "1455:128:5",
															"nodeType": "YulBlock",
															"src": "1455:128:5",
															"statements": [
																{
																	"nativeSrc": "1470:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1470:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1484:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1484:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1474:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1474:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1499:74:5",
																	"nodeType": "YulAssignment",
																	"src": "1499:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1545:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "1545:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1556:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1556:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1541:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1541:3:5"
																				},
																				"nativeSrc": "1541:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1541:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1565:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1565:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1509:31:5",
																			"nodeType": "YulIdentifier",
																			"src": "1509:31:5"
																		},
																		"nativeSrc": "1509:64:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1509:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1499:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1499:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1593:129:5",
															"nodeType": "YulBlock",
															"src": "1593:129:5",
															"statements": [
																{
																	"nativeSrc": "1608:16:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1608:16:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1622:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1622:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1612:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1612:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1638:74:5",
																	"nodeType": "YulAssignment",
																	"src": "1638:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1684:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "1684:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1695:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1695:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1680:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1680:3:5"
																				},
																				"nativeSrc": "1680:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1680:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1704:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1704:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1648:31:5",
																			"nodeType": "YulIdentifier",
																			"src": "1648:31:5"
																		},
																		"nativeSrc": "1648:64:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1648:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1638:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1638:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1732:129:5",
															"nodeType": "YulBlock",
															"src": "1732:129:5",
															"statements": [
																{
																	"nativeSrc": "1747:16:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1747:16:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1761:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1761:2:5",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1751:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1751:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1777:74:5",
																	"nodeType": "YulAssignment",
																	"src": "1777:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1823:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "1823:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1834:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1834:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1819:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1819:3:5"
																				},
																				"nativeSrc": "1819:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1819:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1843:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1843:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1787:31:5",
																			"nodeType": "YulIdentifier",
																			"src": "1787:31:5"
																		},
																		"nativeSrc": "1787:64:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1787:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1777:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1777:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256_fromMemory",
												"nativeSrc": "1205:663:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1270:9:5",
														"nodeType": "YulTypedName",
														"src": "1270:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1281:7:5",
														"nodeType": "YulTypedName",
														"src": "1281:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1293:6:5",
														"nodeType": "YulTypedName",
														"src": "1293:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1301:6:5",
														"nodeType": "YulTypedName",
														"src": "1301:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1309:6:5",
														"nodeType": "YulTypedName",
														"src": "1309:6:5",
														"type": ""
													}
												],
												"src": "1205:663:5"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b50604051620013c1380380620013c18339818101604052810190620000369190620001a2565b335f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508260015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600381905550505050620001fb565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620001348262000109565b9050919050565b620001468162000128565b811462000151575f80fd5b50565b5f8151905062000164816200013b565b92915050565b5f819050919050565b6200017e816200016a565b811462000189575f80fd5b50565b5f815190506200019c8162000173565b92915050565b5f805f60608486031215620001bc57620001bb62000105565b5b5f620001cb8682870162000154565b9350506020620001de8682870162000154565b9250506040620001f1868287016200018c565b9150509250925092565b6111b880620002095f395ff3fe608060405234801561000f575f80fd5b5060043610610086575f3560e01c80638da5cb5b116100595780638da5cb5b14610100578063db068e0e1461011e578063e619a4981461013a578063f2fde38b1461015657610086565b8063031020911461008a5780630fc63d10146100a65780633ba0b9a9146100c45780635f64b55b146100e2575b5f80fd5b6100a4600480360381019061009f9190610c57565b610172565b005b6100ae61043a565b6040516100bb9190610cfc565b60405180910390f35b6100cc61045f565b6040516100d99190610d24565b60405180910390f35b6100ea610465565b6040516100f79190610cfc565b60405180910390f35b61010861048a565b6040516101159190610d5d565b60405180910390f35b61013860048036038101906101339190610c57565b6104ad565b005b610154600480360381019061014f9190610c57565b610544565b005b610170600480360381019061016b9190610da0565b61080c565b005b5f670de0b6b3a76400006003548361018a9190610df8565b6101949190610e66565b90508160015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016101f19190610d5d565b602060405180830381865afa15801561020c573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102309190610eaa565b1015610271576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026890610f2f565b60405180910390fd5b8060025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016102cc9190610d5d565b602060405180830381865afa1580156102e7573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061030b9190610eaa565b101561034c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034390610f97565b60405180910390fd5b61039a33308460015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108db909392919063ffffffff16565b6103e6338260025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661095d9092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f77f92a1b6a1a11de8ca49515ad4c1fad45632dd3442167d74b90b304a3c7a758838360405161042e929190610fb5565b60405180910390a25050565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035481565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461053a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053190611026565b60405180910390fd5b8060038190555050565b5f600354670de0b6b3a76400008361055c9190610df8565b6105669190610e66565b90508160025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016105c39190610d5d565b602060405180830381865afa1580156105de573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106029190610eaa565b1015610643576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063a90610f97565b60405180910390fd5b8060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161069e9190610d5d565b602060405180830381865afa1580156106b9573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106dd9190610eaa565b101561071e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071590610f2f565b60405180910390fd5b61076c33308460025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108db909392919063ffffffff16565b6107b8338260015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661095d9092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f77f92a1b6a1a11de8ca49515ad4c1fad45632dd3442167d74b90b304a3c7a7588383604051610800929190610fb5565b60405180910390a25050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610899576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089090611026565b60405180910390fd5b805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610957848573ffffffffffffffffffffffffffffffffffffffff166323b872dd86868660405160240161091093929190611044565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506109dc565b50505050565b6109d7838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401610990929190611079565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506109dc565b505050565b5f610a06828473ffffffffffffffffffffffffffffffffffffffff16610a7190919063ffffffff16565b90505f815114158015610a2a575080806020019051810190610a2891906110d5565b155b15610a6c57826040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401610a639190610d5d565b60405180910390fd5b505050565b6060610a7e83835f610a86565b905092915050565b606081471015610acd57306040517fcd786059000000000000000000000000000000000000000000000000000000008152600401610ac49190610d5d565b60405180910390fd5b5f808573ffffffffffffffffffffffffffffffffffffffff168486604051610af5919061116c565b5f6040518083038185875af1925050503d805f8114610b2f576040519150601f19603f3d011682016040523d82523d5f602084013e610b34565b606091505b5091509150610b44868383610b4f565b925050509392505050565b606082610b6457610b5f82610bdc565b610bd4565b5f8251148015610b8a57505f8473ffffffffffffffffffffffffffffffffffffffff163b145b15610bcc57836040517f9996b315000000000000000000000000000000000000000000000000000000008152600401610bc39190610d5d565b60405180910390fd5b819050610bd5565b5b9392505050565b5f81511115610bee5780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f80fd5b5f819050919050565b610c3681610c24565b8114610c40575f80fd5b50565b5f81359050610c5181610c2d565b92915050565b5f60208284031215610c6c57610c6b610c20565b5b5f610c7984828501610c43565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f610cc4610cbf610cba84610c82565b610ca1565b610c82565b9050919050565b5f610cd582610caa565b9050919050565b5f610ce682610ccb565b9050919050565b610cf681610cdc565b82525050565b5f602082019050610d0f5f830184610ced565b92915050565b610d1e81610c24565b82525050565b5f602082019050610d375f830184610d15565b92915050565b5f610d4782610c82565b9050919050565b610d5781610d3d565b82525050565b5f602082019050610d705f830184610d4e565b92915050565b610d7f81610d3d565b8114610d89575f80fd5b50565b5f81359050610d9a81610d76565b92915050565b5f60208284031215610db557610db4610c20565b5b5f610dc284828501610d8c565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610e0282610c24565b9150610e0d83610c24565b9250828202610e1b81610c24565b91508282048414831517610e3257610e31610dcb565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610e7082610c24565b9150610e7b83610c24565b925082610e8b57610e8a610e39565b5b828204905092915050565b5f81519050610ea481610c2d565b92915050565b5f60208284031215610ebf57610ebe610c20565b5b5f610ecc84828501610e96565b91505092915050565b5f82825260208201905092915050565b7f496e73756666696369656e742062616c616e6365206f6620546f6b656e4100005f82015250565b5f610f19601e83610ed5565b9150610f2482610ee5565b602082019050919050565b5f6020820190508181035f830152610f4681610f0d565b9050919050565b7f496e73756666696369656e742062616c616e6365206f6620546f6b656e4200005f82015250565b5f610f81601e83610ed5565b9150610f8c82610f4d565b602082019050919050565b5f6020820190508181035f830152610fae81610f75565b9050919050565b5f604082019050610fc85f830185610d15565b610fd56020830184610d15565b9392505050565b7f4e6f7420746865206f776e6572000000000000000000000000000000000000005f82015250565b5f611010600d83610ed5565b915061101b82610fdc565b602082019050919050565b5f6020820190508181035f83015261103d81611004565b9050919050565b5f6060820190506110575f830186610d4e565b6110646020830185610d4e565b6110716040830184610d15565b949350505050565b5f60408201905061108c5f830185610d4e565b6110996020830184610d15565b9392505050565b5f8115159050919050565b6110b4816110a0565b81146110be575f80fd5b50565b5f815190506110cf816110ab565b92915050565b5f602082840312156110ea576110e9610c20565b5b5f6110f7848285016110c1565b91505092915050565b5f81519050919050565b5f81905092915050565b5f5b83811015611131578082015181840152602081019050611116565b5f8484015250505050565b5f61114682611100565b611150818561110a565b9350611160818560208601611114565b80840191505092915050565b5f611177828461113c565b91508190509291505056fea264697066735822122046b51783409d0870b912fa030a152413d87f5604f1194d287be12e1fb2cc1c0164736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x13C1 CODESIZE SUB DUP1 PUSH3 0x13C1 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x1A2 JUMP JUMPDEST CALLER PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP POP POP PUSH3 0x1FB JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x134 DUP3 PUSH3 0x109 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x146 DUP2 PUSH3 0x128 JUMP JUMPDEST DUP2 EQ PUSH3 0x151 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x164 DUP2 PUSH3 0x13B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x17E DUP2 PUSH3 0x16A JUMP JUMPDEST DUP2 EQ PUSH3 0x189 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x19C DUP2 PUSH3 0x173 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x1BC JUMPI PUSH3 0x1BB PUSH3 0x105 JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x1CB DUP7 DUP3 DUP8 ADD PUSH3 0x154 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x1DE DUP7 DUP3 DUP8 ADD PUSH3 0x154 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x1F1 DUP7 DUP3 DUP8 ADD PUSH3 0x18C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x11B8 DUP1 PUSH3 0x209 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x86 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x100 JUMPI DUP1 PUSH4 0xDB068E0E EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0xE619A498 EQ PUSH2 0x13A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x156 JUMPI PUSH2 0x86 JUMP JUMPDEST DUP1 PUSH4 0x3102091 EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0xFC63D10 EQ PUSH2 0xA6 JUMPI DUP1 PUSH4 0x3BA0B9A9 EQ PUSH2 0xC4 JUMPI DUP1 PUSH4 0x5F64B55B EQ PUSH2 0xE2 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9F SWAP2 SWAP1 PUSH2 0xC57 JUMP JUMPDEST PUSH2 0x172 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xAE PUSH2 0x43A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBB SWAP2 SWAP1 PUSH2 0xCFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCC PUSH2 0x45F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD9 SWAP2 SWAP1 PUSH2 0xD24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEA PUSH2 0x465 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF7 SWAP2 SWAP1 PUSH2 0xCFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x108 PUSH2 0x48A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x115 SWAP2 SWAP1 PUSH2 0xD5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x138 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x133 SWAP2 SWAP1 PUSH2 0xC57 JUMP JUMPDEST PUSH2 0x4AD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x154 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14F SWAP2 SWAP1 PUSH2 0xC57 JUMP JUMPDEST PUSH2 0x544 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x170 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16B SWAP2 SWAP1 PUSH2 0xDA0 JUMP JUMPDEST PUSH2 0x80C JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH8 0xDE0B6B3A7640000 PUSH1 0x3 SLOAD DUP4 PUSH2 0x18A SWAP2 SWAP1 PUSH2 0xDF8 JUMP JUMPDEST PUSH2 0x194 SWAP2 SWAP1 PUSH2 0xE66 JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0xD5D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x20C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x230 SWAP2 SWAP1 PUSH2 0xEAA JUMP JUMPDEST LT ISZERO PUSH2 0x271 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x268 SWAP1 PUSH2 0xF2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CC SWAP2 SWAP1 PUSH2 0xD5D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2E7 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x30B SWAP2 SWAP1 PUSH2 0xEAA JUMP JUMPDEST LT ISZERO PUSH2 0x34C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x343 SWAP1 PUSH2 0xF97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x39A CALLER ADDRESS DUP5 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8DB SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x3E6 CALLER DUP3 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x95D SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x77F92A1B6A1A11DE8CA49515AD4C1FAD45632DD3442167D74B90B304A3C7A758 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x42E SWAP3 SWAP2 SWAP1 PUSH2 0xFB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x53A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x531 SWAP1 PUSH2 0x1026 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 SLOAD PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x55C SWAP2 SWAP1 PUSH2 0xDF8 JUMP JUMPDEST PUSH2 0x566 SWAP2 SWAP1 PUSH2 0xE66 JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C3 SWAP2 SWAP1 PUSH2 0xD5D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5DE JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x602 SWAP2 SWAP1 PUSH2 0xEAA JUMP JUMPDEST LT ISZERO PUSH2 0x643 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x63A SWAP1 PUSH2 0xF97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69E SWAP2 SWAP1 PUSH2 0xD5D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6B9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6DD SWAP2 SWAP1 PUSH2 0xEAA JUMP JUMPDEST LT ISZERO PUSH2 0x71E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x715 SWAP1 PUSH2 0xF2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x76C CALLER ADDRESS DUP5 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8DB SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x7B8 CALLER DUP3 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x95D SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x77F92A1B6A1A11DE8CA49515AD4C1FAD45632DD3442167D74B90B304A3C7A758 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x800 SWAP3 SWAP2 SWAP1 PUSH2 0xFB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x899 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x890 SWAP1 PUSH2 0x1026 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x957 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x910 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1044 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x9DC JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x9D7 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x990 SWAP3 SWAP2 SWAP1 PUSH2 0x1079 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x9DC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA06 DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA71 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0xA2A JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xA28 SWAP2 SWAP1 PUSH2 0x10D5 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xA6C JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA63 SWAP2 SWAP1 PUSH2 0xD5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xA7E DUP4 DUP4 PUSH0 PUSH2 0xA86 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0xACD JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAC4 SWAP2 SWAP1 PUSH2 0xD5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0xAF5 SWAP2 SWAP1 PUSH2 0x116C JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xB2F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB34 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xB44 DUP7 DUP4 DUP4 PUSH2 0xB4F JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0xB64 JUMPI PUSH2 0xB5F DUP3 PUSH2 0xBDC JUMP JUMPDEST PUSH2 0xBD4 JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0xB8A JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0xBCC JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC3 SWAP2 SWAP1 PUSH2 0xD5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0xBD5 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0xBEE JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC36 DUP2 PUSH2 0xC24 JUMP JUMPDEST DUP2 EQ PUSH2 0xC40 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC51 DUP2 PUSH2 0xC2D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC6C JUMPI PUSH2 0xC6B PUSH2 0xC20 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC79 DUP5 DUP3 DUP6 ADD PUSH2 0xC43 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xCC4 PUSH2 0xCBF PUSH2 0xCBA DUP5 PUSH2 0xC82 JUMP JUMPDEST PUSH2 0xCA1 JUMP JUMPDEST PUSH2 0xC82 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xCD5 DUP3 PUSH2 0xCAA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xCE6 DUP3 PUSH2 0xCCB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCF6 DUP2 PUSH2 0xCDC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD0F PUSH0 DUP4 ADD DUP5 PUSH2 0xCED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD1E DUP2 PUSH2 0xC24 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD37 PUSH0 DUP4 ADD DUP5 PUSH2 0xD15 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xD47 DUP3 PUSH2 0xC82 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD57 DUP2 PUSH2 0xD3D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD70 PUSH0 DUP4 ADD DUP5 PUSH2 0xD4E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD7F DUP2 PUSH2 0xD3D JUMP JUMPDEST DUP2 EQ PUSH2 0xD89 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD9A DUP2 PUSH2 0xD76 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDB5 JUMPI PUSH2 0xDB4 PUSH2 0xC20 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDC2 DUP5 DUP3 DUP6 ADD PUSH2 0xD8C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xE02 DUP3 PUSH2 0xC24 JUMP JUMPDEST SWAP2 POP PUSH2 0xE0D DUP4 PUSH2 0xC24 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xE1B DUP2 PUSH2 0xC24 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xE32 JUMPI PUSH2 0xE31 PUSH2 0xDCB JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xE70 DUP3 PUSH2 0xC24 JUMP JUMPDEST SWAP2 POP PUSH2 0xE7B DUP4 PUSH2 0xC24 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xE8B JUMPI PUSH2 0xE8A PUSH2 0xE39 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xEA4 DUP2 PUSH2 0xC2D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEBF JUMPI PUSH2 0xEBE PUSH2 0xC20 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xECC DUP5 DUP3 DUP6 ADD PUSH2 0xE96 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365206F6620546F6B656E410000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF19 PUSH1 0x1E DUP4 PUSH2 0xED5 JUMP JUMPDEST SWAP2 POP PUSH2 0xF24 DUP3 PUSH2 0xEE5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF46 DUP2 PUSH2 0xF0D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365206F6620546F6B656E420000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF81 PUSH1 0x1E DUP4 PUSH2 0xED5 JUMP JUMPDEST SWAP2 POP PUSH2 0xF8C DUP3 PUSH2 0xF4D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xFAE DUP2 PUSH2 0xF75 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xFC8 PUSH0 DUP4 ADD DUP6 PUSH2 0xD15 JUMP JUMPDEST PUSH2 0xFD5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD15 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E6F7420746865206F776E657200000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1010 PUSH1 0xD DUP4 PUSH2 0xED5 JUMP JUMPDEST SWAP2 POP PUSH2 0x101B DUP3 PUSH2 0xFDC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x103D DUP2 PUSH2 0x1004 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1057 PUSH0 DUP4 ADD DUP7 PUSH2 0xD4E JUMP JUMPDEST PUSH2 0x1064 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xD4E JUMP JUMPDEST PUSH2 0x1071 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xD15 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x108C PUSH0 DUP4 ADD DUP6 PUSH2 0xD4E JUMP JUMPDEST PUSH2 0x1099 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD15 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10B4 DUP2 PUSH2 0x10A0 JUMP JUMPDEST DUP2 EQ PUSH2 0x10BE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x10CF DUP2 PUSH2 0x10AB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10EA JUMPI PUSH2 0x10E9 PUSH2 0xC20 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x10F7 DUP5 DUP3 DUP6 ADD PUSH2 0x10C1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1131 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1116 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1146 DUP3 PUSH2 0x1100 JUMP JUMPDEST PUSH2 0x1150 DUP2 DUP6 PUSH2 0x110A JUMP JUMPDEST SWAP4 POP PUSH2 0x1160 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1114 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1177 DUP3 DUP5 PUSH2 0x113C JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CHAINID 0xB5 OR DUP4 BLOCKHASH SWAP14 ADDMOD PUSH17 0xB912FA030A152413D87F5604F1194D287B 0xE1 0x2E 0x1F 0xB2 0xCC SHR ADD PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "187:1942:4:-:0;;;545:249;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;667:10;659:5;;:18;;;;;;;;;;;;;;;;;;704:7;688:6;;:24;;;;;;;;;;;;;;;;;;739:7;723:6;;:24;;;;;;;;;;;;;;;;;;773:13;758:12;:28;;;;545:249;;;187:1942;;88:117:5;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:77::-;882:7;911:5;900:16;;845:77;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:663::-;1293:6;1301;1309;1358:2;1346:9;1337:7;1333:23;1329:32;1326:119;;;1364:79;;:::i;:::-;1326:119;1484:1;1509:64;1565:7;1556:6;1545:9;1541:22;1509:64;:::i;:::-;1499:74;;1455:128;1622:2;1648:64;1704:7;1695:6;1684:9;1680:22;1648:64;:::i;:::-;1638:74;;1593:129;1761:2;1787:64;1843:7;1834:6;1823:9;1819:22;1787:64;:::i;:::-;1777:74;;1732:129;1205:663;;;;;:::o;187:1942:4:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_callOptionalReturn_353": {
									"entryPoint": 2524,
									"id": 353,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_revert_655": {
									"entryPoint": 3036,
									"id": 655,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@exchangeRate_674": {
									"entryPoint": 1119,
									"id": 674,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@functionCallWithValue_523": {
									"entryPoint": 2694,
									"id": 523,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@functionCall_477": {
									"entryPoint": 2673,
									"id": 477,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@owner_666": {
									"entryPoint": 1162,
									"id": 666,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_190": {
									"entryPoint": 2267,
									"id": 190,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_163": {
									"entryPoint": 2397,
									"id": 163,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setExchangeRate_869": {
									"entryPoint": 1197,
									"id": 869,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@swapAForB_791": {
									"entryPoint": 370,
									"id": 791,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@swapBForA_857": {
									"entryPoint": 1348,
									"id": 857,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@tokenA_669": {
									"entryPoint": 1082,
									"id": 669,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenB_672": {
									"entryPoint": 1125,
									"id": 672,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_881": {
									"entryPoint": 2060,
									"id": 881,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_615": {
									"entryPoint": 2895,
									"id": 615,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 3468,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 4289,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3139,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 3734,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3488,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 4309,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3159,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 3754,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3406,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 4412,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack": {
									"entryPoint": 3309,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_2489c2847e47b29424caed51f0e2e975c305e94d1dc98ef54bbe32a1fae1be8a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3957,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4100,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e5e86d24105f446628b7770ea89f01e235192c13dc97249afdbb723252e86722_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3853,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3349,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 4460,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3421,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4164,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4217,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed": {
									"entryPoint": 3324,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2489c2847e47b29424caed51f0e2e975c305e94d1dc98ef54bbe32a1fae1be8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3991,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4134,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e5e86d24105f446628b7770ea89f01e235192c13dc97249afdbb723252e86722__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3887,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3364,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 4021,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 4352,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 4362,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3797,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3686,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3576,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3389,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4256,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3202,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3108,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$77_to_t_address": {
									"entryPoint": 3292,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 3275,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 3242,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4372,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 3233,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3531,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 3641,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3104,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_2489c2847e47b29424caed51f0e2e975c305e94d1dc98ef54bbe32a1fae1be8a": {
									"entryPoint": 3917,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5": {
									"entryPoint": 4060,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e5e86d24105f446628b7770ea89f01e235192c13dc97249afdbb723252e86722": {
									"entryPoint": 3813,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3446,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 4267,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3117,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:11082:5",
										"nodeType": "YulBlock",
										"src": "0:11082:5",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:5",
													"nodeType": "YulBlock",
													"src": "47:35:5",
													"statements": [
														{
															"nativeSrc": "57:19:5",
															"nodeType": "YulAssignment",
															"src": "57:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:5",
																		"nodeType": "YulLiteral",
																		"src": "73:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:5"
																},
																"nativeSrc": "67:9:5",
																"nodeType": "YulFunctionCall",
																"src": "67:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:5",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:5",
														"nodeType": "YulTypedName",
														"src": "40:6:5",
														"type": ""
													}
												],
												"src": "7:75:5"
											},
											{
												"body": {
													"nativeSrc": "177:28:5",
													"nodeType": "YulBlock",
													"src": "177:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:5",
																		"nodeType": "YulLiteral",
																		"src": "194:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:5",
																		"nodeType": "YulLiteral",
																		"src": "197:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:5"
																},
																"nativeSrc": "187:12:5",
																"nodeType": "YulFunctionCall",
																"src": "187:12:5"
															},
															"nativeSrc": "187:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:5"
											},
											{
												"body": {
													"nativeSrc": "300:28:5",
													"nodeType": "YulBlock",
													"src": "300:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:5",
																		"nodeType": "YulLiteral",
																		"src": "317:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:5",
																		"nodeType": "YulLiteral",
																		"src": "320:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:5"
																},
																"nativeSrc": "310:12:5",
																"nodeType": "YulFunctionCall",
																"src": "310:12:5"
															},
															"nativeSrc": "310:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:5"
											},
											{
												"body": {
													"nativeSrc": "379:32:5",
													"nodeType": "YulBlock",
													"src": "379:32:5",
													"statements": [
														{
															"nativeSrc": "389:16:5",
															"nodeType": "YulAssignment",
															"src": "389:16:5",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:5",
																"nodeType": "YulIdentifier",
																"src": "400:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:5",
														"nodeType": "YulTypedName",
														"src": "361:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:5",
														"nodeType": "YulTypedName",
														"src": "371:7:5",
														"type": ""
													}
												],
												"src": "334:77:5"
											},
											{
												"body": {
													"nativeSrc": "460:79:5",
													"nodeType": "YulBlock",
													"src": "460:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:5",
																"nodeType": "YulBlock",
																"src": "517:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:5",
																					"nodeType": "YulLiteral",
																					"src": "526:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:5",
																					"nodeType": "YulLiteral",
																					"src": "529:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:5"
																			},
																			"nativeSrc": "519:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:5"
																		},
																		"nativeSrc": "519:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:5"
																				},
																				"nativeSrc": "490:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:5"
																		},
																		"nativeSrc": "480:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:5"
																},
																"nativeSrc": "473:43:5",
																"nodeType": "YulFunctionCall",
																"src": "473:43:5"
															},
															"nativeSrc": "470:63:5",
															"nodeType": "YulIf",
															"src": "470:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:5",
														"nodeType": "YulTypedName",
														"src": "453:5:5",
														"type": ""
													}
												],
												"src": "417:122:5"
											},
											{
												"body": {
													"nativeSrc": "597:87:5",
													"nodeType": "YulBlock",
													"src": "597:87:5",
													"statements": [
														{
															"nativeSrc": "607:29:5",
															"nodeType": "YulAssignment",
															"src": "607:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "629:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "616:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:5"
																},
																"nativeSrc": "616:20:5",
																"nodeType": "YulFunctionCall",
																"src": "616:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "607:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "672:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "645:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:5"
																},
																"nativeSrc": "645:33:5",
																"nodeType": "YulFunctionCall",
																"src": "645:33:5"
															},
															"nativeSrc": "645:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "645:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "545:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "575:6:5",
														"nodeType": "YulTypedName",
														"src": "575:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "583:3:5",
														"nodeType": "YulTypedName",
														"src": "583:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "591:5:5",
														"nodeType": "YulTypedName",
														"src": "591:5:5",
														"type": ""
													}
												],
												"src": "545:139:5"
											},
											{
												"body": {
													"nativeSrc": "756:263:5",
													"nodeType": "YulBlock",
													"src": "756:263:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "802:83:5",
																"nodeType": "YulBlock",
																"src": "802:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "804:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:5"
																			},
																			"nativeSrc": "804:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:5"
																		},
																		"nativeSrc": "804:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "777:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "786:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "773:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:5"
																		},
																		"nativeSrc": "773:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "798:2:5",
																		"nodeType": "YulLiteral",
																		"src": "798:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "769:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:5"
																},
																"nativeSrc": "769:32:5",
																"nodeType": "YulFunctionCall",
																"src": "769:32:5"
															},
															"nativeSrc": "766:119:5",
															"nodeType": "YulIf",
															"src": "766:119:5"
														},
														{
															"nativeSrc": "895:117:5",
															"nodeType": "YulBlock",
															"src": "895:117:5",
															"statements": [
																{
																	"nativeSrc": "910:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "924:1:5",
																		"nodeType": "YulLiteral",
																		"src": "924:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "914:6:5",
																			"nodeType": "YulTypedName",
																			"src": "914:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "939:63:5",
																	"nodeType": "YulAssignment",
																	"src": "939:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "974:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "985:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "970:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:5"
																				},
																				"nativeSrc": "970:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "994:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "949:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:5"
																		},
																		"nativeSrc": "949:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "939:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "690:329:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "726:9:5",
														"nodeType": "YulTypedName",
														"src": "726:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "737:7:5",
														"nodeType": "YulTypedName",
														"src": "737:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "749:6:5",
														"nodeType": "YulTypedName",
														"src": "749:6:5",
														"type": ""
													}
												],
												"src": "690:329:5"
											},
											{
												"body": {
													"nativeSrc": "1070:81:5",
													"nodeType": "YulBlock",
													"src": "1070:81:5",
													"statements": [
														{
															"nativeSrc": "1080:65:5",
															"nodeType": "YulAssignment",
															"src": "1080:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1095:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1095:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1102:42:5",
																		"nodeType": "YulLiteral",
																		"src": "1102:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1091:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1091:3:5"
																},
																"nativeSrc": "1091:54:5",
																"nodeType": "YulFunctionCall",
																"src": "1091:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1080:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "1080:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1025:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1052:5:5",
														"nodeType": "YulTypedName",
														"src": "1052:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1062:7:5",
														"nodeType": "YulTypedName",
														"src": "1062:7:5",
														"type": ""
													}
												],
												"src": "1025:126:5"
											},
											{
												"body": {
													"nativeSrc": "1189:28:5",
													"nodeType": "YulBlock",
													"src": "1189:28:5",
													"statements": [
														{
															"nativeSrc": "1199:12:5",
															"nodeType": "YulAssignment",
															"src": "1199:12:5",
															"value": {
																"name": "value",
																"nativeSrc": "1206:5:5",
																"nodeType": "YulIdentifier",
																"src": "1206:5:5"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1199:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1199:3:5"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1157:60:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1175:5:5",
														"nodeType": "YulTypedName",
														"src": "1175:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1185:3:5",
														"nodeType": "YulTypedName",
														"src": "1185:3:5",
														"type": ""
													}
												],
												"src": "1157:60:5"
											},
											{
												"body": {
													"nativeSrc": "1283:82:5",
													"nodeType": "YulBlock",
													"src": "1283:82:5",
													"statements": [
														{
															"nativeSrc": "1293:66:5",
															"nodeType": "YulAssignment",
															"src": "1293:66:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1351:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "1351:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "1333:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "1333:17:5"
																				},
																				"nativeSrc": "1333:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1333:24:5"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1324:8:5",
																			"nodeType": "YulIdentifier",
																			"src": "1324:8:5"
																		},
																		"nativeSrc": "1324:34:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1324:34:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1306:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "1306:17:5"
																},
																"nativeSrc": "1306:53:5",
																"nodeType": "YulFunctionCall",
																"src": "1306:53:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1293:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "1293:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "1223:142:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1263:5:5",
														"nodeType": "YulTypedName",
														"src": "1263:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1273:9:5",
														"nodeType": "YulTypedName",
														"src": "1273:9:5",
														"type": ""
													}
												],
												"src": "1223:142:5"
											},
											{
												"body": {
													"nativeSrc": "1431:66:5",
													"nodeType": "YulBlock",
													"src": "1431:66:5",
													"statements": [
														{
															"nativeSrc": "1441:50:5",
															"nodeType": "YulAssignment",
															"src": "1441:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1485:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1485:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "1454:30:5",
																	"nodeType": "YulIdentifier",
																	"src": "1454:30:5"
																},
																"nativeSrc": "1454:37:5",
																"nodeType": "YulFunctionCall",
																"src": "1454:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1441:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "1441:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "1371:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1411:5:5",
														"nodeType": "YulTypedName",
														"src": "1411:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1421:9:5",
														"nodeType": "YulTypedName",
														"src": "1421:9:5",
														"type": ""
													}
												],
												"src": "1371:126:5"
											},
											{
												"body": {
													"nativeSrc": "1576:66:5",
													"nodeType": "YulBlock",
													"src": "1576:66:5",
													"statements": [
														{
															"nativeSrc": "1586:50:5",
															"nodeType": "YulAssignment",
															"src": "1586:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1630:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1630:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "1599:30:5",
																	"nodeType": "YulIdentifier",
																	"src": "1599:30:5"
																},
																"nativeSrc": "1599:37:5",
																"nodeType": "YulFunctionCall",
																"src": "1599:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1586:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "1586:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$77_to_t_address",
												"nativeSrc": "1503:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1556:5:5",
														"nodeType": "YulTypedName",
														"src": "1556:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1566:9:5",
														"nodeType": "YulTypedName",
														"src": "1566:9:5",
														"type": ""
													}
												],
												"src": "1503:139:5"
											},
											{
												"body": {
													"nativeSrc": "1726:79:5",
													"nodeType": "YulBlock",
													"src": "1726:79:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1743:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "1743:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1792:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1792:5:5"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$77_to_t_address",
																			"nativeSrc": "1748:43:5",
																			"nodeType": "YulIdentifier",
																			"src": "1748:43:5"
																		},
																		"nativeSrc": "1748:50:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1748:50:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1736:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1736:6:5"
																},
																"nativeSrc": "1736:63:5",
																"nodeType": "YulFunctionCall",
																"src": "1736:63:5"
															},
															"nativeSrc": "1736:63:5",
															"nodeType": "YulExpressionStatement",
															"src": "1736:63:5"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack",
												"nativeSrc": "1648:157:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1714:5:5",
														"nodeType": "YulTypedName",
														"src": "1714:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1721:3:5",
														"nodeType": "YulTypedName",
														"src": "1721:3:5",
														"type": ""
													}
												],
												"src": "1648:157:5"
											},
											{
												"body": {
													"nativeSrc": "1922:137:5",
													"nodeType": "YulBlock",
													"src": "1922:137:5",
													"statements": [
														{
															"nativeSrc": "1932:26:5",
															"nodeType": "YulAssignment",
															"src": "1932:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1944:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1944:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1955:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1955:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1940:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1940:3:5"
																},
																"nativeSrc": "1940:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1940:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1932:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1932:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2025:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2025:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2038:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2038:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2049:1:5",
																				"nodeType": "YulLiteral",
																				"src": "2049:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2034:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2034:3:5"
																		},
																		"nativeSrc": "2034:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2034:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack",
																	"nativeSrc": "1968:56:5",
																	"nodeType": "YulIdentifier",
																	"src": "1968:56:5"
																},
																"nativeSrc": "1968:84:5",
																"nodeType": "YulFunctionCall",
																"src": "1968:84:5"
															},
															"nativeSrc": "1968:84:5",
															"nodeType": "YulExpressionStatement",
															"src": "1968:84:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed",
												"nativeSrc": "1811:248:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1894:9:5",
														"nodeType": "YulTypedName",
														"src": "1894:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1906:6:5",
														"nodeType": "YulTypedName",
														"src": "1906:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1917:4:5",
														"nodeType": "YulTypedName",
														"src": "1917:4:5",
														"type": ""
													}
												],
												"src": "1811:248:5"
											},
											{
												"body": {
													"nativeSrc": "2130:53:5",
													"nodeType": "YulBlock",
													"src": "2130:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2147:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2147:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2170:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "2170:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "2152:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "2152:17:5"
																		},
																		"nativeSrc": "2152:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2152:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2140:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2140:6:5"
																},
																"nativeSrc": "2140:37:5",
																"nodeType": "YulFunctionCall",
																"src": "2140:37:5"
															},
															"nativeSrc": "2140:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "2140:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "2065:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2118:5:5",
														"nodeType": "YulTypedName",
														"src": "2118:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2125:3:5",
														"nodeType": "YulTypedName",
														"src": "2125:3:5",
														"type": ""
													}
												],
												"src": "2065:118:5"
											},
											{
												"body": {
													"nativeSrc": "2287:124:5",
													"nodeType": "YulBlock",
													"src": "2287:124:5",
													"statements": [
														{
															"nativeSrc": "2297:26:5",
															"nodeType": "YulAssignment",
															"src": "2297:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2309:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2309:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2320:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2320:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2305:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2305:3:5"
																},
																"nativeSrc": "2305:18:5",
																"nodeType": "YulFunctionCall",
																"src": "2305:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2297:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "2297:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2377:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2377:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2390:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2390:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2401:1:5",
																				"nodeType": "YulLiteral",
																				"src": "2401:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2386:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2386:3:5"
																		},
																		"nativeSrc": "2386:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2386:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2333:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "2333:43:5"
																},
																"nativeSrc": "2333:71:5",
																"nodeType": "YulFunctionCall",
																"src": "2333:71:5"
															},
															"nativeSrc": "2333:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "2333:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2189:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2259:9:5",
														"nodeType": "YulTypedName",
														"src": "2259:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2271:6:5",
														"nodeType": "YulTypedName",
														"src": "2271:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2282:4:5",
														"nodeType": "YulTypedName",
														"src": "2282:4:5",
														"type": ""
													}
												],
												"src": "2189:222:5"
											},
											{
												"body": {
													"nativeSrc": "2462:51:5",
													"nodeType": "YulBlock",
													"src": "2462:51:5",
													"statements": [
														{
															"nativeSrc": "2472:35:5",
															"nodeType": "YulAssignment",
															"src": "2472:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2501:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "2501:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2483:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "2483:17:5"
																},
																"nativeSrc": "2483:24:5",
																"nodeType": "YulFunctionCall",
																"src": "2483:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2472:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "2472:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2417:96:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2444:5:5",
														"nodeType": "YulTypedName",
														"src": "2444:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2454:7:5",
														"nodeType": "YulTypedName",
														"src": "2454:7:5",
														"type": ""
													}
												],
												"src": "2417:96:5"
											},
											{
												"body": {
													"nativeSrc": "2584:53:5",
													"nodeType": "YulBlock",
													"src": "2584:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2601:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2601:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2624:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "2624:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2606:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "2606:17:5"
																		},
																		"nativeSrc": "2606:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2606:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2594:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2594:6:5"
																},
																"nativeSrc": "2594:37:5",
																"nodeType": "YulFunctionCall",
																"src": "2594:37:5"
															},
															"nativeSrc": "2594:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "2594:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "2519:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2572:5:5",
														"nodeType": "YulTypedName",
														"src": "2572:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2579:3:5",
														"nodeType": "YulTypedName",
														"src": "2579:3:5",
														"type": ""
													}
												],
												"src": "2519:118:5"
											},
											{
												"body": {
													"nativeSrc": "2741:124:5",
													"nodeType": "YulBlock",
													"src": "2741:124:5",
													"statements": [
														{
															"nativeSrc": "2751:26:5",
															"nodeType": "YulAssignment",
															"src": "2751:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2763:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2763:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2774:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2774:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2759:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2759:3:5"
																},
																"nativeSrc": "2759:18:5",
																"nodeType": "YulFunctionCall",
																"src": "2759:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2751:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "2751:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2831:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2831:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2844:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2844:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2855:1:5",
																				"nodeType": "YulLiteral",
																				"src": "2855:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2840:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2840:3:5"
																		},
																		"nativeSrc": "2840:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2840:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2787:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "2787:43:5"
																},
																"nativeSrc": "2787:71:5",
																"nodeType": "YulFunctionCall",
																"src": "2787:71:5"
															},
															"nativeSrc": "2787:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "2787:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2643:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2713:9:5",
														"nodeType": "YulTypedName",
														"src": "2713:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2725:6:5",
														"nodeType": "YulTypedName",
														"src": "2725:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2736:4:5",
														"nodeType": "YulTypedName",
														"src": "2736:4:5",
														"type": ""
													}
												],
												"src": "2643:222:5"
											},
											{
												"body": {
													"nativeSrc": "2914:79:5",
													"nodeType": "YulBlock",
													"src": "2914:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2971:16:5",
																"nodeType": "YulBlock",
																"src": "2971:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2980:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2980:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2983:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2983:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2973:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2973:6:5"
																			},
																			"nativeSrc": "2973:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2973:12:5"
																		},
																		"nativeSrc": "2973:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2973:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2937:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "2937:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2962:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "2962:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2944:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "2944:17:5"
																				},
																				"nativeSrc": "2944:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2944:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2934:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "2934:2:5"
																		},
																		"nativeSrc": "2934:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2934:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2927:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2927:6:5"
																},
																"nativeSrc": "2927:43:5",
																"nodeType": "YulFunctionCall",
																"src": "2927:43:5"
															},
															"nativeSrc": "2924:63:5",
															"nodeType": "YulIf",
															"src": "2924:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2871:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2907:5:5",
														"nodeType": "YulTypedName",
														"src": "2907:5:5",
														"type": ""
													}
												],
												"src": "2871:122:5"
											},
											{
												"body": {
													"nativeSrc": "3051:87:5",
													"nodeType": "YulBlock",
													"src": "3051:87:5",
													"statements": [
														{
															"nativeSrc": "3061:29:5",
															"nodeType": "YulAssignment",
															"src": "3061:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3083:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3083:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3070:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "3070:12:5"
																},
																"nativeSrc": "3070:20:5",
																"nodeType": "YulFunctionCall",
																"src": "3070:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3061:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "3061:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3126:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "3126:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3099:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "3099:26:5"
																},
																"nativeSrc": "3099:33:5",
																"nodeType": "YulFunctionCall",
																"src": "3099:33:5"
															},
															"nativeSrc": "3099:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "3099:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2999:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3029:6:5",
														"nodeType": "YulTypedName",
														"src": "3029:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3037:3:5",
														"nodeType": "YulTypedName",
														"src": "3037:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3045:5:5",
														"nodeType": "YulTypedName",
														"src": "3045:5:5",
														"type": ""
													}
												],
												"src": "2999:139:5"
											},
											{
												"body": {
													"nativeSrc": "3210:263:5",
													"nodeType": "YulBlock",
													"src": "3210:263:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "3256:83:5",
																"nodeType": "YulBlock",
																"src": "3256:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3258:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "3258:77:5"
																			},
																			"nativeSrc": "3258:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3258:79:5"
																		},
																		"nativeSrc": "3258:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3258:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3231:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3231:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3240:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3240:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3227:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3227:3:5"
																		},
																		"nativeSrc": "3227:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3227:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3252:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3252:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3223:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3223:3:5"
																},
																"nativeSrc": "3223:32:5",
																"nodeType": "YulFunctionCall",
																"src": "3223:32:5"
															},
															"nativeSrc": "3220:119:5",
															"nodeType": "YulIf",
															"src": "3220:119:5"
														},
														{
															"nativeSrc": "3349:117:5",
															"nodeType": "YulBlock",
															"src": "3349:117:5",
															"statements": [
																{
																	"nativeSrc": "3364:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3364:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3378:1:5",
																		"nodeType": "YulLiteral",
																		"src": "3378:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3368:6:5",
																			"nodeType": "YulTypedName",
																			"src": "3368:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3393:63:5",
																	"nodeType": "YulAssignment",
																	"src": "3393:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3428:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "3428:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3439:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "3439:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3424:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3424:3:5"
																				},
																				"nativeSrc": "3424:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3424:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3448:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3448:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3403:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "3403:20:5"
																		},
																		"nativeSrc": "3403:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3403:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3393:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "3393:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "3144:329:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3180:9:5",
														"nodeType": "YulTypedName",
														"src": "3180:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3191:7:5",
														"nodeType": "YulTypedName",
														"src": "3191:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3203:6:5",
														"nodeType": "YulTypedName",
														"src": "3203:6:5",
														"type": ""
													}
												],
												"src": "3144:329:5"
											},
											{
												"body": {
													"nativeSrc": "3507:152:5",
													"nodeType": "YulBlock",
													"src": "3507:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3524:1:5",
																		"nodeType": "YulLiteral",
																		"src": "3524:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3527:77:5",
																		"nodeType": "YulLiteral",
																		"src": "3527:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3517:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3517:6:5"
																},
																"nativeSrc": "3517:88:5",
																"nodeType": "YulFunctionCall",
																"src": "3517:88:5"
															},
															"nativeSrc": "3517:88:5",
															"nodeType": "YulExpressionStatement",
															"src": "3517:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3621:1:5",
																		"nodeType": "YulLiteral",
																		"src": "3621:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3624:4:5",
																		"nodeType": "YulLiteral",
																		"src": "3624:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3614:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3614:6:5"
																},
																"nativeSrc": "3614:15:5",
																"nodeType": "YulFunctionCall",
																"src": "3614:15:5"
															},
															"nativeSrc": "3614:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "3614:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3645:1:5",
																		"nodeType": "YulLiteral",
																		"src": "3645:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3648:4:5",
																		"nodeType": "YulLiteral",
																		"src": "3648:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3638:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3638:6:5"
																},
																"nativeSrc": "3638:15:5",
																"nodeType": "YulFunctionCall",
																"src": "3638:15:5"
															},
															"nativeSrc": "3638:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "3638:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "3479:180:5",
												"nodeType": "YulFunctionDefinition",
												"src": "3479:180:5"
											},
											{
												"body": {
													"nativeSrc": "3713:362:5",
													"nodeType": "YulBlock",
													"src": "3713:362:5",
													"statements": [
														{
															"nativeSrc": "3723:25:5",
															"nodeType": "YulAssignment",
															"src": "3723:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3746:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "3746:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3728:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "3728:17:5"
																},
																"nativeSrc": "3728:20:5",
																"nodeType": "YulFunctionCall",
																"src": "3728:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "3723:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "3723:1:5"
																}
															]
														},
														{
															"nativeSrc": "3757:25:5",
															"nodeType": "YulAssignment",
															"src": "3757:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "3780:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "3780:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3762:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "3762:17:5"
																},
																"nativeSrc": "3762:20:5",
																"nodeType": "YulFunctionCall",
																"src": "3762:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "3757:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "3757:1:5"
																}
															]
														},
														{
															"nativeSrc": "3791:28:5",
															"nodeType": "YulVariableDeclaration",
															"src": "3791:28:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3814:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "3814:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3817:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "3817:1:5"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "3810:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3810:3:5"
																},
																"nativeSrc": "3810:9:5",
																"nodeType": "YulFunctionCall",
																"src": "3810:9:5"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "3795:11:5",
																	"nodeType": "YulTypedName",
																	"src": "3795:11:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3828:41:5",
															"nodeType": "YulAssignment",
															"src": "3828:41:5",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "3857:11:5",
																		"nodeType": "YulIdentifier",
																		"src": "3857:11:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3839:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "3839:17:5"
																},
																"nativeSrc": "3839:30:5",
																"nodeType": "YulFunctionCall",
																"src": "3839:30:5"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "3828:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "3828:7:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4046:22:5",
																"nodeType": "YulBlock",
																"src": "4046:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4048:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "4048:16:5"
																			},
																			"nativeSrc": "4048:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4048:18:5"
																		},
																		"nativeSrc": "4048:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4048:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "3979:1:5",
																						"nodeType": "YulIdentifier",
																						"src": "3979:1:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "3972:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "3972:6:5"
																				},
																				"nativeSrc": "3972:9:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3972:9:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "4002:1:5",
																						"nodeType": "YulIdentifier",
																						"src": "4002:1:5"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "4009:7:5",
																								"nodeType": "YulIdentifier",
																								"src": "4009:7:5"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "4018:1:5",
																								"nodeType": "YulIdentifier",
																								"src": "4018:1:5"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "4005:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "4005:3:5"
																						},
																						"nativeSrc": "4005:15:5",
																						"nodeType": "YulFunctionCall",
																						"src": "4005:15:5"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "3999:2:5",
																					"nodeType": "YulIdentifier",
																					"src": "3999:2:5"
																				},
																				"nativeSrc": "3999:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3999:22:5"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "3952:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "3952:2:5"
																		},
																		"nativeSrc": "3952:83:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3952:83:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3932:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3932:6:5"
																},
																"nativeSrc": "3932:113:5",
																"nodeType": "YulFunctionCall",
																"src": "3932:113:5"
															},
															"nativeSrc": "3929:139:5",
															"nodeType": "YulIf",
															"src": "3929:139:5"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "3665:410:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3696:1:5",
														"nodeType": "YulTypedName",
														"src": "3696:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3699:1:5",
														"nodeType": "YulTypedName",
														"src": "3699:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "3705:7:5",
														"nodeType": "YulTypedName",
														"src": "3705:7:5",
														"type": ""
													}
												],
												"src": "3665:410:5"
											},
											{
												"body": {
													"nativeSrc": "4109:152:5",
													"nodeType": "YulBlock",
													"src": "4109:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4126:1:5",
																		"nodeType": "YulLiteral",
																		"src": "4126:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4129:77:5",
																		"nodeType": "YulLiteral",
																		"src": "4129:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4119:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4119:6:5"
																},
																"nativeSrc": "4119:88:5",
																"nodeType": "YulFunctionCall",
																"src": "4119:88:5"
															},
															"nativeSrc": "4119:88:5",
															"nodeType": "YulExpressionStatement",
															"src": "4119:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4223:1:5",
																		"nodeType": "YulLiteral",
																		"src": "4223:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4226:4:5",
																		"nodeType": "YulLiteral",
																		"src": "4226:4:5",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4216:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4216:6:5"
																},
																"nativeSrc": "4216:15:5",
																"nodeType": "YulFunctionCall",
																"src": "4216:15:5"
															},
															"nativeSrc": "4216:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "4216:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4247:1:5",
																		"nodeType": "YulLiteral",
																		"src": "4247:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4250:4:5",
																		"nodeType": "YulLiteral",
																		"src": "4250:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4240:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4240:6:5"
																},
																"nativeSrc": "4240:15:5",
																"nodeType": "YulFunctionCall",
																"src": "4240:15:5"
															},
															"nativeSrc": "4240:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "4240:15:5"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "4081:180:5",
												"nodeType": "YulFunctionDefinition",
												"src": "4081:180:5"
											},
											{
												"body": {
													"nativeSrc": "4309:143:5",
													"nodeType": "YulBlock",
													"src": "4309:143:5",
													"statements": [
														{
															"nativeSrc": "4319:25:5",
															"nodeType": "YulAssignment",
															"src": "4319:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4342:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "4342:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4324:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "4324:17:5"
																},
																"nativeSrc": "4324:20:5",
																"nodeType": "YulFunctionCall",
																"src": "4324:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "4319:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "4319:1:5"
																}
															]
														},
														{
															"nativeSrc": "4353:25:5",
															"nodeType": "YulAssignment",
															"src": "4353:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4376:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "4376:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4358:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "4358:17:5"
																},
																"nativeSrc": "4358:20:5",
																"nodeType": "YulFunctionCall",
																"src": "4358:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "4353:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "4353:1:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4400:22:5",
																"nodeType": "YulBlock",
																"src": "4400:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "4402:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "4402:16:5"
																			},
																			"nativeSrc": "4402:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4402:18:5"
																		},
																		"nativeSrc": "4402:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4402:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4397:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "4397:1:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4390:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4390:6:5"
																},
																"nativeSrc": "4390:9:5",
																"nodeType": "YulFunctionCall",
																"src": "4390:9:5"
															},
															"nativeSrc": "4387:35:5",
															"nodeType": "YulIf",
															"src": "4387:35:5"
														},
														{
															"nativeSrc": "4432:14:5",
															"nodeType": "YulAssignment",
															"src": "4432:14:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4441:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "4441:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4444:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "4444:1:5"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4437:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4437:3:5"
																},
																"nativeSrc": "4437:9:5",
																"nodeType": "YulFunctionCall",
																"src": "4437:9:5"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "4432:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "4432:1:5"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "4267:185:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4298:1:5",
														"nodeType": "YulTypedName",
														"src": "4298:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4301:1:5",
														"nodeType": "YulTypedName",
														"src": "4301:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "4307:1:5",
														"nodeType": "YulTypedName",
														"src": "4307:1:5",
														"type": ""
													}
												],
												"src": "4267:185:5"
											},
											{
												"body": {
													"nativeSrc": "4521:80:5",
													"nodeType": "YulBlock",
													"src": "4521:80:5",
													"statements": [
														{
															"nativeSrc": "4531:22:5",
															"nodeType": "YulAssignment",
															"src": "4531:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4546:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4546:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4540:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "4540:5:5"
																},
																"nativeSrc": "4540:13:5",
																"nodeType": "YulFunctionCall",
																"src": "4540:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4531:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "4531:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4589:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "4589:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "4562:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "4562:26:5"
																},
																"nativeSrc": "4562:33:5",
																"nodeType": "YulFunctionCall",
																"src": "4562:33:5"
															},
															"nativeSrc": "4562:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "4562:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "4458:143:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4499:6:5",
														"nodeType": "YulTypedName",
														"src": "4499:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4507:3:5",
														"nodeType": "YulTypedName",
														"src": "4507:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4515:5:5",
														"nodeType": "YulTypedName",
														"src": "4515:5:5",
														"type": ""
													}
												],
												"src": "4458:143:5"
											},
											{
												"body": {
													"nativeSrc": "4684:274:5",
													"nodeType": "YulBlock",
													"src": "4684:274:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "4730:83:5",
																"nodeType": "YulBlock",
																"src": "4730:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4732:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "4732:77:5"
																			},
																			"nativeSrc": "4732:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4732:79:5"
																		},
																		"nativeSrc": "4732:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4732:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4705:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "4705:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4714:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4714:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4701:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4701:3:5"
																		},
																		"nativeSrc": "4701:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4701:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4726:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4726:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4697:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4697:3:5"
																},
																"nativeSrc": "4697:32:5",
																"nodeType": "YulFunctionCall",
																"src": "4697:32:5"
															},
															"nativeSrc": "4694:119:5",
															"nodeType": "YulIf",
															"src": "4694:119:5"
														},
														{
															"nativeSrc": "4823:128:5",
															"nodeType": "YulBlock",
															"src": "4823:128:5",
															"statements": [
																{
																	"nativeSrc": "4838:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4838:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4852:1:5",
																		"nodeType": "YulLiteral",
																		"src": "4852:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4842:6:5",
																			"nodeType": "YulTypedName",
																			"src": "4842:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4867:74:5",
																	"nodeType": "YulAssignment",
																	"src": "4867:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4913:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "4913:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4924:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "4924:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4909:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4909:3:5"
																				},
																				"nativeSrc": "4909:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4909:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4933:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "4933:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "4877:31:5",
																			"nodeType": "YulIdentifier",
																			"src": "4877:31:5"
																		},
																		"nativeSrc": "4877:64:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4877:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4867:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "4867:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "4607:351:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4654:9:5",
														"nodeType": "YulTypedName",
														"src": "4654:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4665:7:5",
														"nodeType": "YulTypedName",
														"src": "4665:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4677:6:5",
														"nodeType": "YulTypedName",
														"src": "4677:6:5",
														"type": ""
													}
												],
												"src": "4607:351:5"
											},
											{
												"body": {
													"nativeSrc": "5060:73:5",
													"nodeType": "YulBlock",
													"src": "5060:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5077:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5077:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5082:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "5082:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5070:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5070:6:5"
																},
																"nativeSrc": "5070:19:5",
																"nodeType": "YulFunctionCall",
																"src": "5070:19:5"
															},
															"nativeSrc": "5070:19:5",
															"nodeType": "YulExpressionStatement",
															"src": "5070:19:5"
														},
														{
															"nativeSrc": "5098:29:5",
															"nodeType": "YulAssignment",
															"src": "5098:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5117:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5117:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5122:4:5",
																		"nodeType": "YulLiteral",
																		"src": "5122:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5113:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5113:3:5"
																},
																"nativeSrc": "5113:14:5",
																"nodeType": "YulFunctionCall",
																"src": "5113:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "5098:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "5098:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "4964:169:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5032:3:5",
														"nodeType": "YulTypedName",
														"src": "5032:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5037:6:5",
														"nodeType": "YulTypedName",
														"src": "5037:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "5048:11:5",
														"nodeType": "YulTypedName",
														"src": "5048:11:5",
														"type": ""
													}
												],
												"src": "4964:169:5"
											},
											{
												"body": {
													"nativeSrc": "5245:74:5",
													"nodeType": "YulBlock",
													"src": "5245:74:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5267:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5267:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5275:1:5",
																				"nodeType": "YulLiteral",
																				"src": "5275:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5263:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5263:3:5"
																		},
																		"nativeSrc": "5263:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5263:14:5"
																	},
																	{
																		"hexValue": "496e73756666696369656e742062616c616e6365206f6620546f6b656e41",
																		"kind": "string",
																		"nativeSrc": "5279:32:5",
																		"nodeType": "YulLiteral",
																		"src": "5279:32:5",
																		"type": "",
																		"value": "Insufficient balance of TokenA"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5256:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5256:6:5"
																},
																"nativeSrc": "5256:56:5",
																"nodeType": "YulFunctionCall",
																"src": "5256:56:5"
															},
															"nativeSrc": "5256:56:5",
															"nodeType": "YulExpressionStatement",
															"src": "5256:56:5"
														}
													]
												},
												"name": "store_literal_in_memory_e5e86d24105f446628b7770ea89f01e235192c13dc97249afdbb723252e86722",
												"nativeSrc": "5139:180:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5237:6:5",
														"nodeType": "YulTypedName",
														"src": "5237:6:5",
														"type": ""
													}
												],
												"src": "5139:180:5"
											},
											{
												"body": {
													"nativeSrc": "5471:220:5",
													"nodeType": "YulBlock",
													"src": "5471:220:5",
													"statements": [
														{
															"nativeSrc": "5481:74:5",
															"nodeType": "YulAssignment",
															"src": "5481:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5547:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5547:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5552:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5552:2:5",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5488:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "5488:58:5"
																},
																"nativeSrc": "5488:67:5",
																"nodeType": "YulFunctionCall",
																"src": "5488:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5481:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5481:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5653:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5653:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e5e86d24105f446628b7770ea89f01e235192c13dc97249afdbb723252e86722",
																	"nativeSrc": "5564:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "5564:88:5"
																},
																"nativeSrc": "5564:93:5",
																"nodeType": "YulFunctionCall",
																"src": "5564:93:5"
															},
															"nativeSrc": "5564:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "5564:93:5"
														},
														{
															"nativeSrc": "5666:19:5",
															"nodeType": "YulAssignment",
															"src": "5666:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5677:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5677:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5682:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5682:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5673:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5673:3:5"
																},
																"nativeSrc": "5673:12:5",
																"nodeType": "YulFunctionCall",
																"src": "5673:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5666:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5666:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e5e86d24105f446628b7770ea89f01e235192c13dc97249afdbb723252e86722_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5325:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5459:3:5",
														"nodeType": "YulTypedName",
														"src": "5459:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5467:3:5",
														"nodeType": "YulTypedName",
														"src": "5467:3:5",
														"type": ""
													}
												],
												"src": "5325:366:5"
											},
											{
												"body": {
													"nativeSrc": "5868:248:5",
													"nodeType": "YulBlock",
													"src": "5868:248:5",
													"statements": [
														{
															"nativeSrc": "5878:26:5",
															"nodeType": "YulAssignment",
															"src": "5878:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5890:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5890:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5901:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5901:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5886:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5886:3:5"
																},
																"nativeSrc": "5886:18:5",
																"nodeType": "YulFunctionCall",
																"src": "5886:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5878:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "5878:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5925:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5925:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5936:1:5",
																				"nodeType": "YulLiteral",
																				"src": "5936:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5921:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5921:3:5"
																		},
																		"nativeSrc": "5921:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5921:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5944:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "5944:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5950:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5950:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5940:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5940:3:5"
																		},
																		"nativeSrc": "5940:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5940:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5914:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5914:6:5"
																},
																"nativeSrc": "5914:47:5",
																"nodeType": "YulFunctionCall",
																"src": "5914:47:5"
															},
															"nativeSrc": "5914:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "5914:47:5"
														},
														{
															"nativeSrc": "5970:139:5",
															"nodeType": "YulAssignment",
															"src": "5970:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6104:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "6104:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e5e86d24105f446628b7770ea89f01e235192c13dc97249afdbb723252e86722_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5978:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "5978:124:5"
																},
																"nativeSrc": "5978:131:5",
																"nodeType": "YulFunctionCall",
																"src": "5978:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5970:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "5970:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e5e86d24105f446628b7770ea89f01e235192c13dc97249afdbb723252e86722__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5697:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5848:9:5",
														"nodeType": "YulTypedName",
														"src": "5848:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5863:4:5",
														"nodeType": "YulTypedName",
														"src": "5863:4:5",
														"type": ""
													}
												],
												"src": "5697:419:5"
											},
											{
												"body": {
													"nativeSrc": "6228:74:5",
													"nodeType": "YulBlock",
													"src": "6228:74:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6250:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "6250:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6258:1:5",
																				"nodeType": "YulLiteral",
																				"src": "6258:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6246:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6246:3:5"
																		},
																		"nativeSrc": "6246:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6246:14:5"
																	},
																	{
																		"hexValue": "496e73756666696369656e742062616c616e6365206f6620546f6b656e42",
																		"kind": "string",
																		"nativeSrc": "6262:32:5",
																		"nodeType": "YulLiteral",
																		"src": "6262:32:5",
																		"type": "",
																		"value": "Insufficient balance of TokenB"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6239:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6239:6:5"
																},
																"nativeSrc": "6239:56:5",
																"nodeType": "YulFunctionCall",
																"src": "6239:56:5"
															},
															"nativeSrc": "6239:56:5",
															"nodeType": "YulExpressionStatement",
															"src": "6239:56:5"
														}
													]
												},
												"name": "store_literal_in_memory_2489c2847e47b29424caed51f0e2e975c305e94d1dc98ef54bbe32a1fae1be8a",
												"nativeSrc": "6122:180:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6220:6:5",
														"nodeType": "YulTypedName",
														"src": "6220:6:5",
														"type": ""
													}
												],
												"src": "6122:180:5"
											},
											{
												"body": {
													"nativeSrc": "6454:220:5",
													"nodeType": "YulBlock",
													"src": "6454:220:5",
													"statements": [
														{
															"nativeSrc": "6464:74:5",
															"nodeType": "YulAssignment",
															"src": "6464:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6530:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6530:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6535:2:5",
																		"nodeType": "YulLiteral",
																		"src": "6535:2:5",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6471:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "6471:58:5"
																},
																"nativeSrc": "6471:67:5",
																"nodeType": "YulFunctionCall",
																"src": "6471:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6464:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6464:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6636:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6636:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2489c2847e47b29424caed51f0e2e975c305e94d1dc98ef54bbe32a1fae1be8a",
																	"nativeSrc": "6547:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "6547:88:5"
																},
																"nativeSrc": "6547:93:5",
																"nodeType": "YulFunctionCall",
																"src": "6547:93:5"
															},
															"nativeSrc": "6547:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "6547:93:5"
														},
														{
															"nativeSrc": "6649:19:5",
															"nodeType": "YulAssignment",
															"src": "6649:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6660:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6660:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6665:2:5",
																		"nodeType": "YulLiteral",
																		"src": "6665:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6656:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6656:3:5"
																},
																"nativeSrc": "6656:12:5",
																"nodeType": "YulFunctionCall",
																"src": "6656:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6649:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6649:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2489c2847e47b29424caed51f0e2e975c305e94d1dc98ef54bbe32a1fae1be8a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6308:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6442:3:5",
														"nodeType": "YulTypedName",
														"src": "6442:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6450:3:5",
														"nodeType": "YulTypedName",
														"src": "6450:3:5",
														"type": ""
													}
												],
												"src": "6308:366:5"
											},
											{
												"body": {
													"nativeSrc": "6851:248:5",
													"nodeType": "YulBlock",
													"src": "6851:248:5",
													"statements": [
														{
															"nativeSrc": "6861:26:5",
															"nodeType": "YulAssignment",
															"src": "6861:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6873:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "6873:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6884:2:5",
																		"nodeType": "YulLiteral",
																		"src": "6884:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6869:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6869:3:5"
																},
																"nativeSrc": "6869:18:5",
																"nodeType": "YulFunctionCall",
																"src": "6869:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6861:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "6861:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6908:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6908:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6919:1:5",
																				"nodeType": "YulLiteral",
																				"src": "6919:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6904:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6904:3:5"
																		},
																		"nativeSrc": "6904:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6904:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6927:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "6927:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6933:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6933:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6923:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6923:3:5"
																		},
																		"nativeSrc": "6923:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6923:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6897:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6897:6:5"
																},
																"nativeSrc": "6897:47:5",
																"nodeType": "YulFunctionCall",
																"src": "6897:47:5"
															},
															"nativeSrc": "6897:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "6897:47:5"
														},
														{
															"nativeSrc": "6953:139:5",
															"nodeType": "YulAssignment",
															"src": "6953:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7087:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "7087:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2489c2847e47b29424caed51f0e2e975c305e94d1dc98ef54bbe32a1fae1be8a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6961:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "6961:124:5"
																},
																"nativeSrc": "6961:131:5",
																"nodeType": "YulFunctionCall",
																"src": "6961:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6953:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "6953:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2489c2847e47b29424caed51f0e2e975c305e94d1dc98ef54bbe32a1fae1be8a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6680:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6831:9:5",
														"nodeType": "YulTypedName",
														"src": "6831:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6846:4:5",
														"nodeType": "YulTypedName",
														"src": "6846:4:5",
														"type": ""
													}
												],
												"src": "6680:419:5"
											},
											{
												"body": {
													"nativeSrc": "7231:206:5",
													"nodeType": "YulBlock",
													"src": "7231:206:5",
													"statements": [
														{
															"nativeSrc": "7241:26:5",
															"nodeType": "YulAssignment",
															"src": "7241:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7253:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "7253:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7264:2:5",
																		"nodeType": "YulLiteral",
																		"src": "7264:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7249:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7249:3:5"
																},
																"nativeSrc": "7249:18:5",
																"nodeType": "YulFunctionCall",
																"src": "7249:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7241:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "7241:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7321:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "7321:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7334:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "7334:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7345:1:5",
																				"nodeType": "YulLiteral",
																				"src": "7345:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7330:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7330:3:5"
																		},
																		"nativeSrc": "7330:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7330:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7277:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "7277:43:5"
																},
																"nativeSrc": "7277:71:5",
																"nodeType": "YulFunctionCall",
																"src": "7277:71:5"
															},
															"nativeSrc": "7277:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "7277:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7402:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "7402:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7415:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "7415:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7426:2:5",
																				"nodeType": "YulLiteral",
																				"src": "7426:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7411:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7411:3:5"
																		},
																		"nativeSrc": "7411:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7411:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7358:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "7358:43:5"
																},
																"nativeSrc": "7358:72:5",
																"nodeType": "YulFunctionCall",
																"src": "7358:72:5"
															},
															"nativeSrc": "7358:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "7358:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "7105:332:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7195:9:5",
														"nodeType": "YulTypedName",
														"src": "7195:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7207:6:5",
														"nodeType": "YulTypedName",
														"src": "7207:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7215:6:5",
														"nodeType": "YulTypedName",
														"src": "7215:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7226:4:5",
														"nodeType": "YulTypedName",
														"src": "7226:4:5",
														"type": ""
													}
												],
												"src": "7105:332:5"
											},
											{
												"body": {
													"nativeSrc": "7549:57:5",
													"nodeType": "YulBlock",
													"src": "7549:57:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7571:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "7571:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7579:1:5",
																				"nodeType": "YulLiteral",
																				"src": "7579:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7567:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7567:3:5"
																		},
																		"nativeSrc": "7567:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7567:14:5"
																	},
																	{
																		"hexValue": "4e6f7420746865206f776e6572",
																		"kind": "string",
																		"nativeSrc": "7583:15:5",
																		"nodeType": "YulLiteral",
																		"src": "7583:15:5",
																		"type": "",
																		"value": "Not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7560:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7560:6:5"
																},
																"nativeSrc": "7560:39:5",
																"nodeType": "YulFunctionCall",
																"src": "7560:39:5"
															},
															"nativeSrc": "7560:39:5",
															"nodeType": "YulExpressionStatement",
															"src": "7560:39:5"
														}
													]
												},
												"name": "store_literal_in_memory_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5",
												"nativeSrc": "7443:163:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7541:6:5",
														"nodeType": "YulTypedName",
														"src": "7541:6:5",
														"type": ""
													}
												],
												"src": "7443:163:5"
											},
											{
												"body": {
													"nativeSrc": "7758:220:5",
													"nodeType": "YulBlock",
													"src": "7758:220:5",
													"statements": [
														{
															"nativeSrc": "7768:74:5",
															"nodeType": "YulAssignment",
															"src": "7768:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7834:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "7834:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7839:2:5",
																		"nodeType": "YulLiteral",
																		"src": "7839:2:5",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7775:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "7775:58:5"
																},
																"nativeSrc": "7775:67:5",
																"nodeType": "YulFunctionCall",
																"src": "7775:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7768:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7768:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7940:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "7940:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5",
																	"nativeSrc": "7851:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "7851:88:5"
																},
																"nativeSrc": "7851:93:5",
																"nodeType": "YulFunctionCall",
																"src": "7851:93:5"
															},
															"nativeSrc": "7851:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "7851:93:5"
														},
														{
															"nativeSrc": "7953:19:5",
															"nodeType": "YulAssignment",
															"src": "7953:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7964:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "7964:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7969:2:5",
																		"nodeType": "YulLiteral",
																		"src": "7969:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7960:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7960:3:5"
																},
																"nativeSrc": "7960:12:5",
																"nodeType": "YulFunctionCall",
																"src": "7960:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7953:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7953:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7612:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7746:3:5",
														"nodeType": "YulTypedName",
														"src": "7746:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7754:3:5",
														"nodeType": "YulTypedName",
														"src": "7754:3:5",
														"type": ""
													}
												],
												"src": "7612:366:5"
											},
											{
												"body": {
													"nativeSrc": "8155:248:5",
													"nodeType": "YulBlock",
													"src": "8155:248:5",
													"statements": [
														{
															"nativeSrc": "8165:26:5",
															"nodeType": "YulAssignment",
															"src": "8165:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8177:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "8177:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8188:2:5",
																		"nodeType": "YulLiteral",
																		"src": "8188:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8173:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8173:3:5"
																},
																"nativeSrc": "8173:18:5",
																"nodeType": "YulFunctionCall",
																"src": "8173:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8165:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "8165:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8212:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "8212:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8223:1:5",
																				"nodeType": "YulLiteral",
																				"src": "8223:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8208:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8208:3:5"
																		},
																		"nativeSrc": "8208:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8208:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8231:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "8231:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8237:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "8237:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8227:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8227:3:5"
																		},
																		"nativeSrc": "8227:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8227:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8201:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8201:6:5"
																},
																"nativeSrc": "8201:47:5",
																"nodeType": "YulFunctionCall",
																"src": "8201:47:5"
															},
															"nativeSrc": "8201:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "8201:47:5"
														},
														{
															"nativeSrc": "8257:139:5",
															"nodeType": "YulAssignment",
															"src": "8257:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8391:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "8391:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8265:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "8265:124:5"
																},
																"nativeSrc": "8265:131:5",
																"nodeType": "YulFunctionCall",
																"src": "8265:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8257:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "8257:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7984:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8135:9:5",
														"nodeType": "YulTypedName",
														"src": "8135:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8150:4:5",
														"nodeType": "YulTypedName",
														"src": "8150:4:5",
														"type": ""
													}
												],
												"src": "7984:419:5"
											},
											{
												"body": {
													"nativeSrc": "8563:288:5",
													"nodeType": "YulBlock",
													"src": "8563:288:5",
													"statements": [
														{
															"nativeSrc": "8573:26:5",
															"nodeType": "YulAssignment",
															"src": "8573:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8585:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "8585:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8596:2:5",
																		"nodeType": "YulLiteral",
																		"src": "8596:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8581:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8581:3:5"
																},
																"nativeSrc": "8581:18:5",
																"nodeType": "YulFunctionCall",
																"src": "8581:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8573:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "8573:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8653:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "8653:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8666:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "8666:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8677:1:5",
																				"nodeType": "YulLiteral",
																				"src": "8677:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8662:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8662:3:5"
																		},
																		"nativeSrc": "8662:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8662:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8609:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "8609:43:5"
																},
																"nativeSrc": "8609:71:5",
																"nodeType": "YulFunctionCall",
																"src": "8609:71:5"
															},
															"nativeSrc": "8609:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "8609:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8734:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "8734:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8747:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "8747:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8758:2:5",
																				"nodeType": "YulLiteral",
																				"src": "8758:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8743:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8743:3:5"
																		},
																		"nativeSrc": "8743:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8743:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8690:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "8690:43:5"
																},
																"nativeSrc": "8690:72:5",
																"nodeType": "YulFunctionCall",
																"src": "8690:72:5"
															},
															"nativeSrc": "8690:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "8690:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "8816:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "8816:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8829:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "8829:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8840:2:5",
																				"nodeType": "YulLiteral",
																				"src": "8840:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8825:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8825:3:5"
																		},
																		"nativeSrc": "8825:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8825:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8772:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "8772:43:5"
																},
																"nativeSrc": "8772:72:5",
																"nodeType": "YulFunctionCall",
																"src": "8772:72:5"
															},
															"nativeSrc": "8772:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "8772:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "8409:442:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8519:9:5",
														"nodeType": "YulTypedName",
														"src": "8519:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8531:6:5",
														"nodeType": "YulTypedName",
														"src": "8531:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8539:6:5",
														"nodeType": "YulTypedName",
														"src": "8539:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8547:6:5",
														"nodeType": "YulTypedName",
														"src": "8547:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8558:4:5",
														"nodeType": "YulTypedName",
														"src": "8558:4:5",
														"type": ""
													}
												],
												"src": "8409:442:5"
											},
											{
												"body": {
													"nativeSrc": "8983:206:5",
													"nodeType": "YulBlock",
													"src": "8983:206:5",
													"statements": [
														{
															"nativeSrc": "8993:26:5",
															"nodeType": "YulAssignment",
															"src": "8993:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9005:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "9005:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9016:2:5",
																		"nodeType": "YulLiteral",
																		"src": "9016:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9001:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9001:3:5"
																},
																"nativeSrc": "9001:18:5",
																"nodeType": "YulFunctionCall",
																"src": "9001:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8993:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "8993:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9073:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "9073:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9086:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "9086:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9097:1:5",
																				"nodeType": "YulLiteral",
																				"src": "9097:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9082:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9082:3:5"
																		},
																		"nativeSrc": "9082:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9082:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9029:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "9029:43:5"
																},
																"nativeSrc": "9029:71:5",
																"nodeType": "YulFunctionCall",
																"src": "9029:71:5"
															},
															"nativeSrc": "9029:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "9029:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9154:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "9154:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9167:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "9167:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9178:2:5",
																				"nodeType": "YulLiteral",
																				"src": "9178:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9163:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9163:3:5"
																		},
																		"nativeSrc": "9163:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9163:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9110:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "9110:43:5"
																},
																"nativeSrc": "9110:72:5",
																"nodeType": "YulFunctionCall",
																"src": "9110:72:5"
															},
															"nativeSrc": "9110:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "9110:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "8857:332:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8947:9:5",
														"nodeType": "YulTypedName",
														"src": "8947:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8959:6:5",
														"nodeType": "YulTypedName",
														"src": "8959:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8967:6:5",
														"nodeType": "YulTypedName",
														"src": "8967:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8978:4:5",
														"nodeType": "YulTypedName",
														"src": "8978:4:5",
														"type": ""
													}
												],
												"src": "8857:332:5"
											},
											{
												"body": {
													"nativeSrc": "9237:48:5",
													"nodeType": "YulBlock",
													"src": "9237:48:5",
													"statements": [
														{
															"nativeSrc": "9247:32:5",
															"nodeType": "YulAssignment",
															"src": "9247:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9272:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "9272:5:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "9265:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "9265:6:5"
																		},
																		"nativeSrc": "9265:13:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9265:13:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9258:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9258:6:5"
																},
																"nativeSrc": "9258:21:5",
																"nodeType": "YulFunctionCall",
																"src": "9258:21:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "9247:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "9247:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "9195:90:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9219:5:5",
														"nodeType": "YulTypedName",
														"src": "9219:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "9229:7:5",
														"nodeType": "YulTypedName",
														"src": "9229:7:5",
														"type": ""
													}
												],
												"src": "9195:90:5"
											},
											{
												"body": {
													"nativeSrc": "9331:76:5",
													"nodeType": "YulBlock",
													"src": "9331:76:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "9385:16:5",
																"nodeType": "YulBlock",
																"src": "9385:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9394:1:5",
																					"nodeType": "YulLiteral",
																					"src": "9394:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9397:1:5",
																					"nodeType": "YulLiteral",
																					"src": "9397:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9387:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "9387:6:5"
																			},
																			"nativeSrc": "9387:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "9387:12:5"
																		},
																		"nativeSrc": "9387:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "9387:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9354:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "9354:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9376:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "9376:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "9361:14:5",
																					"nodeType": "YulIdentifier",
																					"src": "9361:14:5"
																				},
																				"nativeSrc": "9361:21:5",
																				"nodeType": "YulFunctionCall",
																				"src": "9361:21:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "9351:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "9351:2:5"
																		},
																		"nativeSrc": "9351:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9351:32:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9344:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9344:6:5"
																},
																"nativeSrc": "9344:40:5",
																"nodeType": "YulFunctionCall",
																"src": "9344:40:5"
															},
															"nativeSrc": "9341:60:5",
															"nodeType": "YulIf",
															"src": "9341:60:5"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "9291:116:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9324:5:5",
														"nodeType": "YulTypedName",
														"src": "9324:5:5",
														"type": ""
													}
												],
												"src": "9291:116:5"
											},
											{
												"body": {
													"nativeSrc": "9473:77:5",
													"nodeType": "YulBlock",
													"src": "9473:77:5",
													"statements": [
														{
															"nativeSrc": "9483:22:5",
															"nodeType": "YulAssignment",
															"src": "9483:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9498:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "9498:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9492:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "9492:5:5"
																},
																"nativeSrc": "9492:13:5",
																"nodeType": "YulFunctionCall",
																"src": "9492:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9483:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "9483:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9538:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "9538:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "9514:23:5",
																	"nodeType": "YulIdentifier",
																	"src": "9514:23:5"
																},
																"nativeSrc": "9514:30:5",
																"nodeType": "YulFunctionCall",
																"src": "9514:30:5"
															},
															"nativeSrc": "9514:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "9514:30:5"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "9413:137:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9451:6:5",
														"nodeType": "YulTypedName",
														"src": "9451:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9459:3:5",
														"nodeType": "YulTypedName",
														"src": "9459:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "9467:5:5",
														"nodeType": "YulTypedName",
														"src": "9467:5:5",
														"type": ""
													}
												],
												"src": "9413:137:5"
											},
											{
												"body": {
													"nativeSrc": "9630:271:5",
													"nodeType": "YulBlock",
													"src": "9630:271:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "9676:83:5",
																"nodeType": "YulBlock",
																"src": "9676:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9678:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "9678:77:5"
																			},
																			"nativeSrc": "9678:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "9678:79:5"
																		},
																		"nativeSrc": "9678:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "9678:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9651:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "9651:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9660:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "9660:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9647:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9647:3:5"
																		},
																		"nativeSrc": "9647:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9647:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9672:2:5",
																		"nodeType": "YulLiteral",
																		"src": "9672:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9643:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9643:3:5"
																},
																"nativeSrc": "9643:32:5",
																"nodeType": "YulFunctionCall",
																"src": "9643:32:5"
															},
															"nativeSrc": "9640:119:5",
															"nodeType": "YulIf",
															"src": "9640:119:5"
														},
														{
															"nativeSrc": "9769:125:5",
															"nodeType": "YulBlock",
															"src": "9769:125:5",
															"statements": [
																{
																	"nativeSrc": "9784:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9784:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9798:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9798:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9788:6:5",
																			"nodeType": "YulTypedName",
																			"src": "9788:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9813:71:5",
																	"nodeType": "YulAssignment",
																	"src": "9813:71:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9856:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "9856:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9867:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "9867:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9852:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "9852:3:5"
																				},
																				"nativeSrc": "9852:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "9852:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9876:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "9876:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "9823:28:5",
																			"nodeType": "YulIdentifier",
																			"src": "9823:28:5"
																		},
																		"nativeSrc": "9823:61:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9823:61:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9813:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "9813:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "9556:345:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9600:9:5",
														"nodeType": "YulTypedName",
														"src": "9600:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9611:7:5",
														"nodeType": "YulTypedName",
														"src": "9611:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9623:6:5",
														"nodeType": "YulTypedName",
														"src": "9623:6:5",
														"type": ""
													}
												],
												"src": "9556:345:5"
											},
											{
												"body": {
													"nativeSrc": "9965:40:5",
													"nodeType": "YulBlock",
													"src": "9965:40:5",
													"statements": [
														{
															"nativeSrc": "9976:22:5",
															"nodeType": "YulAssignment",
															"src": "9976:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9992:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "9992:5:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9986:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "9986:5:5"
																},
																"nativeSrc": "9986:12:5",
																"nodeType": "YulFunctionCall",
																"src": "9986:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "9976:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9976:6:5"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "9907:98:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9948:5:5",
														"nodeType": "YulTypedName",
														"src": "9948:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "9958:6:5",
														"nodeType": "YulTypedName",
														"src": "9958:6:5",
														"type": ""
													}
												],
												"src": "9907:98:5"
											},
											{
												"body": {
													"nativeSrc": "10124:34:5",
													"nodeType": "YulBlock",
													"src": "10124:34:5",
													"statements": [
														{
															"nativeSrc": "10134:18:5",
															"nodeType": "YulAssignment",
															"src": "10134:18:5",
															"value": {
																"name": "pos",
																"nativeSrc": "10149:3:5",
																"nodeType": "YulIdentifier",
																"src": "10149:3:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "10134:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "10134:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "10011:147:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10096:3:5",
														"nodeType": "YulTypedName",
														"src": "10096:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10101:6:5",
														"nodeType": "YulTypedName",
														"src": "10101:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "10112:11:5",
														"nodeType": "YulTypedName",
														"src": "10112:11:5",
														"type": ""
													}
												],
												"src": "10011:147:5"
											},
											{
												"body": {
													"nativeSrc": "10226:184:5",
													"nodeType": "YulBlock",
													"src": "10226:184:5",
													"statements": [
														{
															"nativeSrc": "10236:10:5",
															"nodeType": "YulVariableDeclaration",
															"src": "10236:10:5",
															"value": {
																"kind": "number",
																"nativeSrc": "10245:1:5",
																"nodeType": "YulLiteral",
																"src": "10245:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "10240:1:5",
																	"nodeType": "YulTypedName",
																	"src": "10240:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10305:63:5",
																"nodeType": "YulBlock",
																"src": "10305:63:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "10330:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "10330:3:5"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "10335:1:5",
																							"nodeType": "YulIdentifier",
																							"src": "10335:1:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "10326:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "10326:3:5"
																					},
																					"nativeSrc": "10326:11:5",
																					"nodeType": "YulFunctionCall",
																					"src": "10326:11:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "10349:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "10349:3:5"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "10354:1:5",
																									"nodeType": "YulIdentifier",
																									"src": "10354:1:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "10345:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "10345:3:5"
																							},
																							"nativeSrc": "10345:11:5",
																							"nodeType": "YulFunctionCall",
																							"src": "10345:11:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "10339:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "10339:5:5"
																					},
																					"nativeSrc": "10339:18:5",
																					"nodeType": "YulFunctionCall",
																					"src": "10339:18:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "10319:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "10319:6:5"
																			},
																			"nativeSrc": "10319:39:5",
																			"nodeType": "YulFunctionCall",
																			"src": "10319:39:5"
																		},
																		"nativeSrc": "10319:39:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "10319:39:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "10266:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "10266:1:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10269:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "10269:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "10263:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "10263:2:5"
																},
																"nativeSrc": "10263:13:5",
																"nodeType": "YulFunctionCall",
																"src": "10263:13:5"
															},
															"nativeSrc": "10255:113:5",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "10277:19:5",
																"nodeType": "YulBlock",
																"src": "10277:19:5",
																"statements": [
																	{
																		"nativeSrc": "10279:15:5",
																		"nodeType": "YulAssignment",
																		"src": "10279:15:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "10288:1:5",
																					"nodeType": "YulIdentifier",
																					"src": "10288:1:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10291:2:5",
																					"nodeType": "YulLiteral",
																					"src": "10291:2:5",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "10284:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "10284:3:5"
																			},
																			"nativeSrc": "10284:10:5",
																			"nodeType": "YulFunctionCall",
																			"src": "10284:10:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "10279:1:5",
																				"nodeType": "YulIdentifier",
																				"src": "10279:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "10259:3:5",
																"nodeType": "YulBlock",
																"src": "10259:3:5",
																"statements": []
															},
															"src": "10255:113:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "10388:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "10388:3:5"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "10393:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "10393:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10384:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10384:3:5"
																		},
																		"nativeSrc": "10384:16:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10384:16:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10402:1:5",
																		"nodeType": "YulLiteral",
																		"src": "10402:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10377:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "10377:6:5"
																},
																"nativeSrc": "10377:27:5",
																"nodeType": "YulFunctionCall",
																"src": "10377:27:5"
															},
															"nativeSrc": "10377:27:5",
															"nodeType": "YulExpressionStatement",
															"src": "10377:27:5"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "10164:246:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "10208:3:5",
														"nodeType": "YulTypedName",
														"src": "10208:3:5",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "10213:3:5",
														"nodeType": "YulTypedName",
														"src": "10213:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10218:6:5",
														"nodeType": "YulTypedName",
														"src": "10218:6:5",
														"type": ""
													}
												],
												"src": "10164:246:5"
											},
											{
												"body": {
													"nativeSrc": "10524:278:5",
													"nodeType": "YulBlock",
													"src": "10524:278:5",
													"statements": [
														{
															"nativeSrc": "10534:52:5",
															"nodeType": "YulVariableDeclaration",
															"src": "10534:52:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10580:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "10580:5:5"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "10548:31:5",
																	"nodeType": "YulIdentifier",
																	"src": "10548:31:5"
																},
																"nativeSrc": "10548:38:5",
																"nodeType": "YulFunctionCall",
																"src": "10548:38:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "10538:6:5",
																	"nodeType": "YulTypedName",
																	"src": "10538:6:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10595:95:5",
															"nodeType": "YulAssignment",
															"src": "10595:95:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10678:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "10678:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10683:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "10683:6:5"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "10602:75:5",
																	"nodeType": "YulIdentifier",
																	"src": "10602:75:5"
																},
																"nativeSrc": "10602:88:5",
																"nodeType": "YulFunctionCall",
																"src": "10602:88:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10595:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10595:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10738:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "10738:5:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10745:4:5",
																				"nodeType": "YulLiteral",
																				"src": "10745:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10734:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10734:3:5"
																		},
																		"nativeSrc": "10734:16:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10734:16:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "10752:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "10752:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10757:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "10757:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "10699:34:5",
																	"nodeType": "YulIdentifier",
																	"src": "10699:34:5"
																},
																"nativeSrc": "10699:65:5",
																"nodeType": "YulFunctionCall",
																"src": "10699:65:5"
															},
															"nativeSrc": "10699:65:5",
															"nodeType": "YulExpressionStatement",
															"src": "10699:65:5"
														},
														{
															"nativeSrc": "10773:23:5",
															"nodeType": "YulAssignment",
															"src": "10773:23:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10784:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "10784:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10789:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "10789:6:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10780:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10780:3:5"
																},
																"nativeSrc": "10780:16:5",
																"nodeType": "YulFunctionCall",
																"src": "10780:16:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10773:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10773:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "10416:386:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10505:5:5",
														"nodeType": "YulTypedName",
														"src": "10505:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10512:3:5",
														"nodeType": "YulTypedName",
														"src": "10512:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10520:3:5",
														"nodeType": "YulTypedName",
														"src": "10520:3:5",
														"type": ""
													}
												],
												"src": "10416:386:5"
											},
											{
												"body": {
													"nativeSrc": "10942:137:5",
													"nodeType": "YulBlock",
													"src": "10942:137:5",
													"statements": [
														{
															"nativeSrc": "10953:100:5",
															"nodeType": "YulAssignment",
															"src": "10953:100:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11040:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "11040:6:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "11049:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "11049:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "10960:79:5",
																	"nodeType": "YulIdentifier",
																	"src": "10960:79:5"
																},
																"nativeSrc": "10960:93:5",
																"nodeType": "YulFunctionCall",
																"src": "10960:93:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10953:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10953:3:5"
																}
															]
														},
														{
															"nativeSrc": "11063:10:5",
															"nodeType": "YulAssignment",
															"src": "11063:10:5",
															"value": {
																"name": "pos",
																"nativeSrc": "11070:3:5",
																"nodeType": "YulIdentifier",
																"src": "11070:3:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11063:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "11063:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "10808:271:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10921:3:5",
														"nodeType": "YulTypedName",
														"src": "10921:3:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10927:6:5",
														"nodeType": "YulTypedName",
														"src": "10927:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10938:3:5",
														"nodeType": "YulTypedName",
														"src": "10938:3:5",
														"type": ""
													}
												],
												"src": "10808:271:5"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$77_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$77_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_e5e86d24105f446628b7770ea89f01e235192c13dc97249afdbb723252e86722(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient balance of TokenA\")\n\n    }\n\n    function abi_encode_t_stringliteral_e5e86d24105f446628b7770ea89f01e235192c13dc97249afdbb723252e86722_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_e5e86d24105f446628b7770ea89f01e235192c13dc97249afdbb723252e86722(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e5e86d24105f446628b7770ea89f01e235192c13dc97249afdbb723252e86722__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e5e86d24105f446628b7770ea89f01e235192c13dc97249afdbb723252e86722_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2489c2847e47b29424caed51f0e2e975c305e94d1dc98ef54bbe32a1fae1be8a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient balance of TokenB\")\n\n    }\n\n    function abi_encode_t_stringliteral_2489c2847e47b29424caed51f0e2e975c305e94d1dc98ef54bbe32a1fae1be8a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_2489c2847e47b29424caed51f0e2e975c305e94d1dc98ef54bbe32a1fae1be8a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2489c2847e47b29424caed51f0e2e975c305e94d1dc98ef54bbe32a1fae1be8a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2489c2847e47b29424caed51f0e2e975c305e94d1dc98ef54bbe32a1fae1be8a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610086575f3560e01c80638da5cb5b116100595780638da5cb5b14610100578063db068e0e1461011e578063e619a4981461013a578063f2fde38b1461015657610086565b8063031020911461008a5780630fc63d10146100a65780633ba0b9a9146100c45780635f64b55b146100e2575b5f80fd5b6100a4600480360381019061009f9190610c57565b610172565b005b6100ae61043a565b6040516100bb9190610cfc565b60405180910390f35b6100cc61045f565b6040516100d99190610d24565b60405180910390f35b6100ea610465565b6040516100f79190610cfc565b60405180910390f35b61010861048a565b6040516101159190610d5d565b60405180910390f35b61013860048036038101906101339190610c57565b6104ad565b005b610154600480360381019061014f9190610c57565b610544565b005b610170600480360381019061016b9190610da0565b61080c565b005b5f670de0b6b3a76400006003548361018a9190610df8565b6101949190610e66565b90508160015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016101f19190610d5d565b602060405180830381865afa15801561020c573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102309190610eaa565b1015610271576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026890610f2f565b60405180910390fd5b8060025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016102cc9190610d5d565b602060405180830381865afa1580156102e7573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061030b9190610eaa565b101561034c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034390610f97565b60405180910390fd5b61039a33308460015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108db909392919063ffffffff16565b6103e6338260025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661095d9092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f77f92a1b6a1a11de8ca49515ad4c1fad45632dd3442167d74b90b304a3c7a758838360405161042e929190610fb5565b60405180910390a25050565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035481565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461053a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053190611026565b60405180910390fd5b8060038190555050565b5f600354670de0b6b3a76400008361055c9190610df8565b6105669190610e66565b90508160025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016105c39190610d5d565b602060405180830381865afa1580156105de573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106029190610eaa565b1015610643576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063a90610f97565b60405180910390fd5b8060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161069e9190610d5d565b602060405180830381865afa1580156106b9573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106dd9190610eaa565b101561071e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071590610f2f565b60405180910390fd5b61076c33308460025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108db909392919063ffffffff16565b6107b8338260015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661095d9092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f77f92a1b6a1a11de8ca49515ad4c1fad45632dd3442167d74b90b304a3c7a7588383604051610800929190610fb5565b60405180910390a25050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610899576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089090611026565b60405180910390fd5b805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610957848573ffffffffffffffffffffffffffffffffffffffff166323b872dd86868660405160240161091093929190611044565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506109dc565b50505050565b6109d7838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401610990929190611079565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506109dc565b505050565b5f610a06828473ffffffffffffffffffffffffffffffffffffffff16610a7190919063ffffffff16565b90505f815114158015610a2a575080806020019051810190610a2891906110d5565b155b15610a6c57826040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401610a639190610d5d565b60405180910390fd5b505050565b6060610a7e83835f610a86565b905092915050565b606081471015610acd57306040517fcd786059000000000000000000000000000000000000000000000000000000008152600401610ac49190610d5d565b60405180910390fd5b5f808573ffffffffffffffffffffffffffffffffffffffff168486604051610af5919061116c565b5f6040518083038185875af1925050503d805f8114610b2f576040519150601f19603f3d011682016040523d82523d5f602084013e610b34565b606091505b5091509150610b44868383610b4f565b925050509392505050565b606082610b6457610b5f82610bdc565b610bd4565b5f8251148015610b8a57505f8473ffffffffffffffffffffffffffffffffffffffff163b145b15610bcc57836040517f9996b315000000000000000000000000000000000000000000000000000000008152600401610bc39190610d5d565b60405180910390fd5b819050610bd5565b5b9392505050565b5f81511115610bee5780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f80fd5b5f819050919050565b610c3681610c24565b8114610c40575f80fd5b50565b5f81359050610c5181610c2d565b92915050565b5f60208284031215610c6c57610c6b610c20565b5b5f610c7984828501610c43565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f610cc4610cbf610cba84610c82565b610ca1565b610c82565b9050919050565b5f610cd582610caa565b9050919050565b5f610ce682610ccb565b9050919050565b610cf681610cdc565b82525050565b5f602082019050610d0f5f830184610ced565b92915050565b610d1e81610c24565b82525050565b5f602082019050610d375f830184610d15565b92915050565b5f610d4782610c82565b9050919050565b610d5781610d3d565b82525050565b5f602082019050610d705f830184610d4e565b92915050565b610d7f81610d3d565b8114610d89575f80fd5b50565b5f81359050610d9a81610d76565b92915050565b5f60208284031215610db557610db4610c20565b5b5f610dc284828501610d8c565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610e0282610c24565b9150610e0d83610c24565b9250828202610e1b81610c24565b91508282048414831517610e3257610e31610dcb565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610e7082610c24565b9150610e7b83610c24565b925082610e8b57610e8a610e39565b5b828204905092915050565b5f81519050610ea481610c2d565b92915050565b5f60208284031215610ebf57610ebe610c20565b5b5f610ecc84828501610e96565b91505092915050565b5f82825260208201905092915050565b7f496e73756666696369656e742062616c616e6365206f6620546f6b656e4100005f82015250565b5f610f19601e83610ed5565b9150610f2482610ee5565b602082019050919050565b5f6020820190508181035f830152610f4681610f0d565b9050919050565b7f496e73756666696369656e742062616c616e6365206f6620546f6b656e4200005f82015250565b5f610f81601e83610ed5565b9150610f8c82610f4d565b602082019050919050565b5f6020820190508181035f830152610fae81610f75565b9050919050565b5f604082019050610fc85f830185610d15565b610fd56020830184610d15565b9392505050565b7f4e6f7420746865206f776e6572000000000000000000000000000000000000005f82015250565b5f611010600d83610ed5565b915061101b82610fdc565b602082019050919050565b5f6020820190508181035f83015261103d81611004565b9050919050565b5f6060820190506110575f830186610d4e565b6110646020830185610d4e565b6110716040830184610d15565b949350505050565b5f60408201905061108c5f830185610d4e565b6110996020830184610d15565b9392505050565b5f8115159050919050565b6110b4816110a0565b81146110be575f80fd5b50565b5f815190506110cf816110ab565b92915050565b5f602082840312156110ea576110e9610c20565b5b5f6110f7848285016110c1565b91505092915050565b5f81519050919050565b5f81905092915050565b5f5b83811015611131578082015181840152602081019050611116565b5f8484015250505050565b5f61114682611100565b611150818561110a565b9350611160818560208601611114565b80840191505092915050565b5f611177828461113c565b91508190509291505056fea264697066735822122046b51783409d0870b912fa030a152413d87f5604f1194d287be12e1fb2cc1c0164736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x86 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x100 JUMPI DUP1 PUSH4 0xDB068E0E EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0xE619A498 EQ PUSH2 0x13A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x156 JUMPI PUSH2 0x86 JUMP JUMPDEST DUP1 PUSH4 0x3102091 EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0xFC63D10 EQ PUSH2 0xA6 JUMPI DUP1 PUSH4 0x3BA0B9A9 EQ PUSH2 0xC4 JUMPI DUP1 PUSH4 0x5F64B55B EQ PUSH2 0xE2 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9F SWAP2 SWAP1 PUSH2 0xC57 JUMP JUMPDEST PUSH2 0x172 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xAE PUSH2 0x43A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBB SWAP2 SWAP1 PUSH2 0xCFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCC PUSH2 0x45F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD9 SWAP2 SWAP1 PUSH2 0xD24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEA PUSH2 0x465 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF7 SWAP2 SWAP1 PUSH2 0xCFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x108 PUSH2 0x48A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x115 SWAP2 SWAP1 PUSH2 0xD5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x138 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x133 SWAP2 SWAP1 PUSH2 0xC57 JUMP JUMPDEST PUSH2 0x4AD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x154 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14F SWAP2 SWAP1 PUSH2 0xC57 JUMP JUMPDEST PUSH2 0x544 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x170 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16B SWAP2 SWAP1 PUSH2 0xDA0 JUMP JUMPDEST PUSH2 0x80C JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH8 0xDE0B6B3A7640000 PUSH1 0x3 SLOAD DUP4 PUSH2 0x18A SWAP2 SWAP1 PUSH2 0xDF8 JUMP JUMPDEST PUSH2 0x194 SWAP2 SWAP1 PUSH2 0xE66 JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0xD5D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x20C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x230 SWAP2 SWAP1 PUSH2 0xEAA JUMP JUMPDEST LT ISZERO PUSH2 0x271 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x268 SWAP1 PUSH2 0xF2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CC SWAP2 SWAP1 PUSH2 0xD5D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2E7 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x30B SWAP2 SWAP1 PUSH2 0xEAA JUMP JUMPDEST LT ISZERO PUSH2 0x34C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x343 SWAP1 PUSH2 0xF97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x39A CALLER ADDRESS DUP5 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8DB SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x3E6 CALLER DUP3 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x95D SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x77F92A1B6A1A11DE8CA49515AD4C1FAD45632DD3442167D74B90B304A3C7A758 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x42E SWAP3 SWAP2 SWAP1 PUSH2 0xFB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x53A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x531 SWAP1 PUSH2 0x1026 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 SLOAD PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x55C SWAP2 SWAP1 PUSH2 0xDF8 JUMP JUMPDEST PUSH2 0x566 SWAP2 SWAP1 PUSH2 0xE66 JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C3 SWAP2 SWAP1 PUSH2 0xD5D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5DE JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x602 SWAP2 SWAP1 PUSH2 0xEAA JUMP JUMPDEST LT ISZERO PUSH2 0x643 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x63A SWAP1 PUSH2 0xF97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69E SWAP2 SWAP1 PUSH2 0xD5D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6B9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6DD SWAP2 SWAP1 PUSH2 0xEAA JUMP JUMPDEST LT ISZERO PUSH2 0x71E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x715 SWAP1 PUSH2 0xF2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x76C CALLER ADDRESS DUP5 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8DB SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x7B8 CALLER DUP3 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x95D SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x77F92A1B6A1A11DE8CA49515AD4C1FAD45632DD3442167D74B90B304A3C7A758 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x800 SWAP3 SWAP2 SWAP1 PUSH2 0xFB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x899 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x890 SWAP1 PUSH2 0x1026 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x957 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x910 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1044 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x9DC JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x9D7 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x990 SWAP3 SWAP2 SWAP1 PUSH2 0x1079 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x9DC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA06 DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA71 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0xA2A JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xA28 SWAP2 SWAP1 PUSH2 0x10D5 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xA6C JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA63 SWAP2 SWAP1 PUSH2 0xD5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xA7E DUP4 DUP4 PUSH0 PUSH2 0xA86 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0xACD JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAC4 SWAP2 SWAP1 PUSH2 0xD5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0xAF5 SWAP2 SWAP1 PUSH2 0x116C JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xB2F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB34 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xB44 DUP7 DUP4 DUP4 PUSH2 0xB4F JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0xB64 JUMPI PUSH2 0xB5F DUP3 PUSH2 0xBDC JUMP JUMPDEST PUSH2 0xBD4 JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0xB8A JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0xBCC JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC3 SWAP2 SWAP1 PUSH2 0xD5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0xBD5 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0xBEE JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC36 DUP2 PUSH2 0xC24 JUMP JUMPDEST DUP2 EQ PUSH2 0xC40 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC51 DUP2 PUSH2 0xC2D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC6C JUMPI PUSH2 0xC6B PUSH2 0xC20 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC79 DUP5 DUP3 DUP6 ADD PUSH2 0xC43 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xCC4 PUSH2 0xCBF PUSH2 0xCBA DUP5 PUSH2 0xC82 JUMP JUMPDEST PUSH2 0xCA1 JUMP JUMPDEST PUSH2 0xC82 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xCD5 DUP3 PUSH2 0xCAA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xCE6 DUP3 PUSH2 0xCCB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCF6 DUP2 PUSH2 0xCDC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD0F PUSH0 DUP4 ADD DUP5 PUSH2 0xCED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD1E DUP2 PUSH2 0xC24 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD37 PUSH0 DUP4 ADD DUP5 PUSH2 0xD15 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xD47 DUP3 PUSH2 0xC82 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD57 DUP2 PUSH2 0xD3D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD70 PUSH0 DUP4 ADD DUP5 PUSH2 0xD4E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD7F DUP2 PUSH2 0xD3D JUMP JUMPDEST DUP2 EQ PUSH2 0xD89 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD9A DUP2 PUSH2 0xD76 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDB5 JUMPI PUSH2 0xDB4 PUSH2 0xC20 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDC2 DUP5 DUP3 DUP6 ADD PUSH2 0xD8C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xE02 DUP3 PUSH2 0xC24 JUMP JUMPDEST SWAP2 POP PUSH2 0xE0D DUP4 PUSH2 0xC24 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xE1B DUP2 PUSH2 0xC24 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xE32 JUMPI PUSH2 0xE31 PUSH2 0xDCB JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xE70 DUP3 PUSH2 0xC24 JUMP JUMPDEST SWAP2 POP PUSH2 0xE7B DUP4 PUSH2 0xC24 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xE8B JUMPI PUSH2 0xE8A PUSH2 0xE39 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xEA4 DUP2 PUSH2 0xC2D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEBF JUMPI PUSH2 0xEBE PUSH2 0xC20 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xECC DUP5 DUP3 DUP6 ADD PUSH2 0xE96 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365206F6620546F6B656E410000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF19 PUSH1 0x1E DUP4 PUSH2 0xED5 JUMP JUMPDEST SWAP2 POP PUSH2 0xF24 DUP3 PUSH2 0xEE5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF46 DUP2 PUSH2 0xF0D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365206F6620546F6B656E420000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF81 PUSH1 0x1E DUP4 PUSH2 0xED5 JUMP JUMPDEST SWAP2 POP PUSH2 0xF8C DUP3 PUSH2 0xF4D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xFAE DUP2 PUSH2 0xF75 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xFC8 PUSH0 DUP4 ADD DUP6 PUSH2 0xD15 JUMP JUMPDEST PUSH2 0xFD5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD15 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E6F7420746865206F776E657200000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1010 PUSH1 0xD DUP4 PUSH2 0xED5 JUMP JUMPDEST SWAP2 POP PUSH2 0x101B DUP3 PUSH2 0xFDC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x103D DUP2 PUSH2 0x1004 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1057 PUSH0 DUP4 ADD DUP7 PUSH2 0xD4E JUMP JUMPDEST PUSH2 0x1064 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xD4E JUMP JUMPDEST PUSH2 0x1071 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xD15 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x108C PUSH0 DUP4 ADD DUP6 PUSH2 0xD4E JUMP JUMPDEST PUSH2 0x1099 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD15 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10B4 DUP2 PUSH2 0x10A0 JUMP JUMPDEST DUP2 EQ PUSH2 0x10BE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x10CF DUP2 PUSH2 0x10AB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10EA JUMPI PUSH2 0x10E9 PUSH2 0xC20 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x10F7 DUP5 DUP3 DUP6 ADD PUSH2 0x10C1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1131 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1116 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1146 DUP3 PUSH2 0x1100 JUMP JUMPDEST PUSH2 0x1150 DUP2 DUP6 PUSH2 0x110A JUMP JUMPDEST SWAP4 POP PUSH2 0x1160 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1114 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1177 DUP3 DUP5 PUSH2 0x113C JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CHAINID 0xB5 OR DUP4 BLOCKHASH SWAP14 ADDMOD PUSH17 0xB912FA030A152413D87F5604F1194D287B 0xE1 0x2E 0x1F 0xB2 0xCC SHR ADD PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "187:1942:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;802:521;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;275:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;329:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;302:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;248;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1905:114;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1331:521;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2027:99;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;802:521;858:15;903:4;887:12;;877:7;:22;;;;:::i;:::-;876:31;;;;:::i;:::-;858:49;;1002:7;970:6;;;;;;;;;;;:16;;;987:10;970:28;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:39;;962:82;;;;;;;;;;;;:::i;:::-;;;;;;;;;1098:7;1063:6;;;;;;;;;;;:16;;;1088:4;1063:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:42;;1055:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;1153:59;1177:10;1197:4;1204:7;1153:6;;;;;;;;;;;:23;;;;:59;;;;;;:::i;:::-;1223:40;1243:10;1255:7;1223:6;;;;;;;;;;;:19;;;;:40;;;;;:::i;:::-;1286:10;1281:34;;;1298:7;1307;1281:34;;;;;;;:::i;:::-;;;;;;;;847:476;802:521;:::o;275:20::-;;;;;;;;;;;;;:::o;329:27::-;;;;:::o;302:20::-;;;;;;;;;;;;;:::o;248:::-;;;;;;;;;;;;:::o;1905:114::-;494:5;;;;;;;;;;480:19;;:10;:19;;;472:45;;;;;;;;;;;;:::i;:::-;;;;;;;;;1998:13:::1;1983:12;:28;;;;1905:114:::0;:::o;1331:521::-;1387:15;1424:12;;1416:4;1406:7;:14;;;;:::i;:::-;1405:31;;;;:::i;:::-;1387:49;;1531:7;1499:6;;;;;;;;;;;:16;;;1516:10;1499:28;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:39;;1491:82;;;;;;;;;;;;:::i;:::-;;;;;;;;;1627:7;1592:6;;;;;;;;;;;:16;;;1617:4;1592:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:42;;1584:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;1682:59;1706:10;1726:4;1733:7;1682:6;;;;;;;;;;;:23;;;;:59;;;;;;:::i;:::-;1752:40;1772:10;1784:7;1752:6;;;;;;;;;;;:19;;;;:40;;;;;:::i;:::-;1815:10;1810:34;;;1827:7;1836;1810:34;;;;;;;:::i;:::-;;;;;;;;1376:476;1331:521;:::o;2027:99::-;494:5;;;;;;;;;;480:19;;:10;:19;;;472:45;;;;;;;;;;;;:::i;:::-;;;;;;;;;2110:8:::1;2102:5;::::0;:16:::1;;;;;;;;;;;;;;;;;;2027:99:::0;:::o;1702:188:2:-;1802:81;1822:5;1844;:18;;;1865:4;1871:2;1875:5;1829:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1802:19;:81::i;:::-;1702:188;;;;:::o;1303:160::-;1385:71;1405:5;1427;:14;;;1444:2;1448:5;1412:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1385:19;:71::i;:::-;1303:160;;;:::o;4059:629::-;4478:23;4504:33;4532:4;4512:5;4504:27;;;;:33;;;;:::i;:::-;4478:59;;4572:1;4551:10;:17;:22;;:57;;;;;4589:10;4578:30;;;;;;;;;;;;:::i;:::-;4577:31;4551:57;4547:135;;;4664:5;4631:40;;;;;;;;;;;:::i;:::-;;;;;;;;4547:135;4129:559;4059:629;;:::o;2705:151:3:-;2780:12;2811:38;2833:6;2841:4;2847:1;2811:21;:38::i;:::-;2804:45;;2705:151;;;;:::o;3180:392::-;3279:12;3331:5;3307:21;:29;3303:108;;;3394:4;3359:41;;;;;;;;;;;:::i;:::-;;;;;;;;3303:108;3421:12;3435:23;3462:6;:11;;3481:5;3488:4;3462:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3420:73;;;;3510:55;3537:6;3545:7;3554:10;3510:26;:55::i;:::-;3503:62;;;;3180:392;;;;;:::o;4625:582::-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5066:1;5045:10;:17;:22;:49;;;;;5093:1;5071:6;:18;;;:23;5045:49;5041:119;;;5138:6;5121:24;;;;;;;;;;;:::i;:::-;;;;;;;;5041:119;5180:10;5173:17;;;;4793:408;4625:582;;;;;;:::o;5743:516::-;5894:1;5874:10;:17;:21;5870:383;;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;;;;;;;;;;;;;88:117:5;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:126::-;1062:7;1102:42;1095:5;1091:54;1080:65;;1025:126;;;:::o;1157:60::-;1185:3;1206:5;1199:12;;1157:60;;;:::o;1223:142::-;1273:9;1306:53;1324:34;1333:24;1351:5;1333:24;:::i;:::-;1324:34;:::i;:::-;1306:53;:::i;:::-;1293:66;;1223:142;;;:::o;1371:126::-;1421:9;1454:37;1485:5;1454:37;:::i;:::-;1441:50;;1371:126;;;:::o;1503:139::-;1566:9;1599:37;1630:5;1599:37;:::i;:::-;1586:50;;1503:139;;;:::o;1648:157::-;1748:50;1792:5;1748:50;:::i;:::-;1743:3;1736:63;1648:157;;:::o;1811:248::-;1917:4;1955:2;1944:9;1940:18;1932:26;;1968:84;2049:1;2038:9;2034:17;2025:6;1968:84;:::i;:::-;1811:248;;;;:::o;2065:118::-;2152:24;2170:5;2152:24;:::i;:::-;2147:3;2140:37;2065:118;;:::o;2189:222::-;2282:4;2320:2;2309:9;2305:18;2297:26;;2333:71;2401:1;2390:9;2386:17;2377:6;2333:71;:::i;:::-;2189:222;;;;:::o;2417:96::-;2454:7;2483:24;2501:5;2483:24;:::i;:::-;2472:35;;2417:96;;;:::o;2519:118::-;2606:24;2624:5;2606:24;:::i;:::-;2601:3;2594:37;2519:118;;:::o;2643:222::-;2736:4;2774:2;2763:9;2759:18;2751:26;;2787:71;2855:1;2844:9;2840:17;2831:6;2787:71;:::i;:::-;2643:222;;;;:::o;2871:122::-;2944:24;2962:5;2944:24;:::i;:::-;2937:5;2934:35;2924:63;;2983:1;2980;2973:12;2924:63;2871:122;:::o;2999:139::-;3045:5;3083:6;3070:20;3061:29;;3099:33;3126:5;3099:33;:::i;:::-;2999:139;;;;:::o;3144:329::-;3203:6;3252:2;3240:9;3231:7;3227:23;3223:32;3220:119;;;3258:79;;:::i;:::-;3220:119;3378:1;3403:53;3448:7;3439:6;3428:9;3424:22;3403:53;:::i;:::-;3393:63;;3349:117;3144:329;;;;:::o;3479:180::-;3527:77;3524:1;3517:88;3624:4;3621:1;3614:15;3648:4;3645:1;3638:15;3665:410;3705:7;3728:20;3746:1;3728:20;:::i;:::-;3723:25;;3762:20;3780:1;3762:20;:::i;:::-;3757:25;;3817:1;3814;3810:9;3839:30;3857:11;3839:30;:::i;:::-;3828:41;;4018:1;4009:7;4005:15;4002:1;3999:22;3979:1;3972:9;3952:83;3929:139;;4048:18;;:::i;:::-;3929:139;3713:362;3665:410;;;;:::o;4081:180::-;4129:77;4126:1;4119:88;4226:4;4223:1;4216:15;4250:4;4247:1;4240:15;4267:185;4307:1;4324:20;4342:1;4324:20;:::i;:::-;4319:25;;4358:20;4376:1;4358:20;:::i;:::-;4353:25;;4397:1;4387:35;;4402:18;;:::i;:::-;4387:35;4444:1;4441;4437:9;4432:14;;4267:185;;;;:::o;4458:143::-;4515:5;4546:6;4540:13;4531:22;;4562:33;4589:5;4562:33;:::i;:::-;4458:143;;;;:::o;4607:351::-;4677:6;4726:2;4714:9;4705:7;4701:23;4697:32;4694:119;;;4732:79;;:::i;:::-;4694:119;4852:1;4877:64;4933:7;4924:6;4913:9;4909:22;4877:64;:::i;:::-;4867:74;;4823:128;4607:351;;;;:::o;4964:169::-;5048:11;5082:6;5077:3;5070:19;5122:4;5117:3;5113:14;5098:29;;4964:169;;;;:::o;5139:180::-;5279:32;5275:1;5267:6;5263:14;5256:56;5139:180;:::o;5325:366::-;5467:3;5488:67;5552:2;5547:3;5488:67;:::i;:::-;5481:74;;5564:93;5653:3;5564:93;:::i;:::-;5682:2;5677:3;5673:12;5666:19;;5325:366;;;:::o;5697:419::-;5863:4;5901:2;5890:9;5886:18;5878:26;;5950:9;5944:4;5940:20;5936:1;5925:9;5921:17;5914:47;5978:131;6104:4;5978:131;:::i;:::-;5970:139;;5697:419;;;:::o;6122:180::-;6262:32;6258:1;6250:6;6246:14;6239:56;6122:180;:::o;6308:366::-;6450:3;6471:67;6535:2;6530:3;6471:67;:::i;:::-;6464:74;;6547:93;6636:3;6547:93;:::i;:::-;6665:2;6660:3;6656:12;6649:19;;6308:366;;;:::o;6680:419::-;6846:4;6884:2;6873:9;6869:18;6861:26;;6933:9;6927:4;6923:20;6919:1;6908:9;6904:17;6897:47;6961:131;7087:4;6961:131;:::i;:::-;6953:139;;6680:419;;;:::o;7105:332::-;7226:4;7264:2;7253:9;7249:18;7241:26;;7277:71;7345:1;7334:9;7330:17;7321:6;7277:71;:::i;:::-;7358:72;7426:2;7415:9;7411:18;7402:6;7358:72;:::i;:::-;7105:332;;;;;:::o;7443:163::-;7583:15;7579:1;7571:6;7567:14;7560:39;7443:163;:::o;7612:366::-;7754:3;7775:67;7839:2;7834:3;7775:67;:::i;:::-;7768:74;;7851:93;7940:3;7851:93;:::i;:::-;7969:2;7964:3;7960:12;7953:19;;7612:366;;;:::o;7984:419::-;8150:4;8188:2;8177:9;8173:18;8165:26;;8237:9;8231:4;8227:20;8223:1;8212:9;8208:17;8201:47;8265:131;8391:4;8265:131;:::i;:::-;8257:139;;7984:419;;;:::o;8409:442::-;8558:4;8596:2;8585:9;8581:18;8573:26;;8609:71;8677:1;8666:9;8662:17;8653:6;8609:71;:::i;:::-;8690:72;8758:2;8747:9;8743:18;8734:6;8690:72;:::i;:::-;8772;8840:2;8829:9;8825:18;8816:6;8772:72;:::i;:::-;8409:442;;;;;;:::o;8857:332::-;8978:4;9016:2;9005:9;9001:18;8993:26;;9029:71;9097:1;9086:9;9082:17;9073:6;9029:71;:::i;:::-;9110:72;9178:2;9167:9;9163:18;9154:6;9110:72;:::i;:::-;8857:332;;;;;:::o;9195:90::-;9229:7;9272:5;9265:13;9258:21;9247:32;;9195:90;;;:::o;9291:116::-;9361:21;9376:5;9361:21;:::i;:::-;9354:5;9351:32;9341:60;;9397:1;9394;9387:12;9341:60;9291:116;:::o;9413:137::-;9467:5;9498:6;9492:13;9483:22;;9514:30;9538:5;9514:30;:::i;:::-;9413:137;;;;:::o;9556:345::-;9623:6;9672:2;9660:9;9651:7;9647:23;9643:32;9640:119;;;9678:79;;:::i;:::-;9640:119;9798:1;9823:61;9876:7;9867:6;9856:9;9852:22;9823:61;:::i;:::-;9813:71;;9769:125;9556:345;;;;:::o;9907:98::-;9958:6;9992:5;9986:12;9976:22;;9907:98;;;:::o;10011:147::-;10112:11;10149:3;10134:18;;10011:147;;;;:::o;10164:246::-;10245:1;10255:113;10269:6;10266:1;10263:13;10255:113;;;10354:1;10349:3;10345:11;10339:18;10335:1;10330:3;10326:11;10319:39;10291:2;10288:1;10284:10;10279:15;;10255:113;;;10402:1;10393:6;10388:3;10384:16;10377:27;10226:184;10164:246;;;:::o;10416:386::-;10520:3;10548:38;10580:5;10548:38;:::i;:::-;10602:88;10683:6;10678:3;10602:88;:::i;:::-;10595:95;;10699:65;10757:6;10752:3;10745:4;10738:5;10734:16;10699:65;:::i;:::-;10789:6;10784:3;10780:16;10773:23;;10524:278;10416:386;;;;:::o;10808:271::-;10938:3;10960:93;11049:3;11040:6;10960:93;:::i;:::-;10953:100;;11070:3;11063:10;;10808:271;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "907200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"exchangeRate()": "2470",
								"owner()": "2505",
								"setExchangeRate(uint256)": "24703",
								"swapAForB(uint256)": "infinite",
								"swapBForA(uint256)": "infinite",
								"tokenA()": "infinite",
								"tokenB()": "infinite",
								"transferOwnership(address)": "26947"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 187,
									"end": 2129,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 187,
									"end": 2129,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 187,
									"end": 2129,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 545,
									"end": 794,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 545,
									"end": 794,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 545,
									"end": 794,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 545,
									"end": 794,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 545,
									"end": 794,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 545,
									"end": 794,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 545,
									"end": 794,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 545,
									"end": 794,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 545,
									"end": 794,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 545,
									"end": 794,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 545,
									"end": 794,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 545,
									"end": 794,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 545,
									"end": 794,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 545,
									"end": 794,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 545,
									"end": 794,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 545,
									"end": 794,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 545,
									"end": 794,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 545,
									"end": 794,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 545,
									"end": 794,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 545,
									"end": 794,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 545,
									"end": 794,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 545,
									"end": 794,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 545,
									"end": 794,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 545,
									"end": 794,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 545,
									"end": 794,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 545,
									"end": 794,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 545,
									"end": 794,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 545,
									"end": 794,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 545,
									"end": 794,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 545,
									"end": 794,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 545,
									"end": 794,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 545,
									"end": 794,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 545,
									"end": 794,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 545,
									"end": 794,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 545,
									"end": 794,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 667,
									"end": 677,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 659,
									"end": 664,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 659,
									"end": 677,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 659,
									"end": 677,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 659,
									"end": 677,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 659,
									"end": 677,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 659,
									"end": 677,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 659,
									"end": 677,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 659,
									"end": 677,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 659,
									"end": 677,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 659,
									"end": 677,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 659,
									"end": 677,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 659,
									"end": 677,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 659,
									"end": 677,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 659,
									"end": 677,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 659,
									"end": 677,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 659,
									"end": 677,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 659,
									"end": 677,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 659,
									"end": 677,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 659,
									"end": 677,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 704,
									"end": 711,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 688,
									"end": 694,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 688,
									"end": 694,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 688,
									"end": 712,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 688,
									"end": 712,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 688,
									"end": 712,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 688,
									"end": 712,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 688,
									"end": 712,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 688,
									"end": 712,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 688,
									"end": 712,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 688,
									"end": 712,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 688,
									"end": 712,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 688,
									"end": 712,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 688,
									"end": 712,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 688,
									"end": 712,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 688,
									"end": 712,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 688,
									"end": 712,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 688,
									"end": 712,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 688,
									"end": 712,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 688,
									"end": 712,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 688,
									"end": 712,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 739,
									"end": 746,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 723,
									"end": 729,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 723,
									"end": 729,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 723,
									"end": 747,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 723,
									"end": 747,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 723,
									"end": 747,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 723,
									"end": 747,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 723,
									"end": 747,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 723,
									"end": 747,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 723,
									"end": 747,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 723,
									"end": 747,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 723,
									"end": 747,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 723,
									"end": 747,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 723,
									"end": 747,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 723,
									"end": 747,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 723,
									"end": 747,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 723,
									"end": 747,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 723,
									"end": 747,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 723,
									"end": 747,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 723,
									"end": 747,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 723,
									"end": 747,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 773,
									"end": 786,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 758,
									"end": 770,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 758,
									"end": 786,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 758,
									"end": 786,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 758,
									"end": 786,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 758,
									"end": 786,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 545,
									"end": 794,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 545,
									"end": 794,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 545,
									"end": 794,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 187,
									"end": 2129,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 187,
									"end": 2129,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 922,
									"name": "tag",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 845,
									"end": 922,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 882,
									"end": 889,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 911,
									"end": 916,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 900,
									"end": 916,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 900,
									"end": 916,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 845,
									"end": 922,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 922,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "tag",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 1019,
									"end": 1024,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 1001,
									"end": 1025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "tag",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 994,
									"end": 999,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 991,
									"end": 1026,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1040,
									"end": 1041,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1030,
									"end": 1042,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "tag",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 928,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "tag",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1113,
									"end": 1118,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1144,
									"end": 1150,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 1187,
									"end": 1192,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 1160,
									"end": 1193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "tag",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1056,
									"end": 1199,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1293,
									"end": 1299,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1301,
									"end": 1307,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1309,
									"end": 1315,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1358,
									"end": 1360,
									"name": "PUSH",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 1346,
									"end": 1355,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1337,
									"end": 1344,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1333,
									"end": 1356,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1329,
									"end": 1361,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 1364,
									"end": 1443,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "tag",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "tag",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1484,
									"end": 1485,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 1565,
									"end": 1572,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1556,
									"end": 1562,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1545,
									"end": 1554,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 1541,
									"end": 1563,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 1509,
									"end": 1573,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "tag",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1499,
									"end": 1573,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 1499,
									"end": 1573,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1455,
									"end": 1583,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1622,
									"end": 1624,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 1704,
									"end": 1711,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1695,
									"end": 1701,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1684,
									"end": 1693,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 1680,
									"end": 1702,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 1648,
									"end": 1712,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "tag",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1638,
									"end": 1712,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1638,
									"end": 1712,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1593,
									"end": 1722,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1761,
									"end": 1763,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1843,
									"end": 1850,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1834,
									"end": 1840,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1823,
									"end": 1832,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 1819,
									"end": 1841,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 1787,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "tag",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1777,
									"end": 1851,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1777,
									"end": 1851,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1732,
									"end": 1861,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1868,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 187,
									"end": 2129,
									"name": "tag",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 187,
									"end": 2129,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 187,
									"end": 2129,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 187,
									"end": 2129,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 187,
									"end": 2129,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 187,
									"end": 2129,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 2129,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 187,
									"end": 2129,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 2129,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122046b51783409d0870b912fa030a152413d87f5604f1194d287be12e1fb2cc1c0164736f6c63430008160033",
									".code": [
										{
											"begin": 187,
											"end": 2129,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 187,
											"end": 2129,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 187,
											"end": 2129,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 187,
											"end": 2129,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 187,
											"end": 2129,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 187,
											"end": 2129,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 187,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 187,
											"end": 2129,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 187,
											"end": 2129,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 2129,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 187,
											"end": 2129,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 187,
											"end": 2129,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 187,
											"end": 2129,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 187,
											"end": 2129,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 187,
											"end": 2129,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 187,
											"end": 2129,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 187,
											"end": 2129,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 187,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 187,
											"end": 2129,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 187,
											"end": 2129,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 2129,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 187,
											"end": 2129,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 187,
											"end": 2129,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 187,
											"end": 2129,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 187,
											"end": 2129,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 187,
											"end": 2129,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 187,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 187,
											"end": 2129,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 187,
											"end": 2129,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 187,
											"end": 2129,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 187,
											"end": 2129,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 187,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 187,
											"end": 2129,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 187,
											"end": 2129,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 187,
											"end": 2129,
											"name": "PUSH",
											"source": 4,
											"value": "DB068E0E"
										},
										{
											"begin": 187,
											"end": 2129,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 187,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 187,
											"end": 2129,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 187,
											"end": 2129,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 187,
											"end": 2129,
											"name": "PUSH",
											"source": 4,
											"value": "E619A498"
										},
										{
											"begin": 187,
											"end": 2129,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 187,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 187,
											"end": 2129,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 187,
											"end": 2129,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 187,
											"end": 2129,
											"name": "PUSH",
											"source": 4,
											"value": "F2FDE38B"
										},
										{
											"begin": 187,
											"end": 2129,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 187,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 187,
											"end": 2129,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 187,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 187,
											"end": 2129,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 187,
											"end": 2129,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 187,
											"end": 2129,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 187,
											"end": 2129,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 187,
											"end": 2129,
											"name": "PUSH",
											"source": 4,
											"value": "3102091"
										},
										{
											"begin": 187,
											"end": 2129,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 187,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 187,
											"end": 2129,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 187,
											"end": 2129,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 187,
											"end": 2129,
											"name": "PUSH",
											"source": 4,
											"value": "FC63D10"
										},
										{
											"begin": 187,
											"end": 2129,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 187,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 187,
											"end": 2129,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 187,
											"end": 2129,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 187,
											"end": 2129,
											"name": "PUSH",
											"source": 4,
											"value": "3BA0B9A9"
										},
										{
											"begin": 187,
											"end": 2129,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 187,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 187,
											"end": 2129,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 187,
											"end": 2129,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 187,
											"end": 2129,
											"name": "PUSH",
											"source": 4,
											"value": "5F64B55B"
										},
										{
											"begin": 187,
											"end": 2129,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 187,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 187,
											"end": 2129,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 187,
											"end": 2129,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 187,
											"end": 2129,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 187,
											"end": 2129,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 2129,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 187,
											"end": 2129,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 802,
											"end": 1323,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 802,
											"end": 1323,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 802,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 802,
											"end": 1323,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 802,
											"end": 1323,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 802,
											"end": 1323,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 802,
											"end": 1323,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 802,
											"end": 1323,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 802,
											"end": 1323,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 802,
											"end": 1323,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 802,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 802,
											"end": 1323,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 802,
											"end": 1323,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 802,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 802,
											"end": 1323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 802,
											"end": 1323,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 802,
											"end": 1323,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 802,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 802,
											"end": 1323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 802,
											"end": 1323,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 802,
											"end": 1323,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 802,
											"end": 1323,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 275,
											"end": 295,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 275,
											"end": 295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 275,
											"end": 295,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 275,
											"end": 295,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 275,
											"end": 295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 275,
											"end": 295,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 275,
											"end": 295,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 275,
											"end": 295,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 275,
											"end": 295,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 275,
											"end": 295,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 329,
											"end": 356,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 329,
											"end": 356,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 329,
											"end": 356,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 329,
											"end": 356,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 329,
											"end": 356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 329,
											"end": 356,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 329,
											"end": 356,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 329,
											"end": 356,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 329,
											"end": 356,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 329,
											"end": 356,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 329,
											"end": 356,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 329,
											"end": 356,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 329,
											"end": 356,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 329,
											"end": 356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 329,
											"end": 356,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 329,
											"end": 356,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 329,
											"end": 356,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 329,
											"end": 356,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 329,
											"end": 356,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 329,
											"end": 356,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 329,
											"end": 356,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 329,
											"end": 356,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 329,
											"end": 356,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 302,
											"end": 322,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 302,
											"end": 322,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 302,
											"end": 322,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 302,
											"end": 322,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 302,
											"end": 322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 302,
											"end": 322,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 302,
											"end": 322,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 302,
											"end": 322,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 302,
											"end": 322,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 302,
											"end": 322,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 302,
											"end": 322,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 302,
											"end": 322,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 302,
											"end": 322,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 302,
											"end": 322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 302,
											"end": 322,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 302,
											"end": 322,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 302,
											"end": 322,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 302,
											"end": 322,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 302,
											"end": 322,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 302,
											"end": 322,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 302,
											"end": 322,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 302,
											"end": 322,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 302,
											"end": 322,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 248,
											"end": 268,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 248,
											"end": 268,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 248,
											"end": 268,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 248,
											"end": 268,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 248,
											"end": 268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 248,
											"end": 268,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 248,
											"end": 268,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 248,
											"end": 268,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 248,
											"end": 268,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 248,
											"end": 268,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 248,
											"end": 268,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 248,
											"end": 268,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 248,
											"end": 268,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 248,
											"end": 268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 248,
											"end": 268,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 248,
											"end": 268,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 248,
											"end": 268,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 248,
											"end": 268,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 248,
											"end": 268,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 248,
											"end": 268,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 248,
											"end": 268,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 248,
											"end": 268,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 248,
											"end": 268,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1905,
											"end": 2019,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 1905,
											"end": 2019,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1905,
											"end": 2019,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 1905,
											"end": 2019,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1905,
											"end": 2019,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1905,
											"end": 2019,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1905,
											"end": 2019,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1905,
											"end": 2019,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1905,
											"end": 2019,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1905,
											"end": 2019,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1905,
											"end": 2019,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 1905,
											"end": 2019,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1905,
											"end": 2019,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1905,
											"end": 2019,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 1905,
											"end": 2019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1905,
											"end": 2019,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 1905,
											"end": 2019,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1905,
											"end": 2019,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 1905,
											"end": 2019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1905,
											"end": 2019,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 1905,
											"end": 2019,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1905,
											"end": 2019,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 1331,
											"end": 1852,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 1331,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1331,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 1331,
											"end": 1852,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1331,
											"end": 1852,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1331,
											"end": 1852,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1331,
											"end": 1852,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1331,
											"end": 1852,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1331,
											"end": 1852,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1331,
											"end": 1852,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1331,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 1331,
											"end": 1852,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1331,
											"end": 1852,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1331,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 1331,
											"end": 1852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1331,
											"end": 1852,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 1331,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1331,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 1331,
											"end": 1852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1331,
											"end": 1852,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 1331,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1331,
											"end": 1852,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 2027,
											"end": 2126,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 2027,
											"end": 2126,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2027,
											"end": 2126,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 2027,
											"end": 2126,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2027,
											"end": 2126,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2027,
											"end": 2126,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2027,
											"end": 2126,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2027,
											"end": 2126,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2027,
											"end": 2126,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2027,
											"end": 2126,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2027,
											"end": 2126,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 2027,
											"end": 2126,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2027,
											"end": 2126,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2027,
											"end": 2126,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 2027,
											"end": 2126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2027,
											"end": 2126,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 2027,
											"end": 2126,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2027,
											"end": 2126,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2027,
											"end": 2126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2027,
											"end": 2126,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 2027,
											"end": 2126,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2027,
											"end": 2126,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 802,
											"end": 1323,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 802,
											"end": 1323,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 858,
											"end": 873,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 903,
											"end": 907,
											"name": "PUSH",
											"source": 4,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 887,
											"end": 899,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 887,
											"end": 899,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 877,
											"end": 884,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 877,
											"end": 899,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 877,
											"end": 899,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 877,
											"end": 899,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 877,
											"end": 899,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 877,
											"end": 899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 877,
											"end": 899,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 877,
											"end": 899,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 876,
											"end": 907,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 876,
											"end": 907,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 876,
											"end": 907,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 876,
											"end": 907,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 876,
											"end": 907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 876,
											"end": 907,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 876,
											"end": 907,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 858,
											"end": 907,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 858,
											"end": 907,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1002,
											"end": 1009,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 970,
											"end": 976,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 970,
											"end": 976,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 970,
											"end": 976,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 970,
											"end": 976,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 970,
											"end": 976,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 970,
											"end": 976,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 970,
											"end": 976,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 970,
											"end": 976,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 970,
											"end": 976,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 970,
											"end": 976,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 970,
											"end": 976,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 970,
											"end": 986,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 970,
											"end": 986,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 970,
											"end": 986,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 987,
											"end": 997,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 970,
											"end": 998,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 970,
											"end": 998,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 970,
											"end": 998,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 970,
											"end": 998,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 970,
											"end": 998,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 970,
											"end": 998,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 970,
											"end": 998,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 970,
											"end": 998,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 970,
											"end": 998,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 970,
											"end": 998,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 970,
											"end": 998,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 970,
											"end": 998,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 970,
											"end": 998,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 970,
											"end": 998,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 970,
											"end": 998,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 970,
											"end": 998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 970,
											"end": 998,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 970,
											"end": 998,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 970,
											"end": 998,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 970,
											"end": 998,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 970,
											"end": 998,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 970,
											"end": 998,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 970,
											"end": 998,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 970,
											"end": 998,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 970,
											"end": 998,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 970,
											"end": 998,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 970,
											"end": 998,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 970,
											"end": 998,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 970,
											"end": 998,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 970,
											"end": 998,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 970,
											"end": 998,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 970,
											"end": 998,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 970,
											"end": 998,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 970,
											"end": 998,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 970,
											"end": 998,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 970,
											"end": 998,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 970,
											"end": 998,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 970,
											"end": 998,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 970,
											"end": 998,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 970,
											"end": 998,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 970,
											"end": 998,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 970,
											"end": 998,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 970,
											"end": 998,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 970,
											"end": 998,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 970,
											"end": 998,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 970,
											"end": 998,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 970,
											"end": 998,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 970,
											"end": 998,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 970,
											"end": 998,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 970,
											"end": 998,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 970,
											"end": 998,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 970,
											"end": 998,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 970,
											"end": 998,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 970,
											"end": 998,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 970,
											"end": 998,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 970,
											"end": 998,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 970,
											"end": 998,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 970,
											"end": 998,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 970,
											"end": 998,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 970,
											"end": 998,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 970,
											"end": 998,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 970,
											"end": 998,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 970,
											"end": 998,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 970,
											"end": 998,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 970,
											"end": 998,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 970,
											"end": 998,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 970,
											"end": 998,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 970,
											"end": 998,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 970,
											"end": 998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 970,
											"end": 998,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 970,
											"end": 998,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 970,
											"end": 1009,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 970,
											"end": 1009,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1044,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 962,
											"end": 1044,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1044,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 962,
											"end": 1044,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1044,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 962,
											"end": 1044,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1044,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1044,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 962,
											"end": 1044,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1044,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 962,
											"end": 1044,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1044,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 962,
											"end": 1044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1044,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 962,
											"end": 1044,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1044,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 962,
											"end": 1044,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1044,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1044,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1044,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1044,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1044,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1044,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 962,
											"end": 1044,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1098,
											"end": 1105,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1069,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1063,
											"end": 1069,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1063,
											"end": 1069,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1069,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1069,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1069,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1063,
											"end": 1069,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1069,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1069,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1069,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1063,
											"end": 1069,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1079,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1063,
											"end": 1079,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1079,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 1088,
											"end": 1092,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1094,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1063,
											"end": 1094,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1094,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1094,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1063,
											"end": 1094,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1094,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1063,
											"end": 1094,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1094,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1094,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1094,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1063,
											"end": 1094,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 1063,
											"end": 1094,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1094,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 1063,
											"end": 1094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1094,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 1063,
											"end": 1094,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1094,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1094,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1063,
											"end": 1094,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1094,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1094,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1094,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1094,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1094,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1094,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1094,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1094,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1094,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1094,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 1063,
											"end": 1094,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1094,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1094,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1063,
											"end": 1094,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1094,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1094,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1094,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1063,
											"end": 1094,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1094,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 1063,
											"end": 1094,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1094,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1094,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1094,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1094,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1094,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1063,
											"end": 1094,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1094,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1094,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1063,
											"end": 1094,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1094,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1063,
											"end": 1094,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1094,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1094,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1094,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1094,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1094,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1094,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1063,
											"end": 1094,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1094,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1094,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1094,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1094,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 1063,
											"end": 1094,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1094,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 1063,
											"end": 1094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1094,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 1063,
											"end": 1094,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1105,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1105,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1055,
											"end": 1140,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 1055,
											"end": 1140,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1055,
											"end": 1140,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1055,
											"end": 1140,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1055,
											"end": 1140,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1055,
											"end": 1140,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1055,
											"end": 1140,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1055,
											"end": 1140,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1055,
											"end": 1140,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1055,
											"end": 1140,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 1055,
											"end": 1140,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1055,
											"end": 1140,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1055,
											"end": 1140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1055,
											"end": 1140,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 1055,
											"end": 1140,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1055,
											"end": 1140,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1055,
											"end": 1140,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1055,
											"end": 1140,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1055,
											"end": 1140,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1055,
											"end": 1140,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1055,
											"end": 1140,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1055,
											"end": 1140,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1055,
											"end": 1140,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 1055,
											"end": 1140,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1212,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 1177,
											"end": 1187,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1201,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 1204,
											"end": 1211,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1159,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1153,
											"end": 1159,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1153,
											"end": 1159,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1159,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1159,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1159,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1153,
											"end": 1159,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1159,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1159,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1159,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1153,
											"end": 1159,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1176,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1153,
											"end": 1176,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1176,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 1153,
											"end": 1176,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1212,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1212,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1212,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1212,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1212,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1153,
											"end": 1212,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1153,
											"end": 1212,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 1153,
											"end": 1212,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1223,
											"end": 1263,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 1243,
											"end": 1253,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1255,
											"end": 1262,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1223,
											"end": 1229,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1223,
											"end": 1229,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1223,
											"end": 1229,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1223,
											"end": 1229,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1223,
											"end": 1229,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1223,
											"end": 1229,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1223,
											"end": 1229,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1223,
											"end": 1229,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1223,
											"end": 1229,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1223,
											"end": 1229,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1223,
											"end": 1229,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1223,
											"end": 1242,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1223,
											"end": 1242,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1223,
											"end": 1242,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1223,
											"end": 1242,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1223,
											"end": 1263,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1223,
											"end": 1263,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1223,
											"end": 1263,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1223,
											"end": 1263,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1223,
											"end": 1263,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1223,
											"end": 1263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1223,
											"end": 1263,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 1223,
											"end": 1263,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1286,
											"end": 1296,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1281,
											"end": 1315,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1281,
											"end": 1315,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1281,
											"end": 1315,
											"name": "PUSH",
											"source": 4,
											"value": "77F92A1B6A1A11DE8CA49515AD4C1FAD45632DD3442167D74B90B304A3C7A758"
										},
										{
											"begin": 1298,
											"end": 1305,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1307,
											"end": 1314,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1281,
											"end": 1315,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1281,
											"end": 1315,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1281,
											"end": 1315,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 1281,
											"end": 1315,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1281,
											"end": 1315,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1281,
											"end": 1315,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1281,
											"end": 1315,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 1281,
											"end": 1315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1281,
											"end": 1315,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 1281,
											"end": 1315,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1281,
											"end": 1315,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1281,
											"end": 1315,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1281,
											"end": 1315,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1281,
											"end": 1315,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1281,
											"end": 1315,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1281,
											"end": 1315,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1281,
											"end": 1315,
											"name": "LOG2",
											"source": 4
										},
										{
											"begin": 847,
											"end": 1323,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 802,
											"end": 1323,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 802,
											"end": 1323,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 275,
											"end": 295,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 275,
											"end": 295,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 275,
											"end": 295,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 275,
											"end": 295,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 275,
											"end": 295,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 275,
											"end": 295,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 275,
											"end": 295,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 275,
											"end": 295,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 329,
											"end": 356,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 329,
											"end": 356,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 329,
											"end": 356,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 329,
											"end": 356,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 329,
											"end": 356,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 329,
											"end": 356,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 302,
											"end": 322,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 302,
											"end": 322,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 302,
											"end": 322,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 302,
											"end": 322,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 302,
											"end": 322,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 302,
											"end": 322,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 302,
											"end": 322,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 302,
											"end": 322,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 302,
											"end": 322,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 302,
											"end": 322,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 302,
											"end": 322,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 302,
											"end": 322,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 302,
											"end": 322,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 302,
											"end": 322,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 302,
											"end": 322,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 248,
											"end": 268,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 248,
											"end": 268,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 248,
											"end": 268,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 248,
											"end": 268,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 248,
											"end": 268,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 248,
											"end": 268,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 248,
											"end": 268,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 248,
											"end": 268,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 248,
											"end": 268,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 248,
											"end": 268,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 248,
											"end": 268,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 248,
											"end": 268,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 248,
											"end": 268,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 248,
											"end": 268,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1905,
											"end": 2019,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 1905,
											"end": 2019,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 494,
											"end": 499,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 494,
											"end": 499,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 494,
											"end": 499,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 494,
											"end": 499,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 494,
											"end": 499,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 494,
											"end": 499,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 494,
											"end": 499,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 494,
											"end": 499,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 494,
											"end": 499,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 494,
											"end": 499,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 480,
											"end": 499,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 480,
											"end": 499,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 480,
											"end": 490,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 480,
											"end": 499,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 480,
											"end": 499,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 480,
											"end": 499,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 472,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 472,
											"end": 517,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 472,
											"end": 517,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 472,
											"end": 517,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 472,
											"end": 517,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 472,
											"end": 517,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 472,
											"end": 517,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 472,
											"end": 517,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 472,
											"end": 517,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 472,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 472,
											"end": 517,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 472,
											"end": 517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 472,
											"end": 517,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 472,
											"end": 517,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 472,
											"end": 517,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 472,
											"end": 517,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 472,
											"end": 517,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 517,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 472,
											"end": 517,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 472,
											"end": 517,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 517,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 472,
											"end": 517,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 472,
											"end": 517,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2011,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 1995,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1983,
											"end": 2011,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2011,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2011,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2011,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1905,
											"end": 2019,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1905,
											"end": 2019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1331,
											"end": 1852,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 1331,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1387,
											"end": 1402,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1424,
											"end": 1436,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1424,
											"end": 1436,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1416,
											"end": 1420,
											"name": "PUSH",
											"source": 4,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1406,
											"end": 1413,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1406,
											"end": 1420,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 1406,
											"end": 1420,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1406,
											"end": 1420,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1406,
											"end": 1420,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 1406,
											"end": 1420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1406,
											"end": 1420,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 1406,
											"end": 1420,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1405,
											"end": 1436,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 1405,
											"end": 1436,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1405,
											"end": 1436,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1405,
											"end": 1436,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 1405,
											"end": 1436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1405,
											"end": 1436,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 1405,
											"end": 1436,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1387,
											"end": 1436,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1387,
											"end": 1436,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1538,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1505,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1499,
											"end": 1505,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1499,
											"end": 1505,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1505,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1505,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1505,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1499,
											"end": 1505,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1505,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1505,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1505,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1499,
											"end": 1505,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1515,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1499,
											"end": 1515,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1515,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 1516,
											"end": 1526,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1527,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1499,
											"end": 1527,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1527,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1527,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1499,
											"end": 1527,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1527,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1499,
											"end": 1527,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1527,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1527,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1527,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1499,
											"end": 1527,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1527,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 1499,
											"end": 1527,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1527,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1527,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 1499,
											"end": 1527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1527,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 1499,
											"end": 1527,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1527,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1499,
											"end": 1527,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1499,
											"end": 1527,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1527,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1527,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1527,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1527,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1527,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1527,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1527,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1527,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1527,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1527,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1527,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 1499,
											"end": 1527,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1527,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1527,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1499,
											"end": 1527,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1527,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1527,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1527,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1499,
											"end": 1527,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1527,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 1499,
											"end": 1527,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1527,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1527,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1527,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1527,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1527,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1499,
											"end": 1527,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1527,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1527,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1499,
											"end": 1527,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1527,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1499,
											"end": 1527,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1527,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1527,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1527,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1527,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1527,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1527,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1499,
											"end": 1527,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1527,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1527,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1527,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1527,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1527,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 1499,
											"end": 1527,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1527,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1527,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 1499,
											"end": 1527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1527,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 1499,
											"end": 1527,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1538,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1538,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1491,
											"end": 1573,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 1491,
											"end": 1573,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1491,
											"end": 1573,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1491,
											"end": 1573,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1491,
											"end": 1573,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1491,
											"end": 1573,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1491,
											"end": 1573,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1491,
											"end": 1573,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1491,
											"end": 1573,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1491,
											"end": 1573,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 1491,
											"end": 1573,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1491,
											"end": 1573,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1491,
											"end": 1573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1491,
											"end": 1573,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 1491,
											"end": 1573,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1491,
											"end": 1573,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1491,
											"end": 1573,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1491,
											"end": 1573,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1491,
											"end": 1573,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1491,
											"end": 1573,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1491,
											"end": 1573,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1491,
											"end": 1573,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1491,
											"end": 1573,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 1491,
											"end": 1573,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1627,
											"end": 1634,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1598,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1592,
											"end": 1598,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1592,
											"end": 1598,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1598,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1598,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1598,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1592,
											"end": 1598,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1598,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1598,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1598,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1592,
											"end": 1598,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1608,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1592,
											"end": 1608,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1608,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 1617,
											"end": 1621,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1623,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1592,
											"end": 1623,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1623,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1623,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1592,
											"end": 1623,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1623,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1592,
											"end": 1623,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1623,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1623,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1623,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1592,
											"end": 1623,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1623,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 1592,
											"end": 1623,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1623,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1623,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 1592,
											"end": 1623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1623,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 1592,
											"end": 1623,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1623,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1592,
											"end": 1623,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1592,
											"end": 1623,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1623,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1623,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1623,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1623,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1623,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1623,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1623,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1623,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1623,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1623,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1623,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 1592,
											"end": 1623,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1623,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1623,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1592,
											"end": 1623,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1623,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1623,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1623,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1592,
											"end": 1623,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1623,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 1592,
											"end": 1623,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1623,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1623,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1623,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1623,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1623,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1592,
											"end": 1623,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1623,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1623,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1592,
											"end": 1623,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1623,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1592,
											"end": 1623,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1623,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1623,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1623,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1623,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1623,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1623,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1592,
											"end": 1623,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1623,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1623,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1623,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1623,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1623,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 1592,
											"end": 1623,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1623,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1623,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 1592,
											"end": 1623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1623,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 1592,
											"end": 1623,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1634,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1634,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1584,
											"end": 1669,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 1584,
											"end": 1669,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1584,
											"end": 1669,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1584,
											"end": 1669,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1584,
											"end": 1669,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1584,
											"end": 1669,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1584,
											"end": 1669,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1584,
											"end": 1669,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1584,
											"end": 1669,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1584,
											"end": 1669,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 1584,
											"end": 1669,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1584,
											"end": 1669,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 1584,
											"end": 1669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1584,
											"end": 1669,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 1584,
											"end": 1669,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1584,
											"end": 1669,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1584,
											"end": 1669,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1584,
											"end": 1669,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1584,
											"end": 1669,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1584,
											"end": 1669,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1584,
											"end": 1669,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1584,
											"end": 1669,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1584,
											"end": 1669,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 1584,
											"end": 1669,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1682,
											"end": 1741,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 1706,
											"end": 1716,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1726,
											"end": 1730,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 1733,
											"end": 1740,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1682,
											"end": 1688,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1682,
											"end": 1688,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1682,
											"end": 1688,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1682,
											"end": 1688,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1682,
											"end": 1688,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1682,
											"end": 1688,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1682,
											"end": 1688,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1682,
											"end": 1688,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1682,
											"end": 1688,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1682,
											"end": 1688,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1682,
											"end": 1688,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1682,
											"end": 1705,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1682,
											"end": 1705,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1682,
											"end": 1705,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 1682,
											"end": 1705,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1682,
											"end": 1741,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1682,
											"end": 1741,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1682,
											"end": 1741,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1682,
											"end": 1741,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1682,
											"end": 1741,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1682,
											"end": 1741,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1682,
											"end": 1741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1682,
											"end": 1741,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 1682,
											"end": 1741,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1752,
											"end": 1792,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 1772,
											"end": 1782,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1784,
											"end": 1791,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1752,
											"end": 1758,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1752,
											"end": 1758,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1752,
											"end": 1758,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1752,
											"end": 1758,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1752,
											"end": 1758,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1752,
											"end": 1758,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1752,
											"end": 1758,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1752,
											"end": 1758,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1752,
											"end": 1758,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1752,
											"end": 1758,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1752,
											"end": 1758,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1752,
											"end": 1771,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1752,
											"end": 1771,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1752,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1752,
											"end": 1771,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1752,
											"end": 1792,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1752,
											"end": 1792,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1752,
											"end": 1792,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1752,
											"end": 1792,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1752,
											"end": 1792,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1752,
											"end": 1792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1752,
											"end": 1792,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 1752,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1815,
											"end": 1825,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1810,
											"end": 1844,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1810,
											"end": 1844,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1810,
											"end": 1844,
											"name": "PUSH",
											"source": 4,
											"value": "77F92A1B6A1A11DE8CA49515AD4C1FAD45632DD3442167D74B90B304A3C7A758"
										},
										{
											"begin": 1827,
											"end": 1834,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1836,
											"end": 1843,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1810,
											"end": 1844,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1810,
											"end": 1844,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1810,
											"end": 1844,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 1810,
											"end": 1844,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1810,
											"end": 1844,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1810,
											"end": 1844,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1810,
											"end": 1844,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 1810,
											"end": 1844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1810,
											"end": 1844,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 1810,
											"end": 1844,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1810,
											"end": 1844,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1810,
											"end": 1844,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1810,
											"end": 1844,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1810,
											"end": 1844,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1810,
											"end": 1844,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1810,
											"end": 1844,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1810,
											"end": 1844,
											"name": "LOG2",
											"source": 4
										},
										{
											"begin": 1376,
											"end": 1852,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1331,
											"end": 1852,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1331,
											"end": 1852,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2027,
											"end": 2126,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2027,
											"end": 2126,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 494,
											"end": 499,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 494,
											"end": 499,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 494,
											"end": 499,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 494,
											"end": 499,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 494,
											"end": 499,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 494,
											"end": 499,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 494,
											"end": 499,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 494,
											"end": 499,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 494,
											"end": 499,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 494,
											"end": 499,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 480,
											"end": 499,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 480,
											"end": 499,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 480,
											"end": 490,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 480,
											"end": 499,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 480,
											"end": 499,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 480,
											"end": 499,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 472,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 472,
											"end": 517,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 472,
											"end": 517,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 472,
											"end": 517,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 472,
											"end": 517,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 472,
											"end": 517,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 472,
											"end": 517,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 472,
											"end": 517,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 472,
											"end": 517,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 472,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 472,
											"end": 517,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 472,
											"end": 517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 472,
											"end": 517,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 472,
											"end": 517,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 472,
											"end": 517,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 472,
											"end": 517,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 472,
											"end": 517,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 517,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 472,
											"end": 517,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 472,
											"end": 517,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 517,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 472,
											"end": 517,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 472,
											"end": 517,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2110,
											"end": 2118,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2102,
											"end": 2107,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2102,
											"end": 2107,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2102,
											"end": 2118,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2102,
											"end": 2118,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2102,
											"end": 2118,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2102,
											"end": 2118,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2102,
											"end": 2118,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2102,
											"end": 2118,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2102,
											"end": 2118,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2102,
											"end": 2118,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2102,
											"end": 2118,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2102,
											"end": 2118,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2102,
											"end": 2118,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2102,
											"end": 2118,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2102,
											"end": 2118,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2102,
											"end": 2118,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2102,
											"end": 2118,
											"modifierDepth": 1,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 2102,
											"end": 2118,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2102,
											"end": 2118,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2102,
											"end": 2118,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2027,
											"end": 2126,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2027,
											"end": 2126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1822,
											"end": 1827,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1844,
											"end": 1849,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 1865,
											"end": 1869,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1871,
											"end": 1873,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1875,
											"end": 1880,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1829,
											"end": 1882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1802,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1802,
											"end": 1883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1405,
											"end": 1410,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1432,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 1444,
											"end": 1446,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1448,
											"end": 1453,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 1412,
											"end": 1455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1385,
											"end": 1404,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1385,
											"end": 1456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1303,
											"end": 1463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4478,
											"end": 4501,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 4532,
											"end": 4536,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4512,
											"end": 4517,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4504,
											"end": 4537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4478,
											"end": 4537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4478,
											"end": 4537,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4572,
											"end": 4573,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4551,
											"end": 4561,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4568,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4589,
											"end": 4599,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 4578,
											"end": 4608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4577,
											"end": 4608,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4664,
											"end": 4669,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 2,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 4631,
											"end": 4671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4129,
											"end": 4688,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4059,
											"end": 4688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2780,
											"end": 2792,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2841,
											"end": 2845,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2847,
											"end": 2848,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2811,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 2811,
											"end": 2849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2804,
											"end": 2849,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2804,
											"end": 2849,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2705,
											"end": 2856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3291,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3331,
											"end": 3336,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3307,
											"end": 3328,
											"name": "SELFBALANCE",
											"source": 3
										},
										{
											"begin": 3307,
											"end": 3336,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3394,
											"end": 3398,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 3,
											"value": "CD78605900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 3359,
											"end": 3400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3435,
											"end": 3458,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3468,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3481,
											"end": 3486,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3488,
											"end": 3492,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 3462,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 3537,
											"end": 3543,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3545,
											"end": 3552,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3554,
											"end": 3564,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3510,
											"end": 3536,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 3510,
											"end": 3565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4769,
											"end": 4781,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4798,
											"end": 4805,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 4829,
											"end": 4839,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4821,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 4821,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5066,
											"end": 5067,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5045,
											"end": 5055,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5062,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5067,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5093,
											"end": 5094,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5071,
											"end": 5077,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 5071,
											"end": 5094,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5138,
											"end": 5144,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 3,
											"value": "9996B31500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 5121,
											"end": 5145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5180,
											"end": 5190,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5894,
											"end": 5895,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5874,
											"end": 5884,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5874,
											"end": 5891,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5874,
											"end": 5895,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6102,
											"end": 6112,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6096,
											"end": 6113,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6158,
											"end": 6173,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6145,
											"end": 6155,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6141,
											"end": 6143,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6137,
											"end": 6156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6130,
											"end": 6174,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 3,
											"value": "1425EA4200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1062,
											"end": 1069,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1102,
											"end": 1144,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1095,
											"end": 1100,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1091,
											"end": 1145,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1080,
											"end": 1145,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1080,
											"end": 1145,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1157,
											"end": 1217,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 1157,
											"end": 1217,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1185,
											"end": 1188,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1206,
											"end": 1211,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1199,
											"end": 1211,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1199,
											"end": 1211,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1157,
											"end": 1217,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1157,
											"end": 1217,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1157,
											"end": 1217,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1157,
											"end": 1217,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1223,
											"end": 1365,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 1223,
											"end": 1365,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1273,
											"end": 1282,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1306,
											"end": 1359,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 1324,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 1333,
											"end": 1357,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 1351,
											"end": 1356,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1333,
											"end": 1357,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 1333,
											"end": 1357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1333,
											"end": 1357,
											"name": "tag",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 1333,
											"end": 1357,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1324,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 1324,
											"end": 1358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1324,
											"end": 1358,
											"name": "tag",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 1324,
											"end": 1358,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1306,
											"end": 1359,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 1306,
											"end": 1359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1306,
											"end": 1359,
											"name": "tag",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 1306,
											"end": 1359,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1293,
											"end": 1359,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1293,
											"end": 1359,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1223,
											"end": 1365,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1223,
											"end": 1365,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1223,
											"end": 1365,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1223,
											"end": 1365,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1371,
											"end": 1497,
											"name": "tag",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 1371,
											"end": 1497,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1421,
											"end": 1430,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 1485,
											"end": 1490,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1454,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 1454,
											"end": 1491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1454,
											"end": 1491,
											"name": "tag",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 1454,
											"end": 1491,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1441,
											"end": 1491,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1441,
											"end": 1491,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1371,
											"end": 1497,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1371,
											"end": 1497,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1371,
											"end": 1497,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1371,
											"end": 1497,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1503,
											"end": 1642,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 1503,
											"end": 1642,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1566,
											"end": 1575,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1599,
											"end": 1636,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 1630,
											"end": 1635,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1599,
											"end": 1636,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 1599,
											"end": 1636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1599,
											"end": 1636,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 1599,
											"end": 1636,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1586,
											"end": 1636,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1586,
											"end": 1636,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1503,
											"end": 1642,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1503,
											"end": 1642,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1503,
											"end": 1642,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1503,
											"end": 1642,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1648,
											"end": 1805,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 1648,
											"end": 1805,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1748,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 1792,
											"end": 1797,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1748,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 1748,
											"end": 1798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1748,
											"end": 1798,
											"name": "tag",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 1748,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1743,
											"end": 1746,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1736,
											"end": 1799,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1648,
											"end": 1805,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1648,
											"end": 1805,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1648,
											"end": 1805,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1811,
											"end": 2059,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 1811,
											"end": 2059,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1917,
											"end": 1921,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1955,
											"end": 1957,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1944,
											"end": 1953,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 1958,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1932,
											"end": 1958,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1932,
											"end": 1958,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1968,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 2049,
											"end": 2050,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2038,
											"end": 2047,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2051,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2025,
											"end": 2031,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1968,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 1968,
											"end": 2052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1968,
											"end": 2052,
											"name": "tag",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 1968,
											"end": 2052,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1811,
											"end": 2059,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1811,
											"end": 2059,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1811,
											"end": 2059,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1811,
											"end": 2059,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1811,
											"end": 2059,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2065,
											"end": 2183,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 2065,
											"end": 2183,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2152,
											"end": 2176,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 2170,
											"end": 2175,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2152,
											"end": 2176,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 2152,
											"end": 2176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2152,
											"end": 2176,
											"name": "tag",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 2152,
											"end": 2176,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2147,
											"end": 2150,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2140,
											"end": 2177,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2065,
											"end": 2183,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2065,
											"end": 2183,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2065,
											"end": 2183,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2189,
											"end": 2411,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 2189,
											"end": 2411,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2282,
											"end": 2286,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2320,
											"end": 2322,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2309,
											"end": 2318,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2305,
											"end": 2323,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2297,
											"end": 2323,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2297,
											"end": 2323,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2333,
											"end": 2404,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 2401,
											"end": 2402,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2390,
											"end": 2399,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2386,
											"end": 2403,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2377,
											"end": 2383,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2333,
											"end": 2404,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 2333,
											"end": 2404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2333,
											"end": 2404,
											"name": "tag",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 2333,
											"end": 2404,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2189,
											"end": 2411,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2189,
											"end": 2411,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2189,
											"end": 2411,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2189,
											"end": 2411,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2189,
											"end": 2411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2417,
											"end": 2513,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 2417,
											"end": 2513,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2454,
											"end": 2461,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2483,
											"end": 2507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 2501,
											"end": 2506,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2483,
											"end": 2507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 2483,
											"end": 2507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2483,
											"end": 2507,
											"name": "tag",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 2483,
											"end": 2507,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2472,
											"end": 2507,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2472,
											"end": 2507,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2417,
											"end": 2513,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2417,
											"end": 2513,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2417,
											"end": 2513,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2417,
											"end": 2513,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2519,
											"end": 2637,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 2519,
											"end": 2637,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2606,
											"end": 2630,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 2624,
											"end": 2629,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2606,
											"end": 2630,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 2606,
											"end": 2630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2606,
											"end": 2630,
											"name": "tag",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 2606,
											"end": 2630,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2601,
											"end": 2604,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2594,
											"end": 2631,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2519,
											"end": 2637,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2519,
											"end": 2637,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2519,
											"end": 2637,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2643,
											"end": 2865,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 2643,
											"end": 2865,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2736,
											"end": 2740,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2774,
											"end": 2776,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2763,
											"end": 2772,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2759,
											"end": 2777,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2751,
											"end": 2777,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2751,
											"end": 2777,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2787,
											"end": 2858,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 2855,
											"end": 2856,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2844,
											"end": 2853,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2840,
											"end": 2857,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2831,
											"end": 2837,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2787,
											"end": 2858,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 2787,
											"end": 2858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2787,
											"end": 2858,
											"name": "tag",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 2787,
											"end": 2858,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2643,
											"end": 2865,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2643,
											"end": 2865,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2643,
											"end": 2865,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2643,
											"end": 2865,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2643,
											"end": 2865,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2871,
											"end": 2993,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 2871,
											"end": 2993,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2944,
											"end": 2968,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 2962,
											"end": 2967,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2944,
											"end": 2968,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 2944,
											"end": 2968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2944,
											"end": 2968,
											"name": "tag",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 2944,
											"end": 2968,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2937,
											"end": 2942,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2934,
											"end": 2969,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2924,
											"end": 2987,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 2924,
											"end": 2987,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2983,
											"end": 2984,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2980,
											"end": 2981,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2973,
											"end": 2985,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2924,
											"end": 2987,
											"name": "tag",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 2924,
											"end": 2987,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2871,
											"end": 2993,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2871,
											"end": 2993,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2999,
											"end": 3138,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 2999,
											"end": 3138,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3045,
											"end": 3050,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3083,
											"end": 3089,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3070,
											"end": 3090,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 3061,
											"end": 3090,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3061,
											"end": 3090,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3099,
											"end": 3132,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 3126,
											"end": 3131,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3099,
											"end": 3132,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 3099,
											"end": 3132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3099,
											"end": 3132,
											"name": "tag",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 3099,
											"end": 3132,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2999,
											"end": 3138,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2999,
											"end": 3138,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2999,
											"end": 3138,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2999,
											"end": 3138,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2999,
											"end": 3138,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3144,
											"end": 3473,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 3144,
											"end": 3473,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3203,
											"end": 3209,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3252,
											"end": 3254,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3240,
											"end": 3249,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3231,
											"end": 3238,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3227,
											"end": 3250,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3223,
											"end": 3255,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 3220,
											"end": 3339,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3220,
											"end": 3339,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 3220,
											"end": 3339,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3258,
											"end": 3337,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 3258,
											"end": 3337,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 3258,
											"end": 3337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3258,
											"end": 3337,
											"name": "tag",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 3258,
											"end": 3337,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3220,
											"end": 3339,
											"name": "tag",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 3220,
											"end": 3339,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3378,
											"end": 3379,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3403,
											"end": 3456,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 3448,
											"end": 3455,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3439,
											"end": 3445,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3428,
											"end": 3437,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3446,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3403,
											"end": 3456,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 3403,
											"end": 3456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3403,
											"end": 3456,
											"name": "tag",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 3403,
											"end": 3456,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3393,
											"end": 3456,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3393,
											"end": 3456,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3349,
											"end": 3466,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3144,
											"end": 3473,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3144,
											"end": 3473,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3144,
											"end": 3473,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3144,
											"end": 3473,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3144,
											"end": 3473,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3479,
											"end": 3659,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 3479,
											"end": 3659,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3527,
											"end": 3604,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3524,
											"end": 3525,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3517,
											"end": 3605,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3624,
											"end": 3628,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 3621,
											"end": 3622,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3614,
											"end": 3629,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3648,
											"end": 3652,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3645,
											"end": 3646,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3653,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3665,
											"end": 4075,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 3665,
											"end": 4075,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3705,
											"end": 3712,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3728,
											"end": 3748,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 3746,
											"end": 3747,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3728,
											"end": 3748,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 3728,
											"end": 3748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3728,
											"end": 3748,
											"name": "tag",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 3728,
											"end": 3748,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3723,
											"end": 3748,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3723,
											"end": 3748,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3762,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 3780,
											"end": 3781,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3762,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 3762,
											"end": 3782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3762,
											"end": 3782,
											"name": "tag",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 3762,
											"end": 3782,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3757,
											"end": 3782,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3757,
											"end": 3782,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3817,
											"end": 3818,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3814,
											"end": 3815,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3810,
											"end": 3819,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 3839,
											"end": 3869,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 3857,
											"end": 3868,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3839,
											"end": 3869,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 3839,
											"end": 3869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3839,
											"end": 3869,
											"name": "tag",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 3839,
											"end": 3869,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3828,
											"end": 3869,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3828,
											"end": 3869,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4018,
											"end": 4019,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4009,
											"end": 4016,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4005,
											"end": 4020,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 4002,
											"end": 4003,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3999,
											"end": 4021,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 3980,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3972,
											"end": 3981,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3952,
											"end": 4035,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 3929,
											"end": 4068,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 3929,
											"end": 4068,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4048,
											"end": 4066,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 4048,
											"end": 4066,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 4048,
											"end": 4066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4048,
											"end": 4066,
											"name": "tag",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 4048,
											"end": 4066,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3929,
											"end": 4068,
											"name": "tag",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 3929,
											"end": 4068,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3713,
											"end": 4075,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3665,
											"end": 4075,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3665,
											"end": 4075,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3665,
											"end": 4075,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3665,
											"end": 4075,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3665,
											"end": 4075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4081,
											"end": 4261,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 4081,
											"end": 4261,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4129,
											"end": 4206,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4126,
											"end": 4127,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4119,
											"end": 4207,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4226,
											"end": 4230,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 4223,
											"end": 4224,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4216,
											"end": 4231,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4250,
											"end": 4254,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4247,
											"end": 4248,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4240,
											"end": 4255,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4267,
											"end": 4452,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 4267,
											"end": 4452,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4307,
											"end": 4308,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4324,
											"end": 4344,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 4342,
											"end": 4343,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4324,
											"end": 4344,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 4324,
											"end": 4344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4324,
											"end": 4344,
											"name": "tag",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 4324,
											"end": 4344,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4319,
											"end": 4344,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4319,
											"end": 4344,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4358,
											"end": 4378,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 4376,
											"end": 4377,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4358,
											"end": 4378,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 4358,
											"end": 4378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4358,
											"end": 4378,
											"name": "tag",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 4358,
											"end": 4378,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4353,
											"end": 4378,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4353,
											"end": 4378,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4397,
											"end": 4398,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4387,
											"end": 4422,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 4387,
											"end": 4422,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4402,
											"end": 4420,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 4402,
											"end": 4420,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 4402,
											"end": 4420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4402,
											"end": 4420,
											"name": "tag",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 4402,
											"end": 4420,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4387,
											"end": 4422,
											"name": "tag",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 4387,
											"end": 4422,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4444,
											"end": 4445,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4441,
											"end": 4442,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4437,
											"end": 4446,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 4432,
											"end": 4446,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4432,
											"end": 4446,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4267,
											"end": 4452,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4267,
											"end": 4452,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4267,
											"end": 4452,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4267,
											"end": 4452,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4267,
											"end": 4452,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4458,
											"end": 4601,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 4458,
											"end": 4601,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4515,
											"end": 4520,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4546,
											"end": 4552,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4540,
											"end": 4553,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4531,
											"end": 4553,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4531,
											"end": 4553,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4562,
											"end": 4595,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 4589,
											"end": 4594,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4562,
											"end": 4595,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 4562,
											"end": 4595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4562,
											"end": 4595,
											"name": "tag",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 4562,
											"end": 4595,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4458,
											"end": 4601,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4458,
											"end": 4601,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4458,
											"end": 4601,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4458,
											"end": 4601,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4458,
											"end": 4601,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4607,
											"end": 4958,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 4607,
											"end": 4958,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4677,
											"end": 4683,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4726,
											"end": 4728,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4714,
											"end": 4723,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4705,
											"end": 4712,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4701,
											"end": 4724,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4697,
											"end": 4729,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 4694,
											"end": 4813,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4694,
											"end": 4813,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 4694,
											"end": 4813,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4732,
											"end": 4811,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 4732,
											"end": 4811,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 4732,
											"end": 4811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4732,
											"end": 4811,
											"name": "tag",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 4732,
											"end": 4811,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4694,
											"end": 4813,
											"name": "tag",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 4694,
											"end": 4813,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4852,
											"end": 4853,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4877,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 4933,
											"end": 4940,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4924,
											"end": 4930,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4913,
											"end": 4922,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4909,
											"end": 4931,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4877,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 4877,
											"end": 4941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4877,
											"end": 4941,
											"name": "tag",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 4877,
											"end": 4941,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4867,
											"end": 4941,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4867,
											"end": 4941,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4823,
											"end": 4951,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4607,
											"end": 4958,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4607,
											"end": 4958,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4607,
											"end": 4958,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4607,
											"end": 4958,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4607,
											"end": 4958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4964,
											"end": 5133,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 4964,
											"end": 5133,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5048,
											"end": 5059,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5082,
											"end": 5088,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5077,
											"end": 5080,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5070,
											"end": 5089,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5122,
											"end": 5126,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5117,
											"end": 5120,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5113,
											"end": 5127,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5098,
											"end": 5127,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5098,
											"end": 5127,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4964,
											"end": 5133,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4964,
											"end": 5133,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4964,
											"end": 5133,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4964,
											"end": 5133,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4964,
											"end": 5133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5139,
											"end": 5319,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 5139,
											"end": 5319,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5279,
											"end": 5311,
											"name": "PUSH",
											"source": 5,
											"value": "496E73756666696369656E742062616C616E6365206F6620546F6B656E410000"
										},
										{
											"begin": 5275,
											"end": 5276,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5267,
											"end": 5273,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5263,
											"end": 5277,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5256,
											"end": 5312,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5139,
											"end": 5319,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5139,
											"end": 5319,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5325,
											"end": 5691,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 5325,
											"end": 5691,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5467,
											"end": 5470,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5488,
											"end": 5555,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 5552,
											"end": 5554,
											"name": "PUSH",
											"source": 5,
											"value": "1E"
										},
										{
											"begin": 5547,
											"end": 5550,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5488,
											"end": 5555,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 5488,
											"end": 5555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5488,
											"end": 5555,
											"name": "tag",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 5488,
											"end": 5555,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5481,
											"end": 5555,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5481,
											"end": 5555,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5564,
											"end": 5657,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 5653,
											"end": 5656,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5564,
											"end": 5657,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 5564,
											"end": 5657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5564,
											"end": 5657,
											"name": "tag",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 5564,
											"end": 5657,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5682,
											"end": 5684,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5677,
											"end": 5680,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5673,
											"end": 5685,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5666,
											"end": 5685,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5666,
											"end": 5685,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5325,
											"end": 5691,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5325,
											"end": 5691,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5325,
											"end": 5691,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5325,
											"end": 5691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5697,
											"end": 6116,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 5697,
											"end": 6116,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5863,
											"end": 5867,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5901,
											"end": 5903,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5890,
											"end": 5899,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5886,
											"end": 5904,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5878,
											"end": 5904,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5878,
											"end": 5904,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5950,
											"end": 5959,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5944,
											"end": 5948,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5940,
											"end": 5960,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5936,
											"end": 5937,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5925,
											"end": 5934,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5921,
											"end": 5938,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5914,
											"end": 5961,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5978,
											"end": 6109,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 6104,
											"end": 6108,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5978,
											"end": 6109,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 5978,
											"end": 6109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5978,
											"end": 6109,
											"name": "tag",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 5978,
											"end": 6109,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5970,
											"end": 6109,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5970,
											"end": 6109,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5697,
											"end": 6116,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5697,
											"end": 6116,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5697,
											"end": 6116,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5697,
											"end": 6116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6122,
											"end": 6302,
											"name": "tag",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 6122,
											"end": 6302,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6262,
											"end": 6294,
											"name": "PUSH",
											"source": 5,
											"value": "496E73756666696369656E742062616C616E6365206F6620546F6B656E420000"
										},
										{
											"begin": 6258,
											"end": 6259,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6250,
											"end": 6256,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6246,
											"end": 6260,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6239,
											"end": 6295,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6122,
											"end": 6302,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6122,
											"end": 6302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6308,
											"end": 6674,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 6308,
											"end": 6674,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6450,
											"end": 6453,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6471,
											"end": 6538,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 6535,
											"end": 6537,
											"name": "PUSH",
											"source": 5,
											"value": "1E"
										},
										{
											"begin": 6530,
											"end": 6533,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6471,
											"end": 6538,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 6471,
											"end": 6538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6471,
											"end": 6538,
											"name": "tag",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 6471,
											"end": 6538,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6464,
											"end": 6538,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6464,
											"end": 6538,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6547,
											"end": 6640,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 6636,
											"end": 6639,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6547,
											"end": 6640,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 6547,
											"end": 6640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6547,
											"end": 6640,
											"name": "tag",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 6547,
											"end": 6640,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6665,
											"end": 6667,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6660,
											"end": 6663,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6656,
											"end": 6668,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6649,
											"end": 6668,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6649,
											"end": 6668,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6308,
											"end": 6674,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6308,
											"end": 6674,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6308,
											"end": 6674,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6308,
											"end": 6674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6680,
											"end": 7099,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 6680,
											"end": 7099,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6846,
											"end": 6850,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6884,
											"end": 6886,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6873,
											"end": 6882,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6869,
											"end": 6887,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6861,
											"end": 6887,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6861,
											"end": 6887,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6933,
											"end": 6942,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6927,
											"end": 6931,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6923,
											"end": 6943,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6919,
											"end": 6920,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6908,
											"end": 6917,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6904,
											"end": 6921,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6897,
											"end": 6944,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6961,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 7087,
											"end": 7091,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6961,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 6961,
											"end": 7092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6961,
											"end": 7092,
											"name": "tag",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 6961,
											"end": 7092,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6953,
											"end": 7092,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6953,
											"end": 7092,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6680,
											"end": 7099,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6680,
											"end": 7099,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6680,
											"end": 7099,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6680,
											"end": 7099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7105,
											"end": 7437,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 7105,
											"end": 7437,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7226,
											"end": 7230,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7264,
											"end": 7266,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7253,
											"end": 7262,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7249,
											"end": 7267,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7241,
											"end": 7267,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7241,
											"end": 7267,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7277,
											"end": 7348,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 7345,
											"end": 7346,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7334,
											"end": 7343,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7330,
											"end": 7347,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7321,
											"end": 7327,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7277,
											"end": 7348,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 7277,
											"end": 7348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7277,
											"end": 7348,
											"name": "tag",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 7277,
											"end": 7348,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7358,
											"end": 7430,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 7426,
											"end": 7428,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7415,
											"end": 7424,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7411,
											"end": 7429,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7402,
											"end": 7408,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7358,
											"end": 7430,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 7358,
											"end": 7430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7358,
											"end": 7430,
											"name": "tag",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 7358,
											"end": 7430,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7105,
											"end": 7437,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 7105,
											"end": 7437,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7105,
											"end": 7437,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7105,
											"end": 7437,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7105,
											"end": 7437,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7105,
											"end": 7437,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7443,
											"end": 7606,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 7443,
											"end": 7606,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7583,
											"end": 7598,
											"name": "PUSH",
											"source": 5,
											"value": "4E6F7420746865206F776E657200000000000000000000000000000000000000"
										},
										{
											"begin": 7579,
											"end": 7580,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7571,
											"end": 7577,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7567,
											"end": 7581,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7560,
											"end": 7599,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7443,
											"end": 7606,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7443,
											"end": 7606,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7612,
											"end": 7978,
											"name": "tag",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 7612,
											"end": 7978,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7754,
											"end": 7757,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7775,
											"end": 7842,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 7839,
											"end": 7841,
											"name": "PUSH",
											"source": 5,
											"value": "D"
										},
										{
											"begin": 7834,
											"end": 7837,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7775,
											"end": 7842,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 7775,
											"end": 7842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7775,
											"end": 7842,
											"name": "tag",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 7775,
											"end": 7842,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7768,
											"end": 7842,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7768,
											"end": 7842,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7851,
											"end": 7944,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 7940,
											"end": 7943,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7851,
											"end": 7944,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 7851,
											"end": 7944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7851,
											"end": 7944,
											"name": "tag",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 7851,
											"end": 7944,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7969,
											"end": 7971,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7964,
											"end": 7967,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7960,
											"end": 7972,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7953,
											"end": 7972,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7953,
											"end": 7972,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7612,
											"end": 7978,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7612,
											"end": 7978,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7612,
											"end": 7978,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7612,
											"end": 7978,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7984,
											"end": 8403,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 7984,
											"end": 8403,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8150,
											"end": 8154,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8188,
											"end": 8190,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8177,
											"end": 8186,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8173,
											"end": 8191,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8165,
											"end": 8191,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8165,
											"end": 8191,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8237,
											"end": 8246,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8231,
											"end": 8235,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8227,
											"end": 8247,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8223,
											"end": 8224,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8212,
											"end": 8221,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8208,
											"end": 8225,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8201,
											"end": 8248,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8265,
											"end": 8396,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 8391,
											"end": 8395,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8265,
											"end": 8396,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 8265,
											"end": 8396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8265,
											"end": 8396,
											"name": "tag",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 8265,
											"end": 8396,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8257,
											"end": 8396,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8257,
											"end": 8396,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7984,
											"end": 8403,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7984,
											"end": 8403,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7984,
											"end": 8403,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7984,
											"end": 8403,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8409,
											"end": 8851,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 8409,
											"end": 8851,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8558,
											"end": 8562,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8596,
											"end": 8598,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 8585,
											"end": 8594,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8581,
											"end": 8599,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8573,
											"end": 8599,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8573,
											"end": 8599,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8609,
											"end": 8680,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 8677,
											"end": 8678,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8666,
											"end": 8675,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8662,
											"end": 8679,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8653,
											"end": 8659,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 8609,
											"end": 8680,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 8609,
											"end": 8680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8609,
											"end": 8680,
											"name": "tag",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 8609,
											"end": 8680,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8690,
											"end": 8762,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 8758,
											"end": 8760,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8747,
											"end": 8756,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8743,
											"end": 8761,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8734,
											"end": 8740,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 8690,
											"end": 8762,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 8690,
											"end": 8762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8690,
											"end": 8762,
											"name": "tag",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 8690,
											"end": 8762,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8772,
											"end": 8844,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 8840,
											"end": 8842,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8829,
											"end": 8838,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8825,
											"end": 8843,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8816,
											"end": 8822,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8772,
											"end": 8844,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 8772,
											"end": 8844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8772,
											"end": 8844,
											"name": "tag",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 8772,
											"end": 8844,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8409,
											"end": 8851,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 8409,
											"end": 8851,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 8409,
											"end": 8851,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8409,
											"end": 8851,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8409,
											"end": 8851,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8409,
											"end": 8851,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8409,
											"end": 8851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8857,
											"end": 9189,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 8857,
											"end": 9189,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8978,
											"end": 8982,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9016,
											"end": 9018,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9005,
											"end": 9014,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9001,
											"end": 9019,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8993,
											"end": 9019,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8993,
											"end": 9019,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9029,
											"end": 9100,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 9097,
											"end": 9098,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9086,
											"end": 9095,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9082,
											"end": 9099,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9073,
											"end": 9079,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9029,
											"end": 9100,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 9029,
											"end": 9100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9029,
											"end": 9100,
											"name": "tag",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 9029,
											"end": 9100,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9110,
											"end": 9182,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 9178,
											"end": 9180,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9167,
											"end": 9176,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9163,
											"end": 9181,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9154,
											"end": 9160,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9110,
											"end": 9182,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 9110,
											"end": 9182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9110,
											"end": 9182,
											"name": "tag",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 9110,
											"end": 9182,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8857,
											"end": 9189,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 8857,
											"end": 9189,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8857,
											"end": 9189,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8857,
											"end": 9189,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8857,
											"end": 9189,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8857,
											"end": 9189,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9195,
											"end": 9285,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 9195,
											"end": 9285,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9229,
											"end": 9236,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9272,
											"end": 9277,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9265,
											"end": 9278,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9258,
											"end": 9279,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9247,
											"end": 9279,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9247,
											"end": 9279,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9195,
											"end": 9285,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9195,
											"end": 9285,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9195,
											"end": 9285,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9195,
											"end": 9285,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9291,
											"end": 9407,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 9291,
											"end": 9407,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9361,
											"end": 9382,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 9376,
											"end": 9381,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9361,
											"end": 9382,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 9361,
											"end": 9382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9361,
											"end": 9382,
											"name": "tag",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 9361,
											"end": 9382,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9354,
											"end": 9359,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9351,
											"end": 9383,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 9341,
											"end": 9401,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 9341,
											"end": 9401,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9397,
											"end": 9398,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9394,
											"end": 9395,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9387,
											"end": 9399,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 9341,
											"end": 9401,
											"name": "tag",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 9341,
											"end": 9401,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9291,
											"end": 9407,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9291,
											"end": 9407,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9413,
											"end": 9550,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 9413,
											"end": 9550,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9467,
											"end": 9472,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9498,
											"end": 9504,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9492,
											"end": 9505,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9483,
											"end": 9505,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9483,
											"end": 9505,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9514,
											"end": 9544,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 9538,
											"end": 9543,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9514,
											"end": 9544,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 9514,
											"end": 9544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9514,
											"end": 9544,
											"name": "tag",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 9514,
											"end": 9544,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9413,
											"end": 9550,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9413,
											"end": 9550,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9413,
											"end": 9550,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9413,
											"end": 9550,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9413,
											"end": 9550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9556,
											"end": 9901,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 9556,
											"end": 9901,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9623,
											"end": 9629,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9672,
											"end": 9674,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9660,
											"end": 9669,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9651,
											"end": 9658,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9647,
											"end": 9670,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9643,
											"end": 9675,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 9640,
											"end": 9759,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9640,
											"end": 9759,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 9640,
											"end": 9759,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9678,
											"end": 9757,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 9678,
											"end": 9757,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 9678,
											"end": 9757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9678,
											"end": 9757,
											"name": "tag",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 9678,
											"end": 9757,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9640,
											"end": 9759,
											"name": "tag",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 9640,
											"end": 9759,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9798,
											"end": 9799,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9823,
											"end": 9884,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 9876,
											"end": 9883,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9867,
											"end": 9873,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9856,
											"end": 9865,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9852,
											"end": 9874,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9823,
											"end": 9884,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 9823,
											"end": 9884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9823,
											"end": 9884,
											"name": "tag",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 9823,
											"end": 9884,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9813,
											"end": 9884,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9813,
											"end": 9884,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9769,
											"end": 9894,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9556,
											"end": 9901,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9556,
											"end": 9901,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9556,
											"end": 9901,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9556,
											"end": 9901,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9556,
											"end": 9901,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9907,
											"end": 10005,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 9907,
											"end": 10005,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9958,
											"end": 9964,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9992,
											"end": 9997,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9986,
											"end": 9998,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9976,
											"end": 9998,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9976,
											"end": 9998,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9907,
											"end": 10005,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9907,
											"end": 10005,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9907,
											"end": 10005,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9907,
											"end": 10005,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10011,
											"end": 10158,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 10011,
											"end": 10158,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10112,
											"end": 10123,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10149,
											"end": 10152,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10134,
											"end": 10152,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10134,
											"end": 10152,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10011,
											"end": 10158,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10011,
											"end": 10158,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10011,
											"end": 10158,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10011,
											"end": 10158,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10011,
											"end": 10158,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10164,
											"end": 10410,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 10164,
											"end": 10410,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10245,
											"end": 10246,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10255,
											"end": 10368,
											"name": "tag",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 10255,
											"end": 10368,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10269,
											"end": 10275,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10266,
											"end": 10267,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10263,
											"end": 10276,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 10255,
											"end": 10368,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10255,
											"end": 10368,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 10255,
											"end": 10368,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10354,
											"end": 10355,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10349,
											"end": 10352,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10345,
											"end": 10356,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10339,
											"end": 10357,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10335,
											"end": 10336,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10330,
											"end": 10333,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10326,
											"end": 10337,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10319,
											"end": 10358,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10291,
											"end": 10293,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10288,
											"end": 10289,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10284,
											"end": 10294,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10279,
											"end": 10294,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10279,
											"end": 10294,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10255,
											"end": 10368,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 10255,
											"end": 10368,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10255,
											"end": 10368,
											"name": "tag",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 10255,
											"end": 10368,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10402,
											"end": 10403,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10393,
											"end": 10399,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10388,
											"end": 10391,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10384,
											"end": 10400,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10377,
											"end": 10404,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10226,
											"end": 10410,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10164,
											"end": 10410,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10164,
											"end": 10410,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10164,
											"end": 10410,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10164,
											"end": 10410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10416,
											"end": 10802,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 10416,
											"end": 10802,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10520,
											"end": 10523,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10548,
											"end": 10586,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 10580,
											"end": 10585,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10548,
											"end": 10586,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 10548,
											"end": 10586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10548,
											"end": 10586,
											"name": "tag",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 10548,
											"end": 10586,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10602,
											"end": 10690,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "282"
										},
										{
											"begin": 10683,
											"end": 10689,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10678,
											"end": 10681,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 10602,
											"end": 10690,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 10602,
											"end": 10690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10602,
											"end": 10690,
											"name": "tag",
											"source": 5,
											"value": "282"
										},
										{
											"begin": 10602,
											"end": 10690,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10595,
											"end": 10690,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 10595,
											"end": 10690,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10699,
											"end": 10764,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 10757,
											"end": 10763,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10752,
											"end": 10755,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 10745,
											"end": 10749,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10738,
											"end": 10743,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 10734,
											"end": 10750,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10699,
											"end": 10764,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 10699,
											"end": 10764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10699,
											"end": 10764,
											"name": "tag",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 10699,
											"end": 10764,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10789,
											"end": 10795,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10784,
											"end": 10787,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10780,
											"end": 10796,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10773,
											"end": 10796,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10773,
											"end": 10796,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10524,
											"end": 10802,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10416,
											"end": 10802,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10416,
											"end": 10802,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10416,
											"end": 10802,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10416,
											"end": 10802,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10416,
											"end": 10802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10808,
											"end": 11079,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 10808,
											"end": 11079,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10938,
											"end": 10941,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10960,
											"end": 11053,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 11049,
											"end": 11052,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11040,
											"end": 11046,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10960,
											"end": 11053,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 10960,
											"end": 11053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10960,
											"end": 11053,
											"name": "tag",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 10960,
											"end": 11053,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10953,
											"end": 11053,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10953,
											"end": 11053,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11070,
											"end": 11073,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11063,
											"end": 11073,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11063,
											"end": 11073,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10808,
											"end": 11079,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10808,
											"end": 11079,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10808,
											"end": 11079,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10808,
											"end": 11079,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10808,
											"end": 11079,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"contracts/swap.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"exchangeRate()": "3ba0b9a9",
							"owner()": "8da5cb5b",
							"setExchangeRate(uint256)": "db068e0e",
							"swapAForB(uint256)": "03102091",
							"swapBForA(uint256)": "e619a498",
							"tokenA()": "0fc63d10",
							"tokenB()": "5f64b55b",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_exchangeRate\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"exchangeRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_exchangeRate\",\"type\":\"uint256\"}],\"name\":\"setExchangeRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"}],\"name\":\"swapAForB\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"name\":\"swapBForA\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenA\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenB\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/swap.sol\":\"TokenSwap\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"contracts/swap.sol\":{\"keccak256\":\"0x33c26b9aff107ecc2801b3b222d7b7c16ab57f0a4feaae080d30ce5476ecba84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://00aa1c88ac87835fd5623ed9d838544dbb38258efa18497c1f0ea944ab9fe8a3\",\"dweb:/ipfs/QmNMnmwZmufWiXQtZeo3zAzGgZCwnwRLeC8cv3u2kf9Csu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 666,
								"contract": "contracts/swap.sol:TokenSwap",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 669,
								"contract": "contracts/swap.sol:TokenSwap",
								"label": "tokenA",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)77"
							},
							{
								"astId": 672,
								"contract": "contracts/swap.sol:TokenSwap",
								"label": "tokenB",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)77"
							},
							{
								"astId": 674,
								"contract": "contracts/swap.sol:TokenSwap",
								"label": "exchangeRate",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)77": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "213:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "395:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "404:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "426:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "446:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:0"
									},
									"src": "389:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "626:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "635:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "658:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "683:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:0"
									},
									"src": "620:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "930:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "970:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:0"
									},
									"scope": 77,
									"src": "911:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1221:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1233:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1266:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:0"
									},
									"scope": 77,
									"src": "1203:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1566:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1581:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1621:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:0"
									},
									"scope": 77,
									"src": "1547:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2325:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2375:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:0"
									},
									"scope": 77,
									"src": "2308:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2711:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2725:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2737:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2770:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:0"
									},
									"scope": 77,
									"src": "2689:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "203:2575:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						}
					],
					"src": "106:2673:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							113
						]
					},
					"id": 114,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 80,
								"nodeType": "StructuredDocumentation",
								"src": "149:1963:1",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
							},
							"fullyImplemented": false,
							"id": 113,
							"linearizedBaseContracts": [
								113
							],
							"name": "IERC20Permit",
							"nameLocation": "2123:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2142:850:1",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
									},
									"functionSelector": "d505accf",
									"id": 98,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "3006:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3030:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3022:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3022:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3053:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3045:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3045:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3078:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3070:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 86,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3070:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3101:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3093:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 88,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3093:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3125:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3119:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 90,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3119:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3144:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3136:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 92,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3136:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3163:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3155:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 94,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3155:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3012:158:1"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3179:0:1"
									},
									"scope": 113,
									"src": "2997:183:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "3186:294:1",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 106,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "3494:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3509:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "3501:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3501:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3500:15:1"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "3539:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3539:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3538:9:1"
									},
									"scope": 113,
									"src": "3485:63:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "3554:128:1",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 112,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "3749:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3765:2:1"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "3791:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 109,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3790:9:1"
									},
									"scope": 113,
									"src": "3740:60:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 114,
							"src": "2113:1689:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3680:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							656
						],
						"IERC20": [
							77
						],
						"IERC20Permit": [
							113
						],
						"SafeERC20": [
							403
						]
					},
					"id": 404,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 115,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 117,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 404,
							"sourceUnit": 78,
							"src": "141:37:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 116,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 77,
										"src": "149:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
							"file": "../extensions/IERC20Permit.sol",
							"id": 119,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 404,
							"sourceUnit": 114,
							"src": "179:60:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 118,
										"name": "IERC20Permit",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 113,
										"src": "187:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 121,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 404,
							"sourceUnit": 657,
							"src": "240:51:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 120,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 656,
										"src": "248:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 122,
								"nodeType": "StructuredDocumentation",
								"src": "293:457:2",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 403,
							"linearizedBaseContracts": [
								403
							],
							"name": "SafeERC20",
							"nameLocation": "759:9:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 125,
									"libraryName": {
										"id": 123,
										"name": "Address",
										"nameLocations": [
											"781:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 656,
										"src": "781:7:2"
									},
									"nodeType": "UsingForDirective",
									"src": "775:26:2",
									"typeName": {
										"id": 124,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "793:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"documentation": {
										"id": 126,
										"nodeType": "StructuredDocumentation",
										"src": "807:64:2",
										"text": " @dev An operation with an ERC20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 130,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "882:24:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "915:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "907:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "906:15:2"
									},
									"src": "876:46:2"
								},
								{
									"documentation": {
										"id": 131,
										"nodeType": "StructuredDocumentation",
										"src": "928:71:2",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 139,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "1010:32:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1051:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "1043:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "1068:16:2",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "1060:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1094:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "1086:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1086:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1042:70:2"
									},
									"src": "1004:109:2"
								},
								{
									"body": {
										"id": 162,
										"nodeType": "Block",
										"src": "1375:88:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 151,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 143,
															"src": "1405:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 154,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 143,
																		"src": "1427:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1433:8:2",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 44,
																	"src": "1427:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 156,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 145,
																			"src": "1444:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 157,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 147,
																			"src": "1448:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 158,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1443:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 152,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1412:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 153,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1416:10:2",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1412:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1412:43:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 150,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 353,
														"src": "1385:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1385:71:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 161,
												"nodeType": "ExpressionStatement",
												"src": "1385:71:2"
											}
										]
									},
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "1119:179:2",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 163,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1312:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1332:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "1325:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 142,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 141,
														"name": "IERC20",
														"nameLocations": [
															"1325:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "1325:6:2"
													},
													"referencedDeclaration": 77,
													"src": "1325:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1347:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "1339:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1359:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "1351:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1351:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1324:41:2"
									},
									"returnParameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1375:0:2"
									},
									"scope": 403,
									"src": "1303:160:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "1792:98:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 177,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "1822:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 180,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 167,
																		"src": "1844:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 181,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1850:12:2",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 76,
																	"src": "1844:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 182,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 169,
																			"src": "1865:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 183,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 171,
																			"src": "1871:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 184,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 173,
																			"src": "1875:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 185,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1864:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 178,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1829:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1833:10:2",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1829:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1829:53:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 176,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 353,
														"src": "1802:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1802:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "1802:81:2"
											}
										]
									},
									"documentation": {
										"id": 164,
										"nodeType": "StructuredDocumentation",
										"src": "1469:228:2",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1711:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1735:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1728:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 166,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 165,
														"name": "IERC20",
														"nameLocations": [
															"1728:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "1728:6:2"
													},
													"referencedDeclaration": 77,
													"src": "1728:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1750:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1742:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1742:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1764:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1756:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1756:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1776:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1768:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1768:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1727:55:2"
									},
									"returnParameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:0:2"
									},
									"scope": 403,
									"src": "1702:188:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 220,
										"nodeType": "Block",
										"src": "2167:139:2",
										"statements": [
											{
												"assignments": [
													202
												],
												"declarations": [
													{
														"constant": false,
														"id": 202,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2185:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 220,
														"src": "2177:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 201,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2177:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 211,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 207,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2224:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$403",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$403",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 206,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2216:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 205,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2216:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2216:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 209,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 196,
															"src": "2231:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 203,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "2200:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 204,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2206:9:2",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 54,
														"src": "2200:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2200:39:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2177:62:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 213,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "2262:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 214,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 196,
															"src": "2269:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 215,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 202,
																"src": "2278:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 216,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 198,
																"src": "2293:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2278:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 212,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 311,
														"src": "2249:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2249:50:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 219,
												"nodeType": "ExpressionStatement",
												"src": "2249:50:2"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "1896:180:2",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2090:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2119:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2112:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 193,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 192,
														"name": "IERC20",
														"nameLocations": [
															"2112:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "2112:6:2"
													},
													"referencedDeclaration": 77,
													"src": "2112:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2134:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2126:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2126:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2151:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2143:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2143:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2111:46:2"
									},
									"returnParameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2167:0:2"
									},
									"scope": 403,
									"src": "2081:225:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 263,
										"nodeType": "Block",
										"src": "2607:370:2",
										"statements": [
											{
												"id": 262,
												"nodeType": "UncheckedBlock",
												"src": "2617:354:2",
												"statements": [
													{
														"assignments": [
															233
														],
														"declarations": [
															{
																"constant": false,
																"id": 233,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "2649:16:2",
																"nodeType": "VariableDeclaration",
																"scope": 262,
																"src": "2641:24:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 232,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2641:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 242,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 238,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2692:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$403",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$403",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 237,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2684:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 236,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2684:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 239,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2684:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 240,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 227,
																	"src": "2699:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 234,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 225,
																	"src": "2668:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 235,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2674:9:2",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 54,
																"src": "2668:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2668:39:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2641:66:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 243,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 233,
																"src": "2725:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 244,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 229,
																"src": "2744:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2725:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 253,
														"nodeType": "IfStatement",
														"src": "2721:160:2",
														"trueBody": {
															"id": 252,
															"nodeType": "Block",
															"src": "2763:118:2",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 247,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 227,
																				"src": "2821:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 248,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 233,
																				"src": "2830:16:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 249,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 229,
																				"src": "2848:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 246,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 139,
																			"src": "2788:32:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																				"typeString": "function (address,uint256,uint256) pure"
																			}
																		},
																		"id": 250,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2788:78:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 251,
																	"nodeType": "RevertStatement",
																	"src": "2781:85:2"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 255,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 225,
																	"src": "2907:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 256,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 227,
																	"src": "2914:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 259,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 257,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 233,
																		"src": "2923:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 258,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 229,
																		"src": "2942:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2923:36:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 254,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "2894:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2894:66:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 261,
														"nodeType": "ExpressionStatement",
														"src": "2894:66:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 222,
										"nodeType": "StructuredDocumentation",
										"src": "2312:192:2",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful."
									},
									"id": 264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2518:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2547:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "2540:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 224,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 223,
														"name": "IERC20",
														"nameLocations": [
															"2540:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "2540:6:2"
													},
													"referencedDeclaration": 77,
													"src": "2540:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2562:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "2554:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2554:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "2579:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "2571:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2571:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2539:58:2"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2607:0:2"
									},
									"scope": 403,
									"src": "2509:468:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 310,
										"nodeType": "Block",
										"src": "3373:303:2",
										"statements": [
											{
												"assignments": [
													276
												],
												"declarations": [
													{
														"constant": false,
														"id": 276,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "3396:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 310,
														"src": "3383:25:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 275,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3383:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 285,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 279,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 268,
																"src": "3426:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$77",
																	"typeString": "contract IERC20"
																}
															},
															"id": 280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3432:7:2",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 64,
															"src": "3426:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 281,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 270,
																	"src": "3442:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 282,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "3451:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 283,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3441:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 277,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "3411:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 278,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3415:10:2",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "3411:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3411:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3383:75:2"
											},
											{
												"condition": {
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3473:45:2",
													"subExpression": {
														"arguments": [
															{
																"id": 287,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 268,
																"src": "3498:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$77",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 288,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 276,
																"src": "3505:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$77",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 286,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "3474:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 289,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3474:44:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 309,
												"nodeType": "IfStatement",
												"src": "3469:201:2",
												"trueBody": {
													"id": 308,
													"nodeType": "Block",
													"src": "3520:150:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 292,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 268,
																		"src": "3554:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 295,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 268,
																					"src": "3576:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$77",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 296,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3582:7:2",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 64,
																				"src": "3576:13:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 297,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 270,
																						"src": "3592:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 298,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3601:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 299,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3591:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 293,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3561:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 294,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "3565:10:2",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "3561:14:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 300,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3561:43:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 291,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 353,
																	"src": "3534:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 301,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:71:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 302,
															"nodeType": "ExpressionStatement",
															"src": "3534:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 304,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 268,
																		"src": "3639:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 305,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 276,
																		"src": "3646:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 303,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 353,
																	"src": "3619:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 306,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3619:40:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 307,
															"nodeType": "ExpressionStatement",
															"src": "3619:40:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 265,
										"nodeType": "StructuredDocumentation",
										"src": "2983:308:2",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."
									},
									"id": 311,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "3305:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3325:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "3318:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 267,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 266,
														"name": "IERC20",
														"nameLocations": [
															"3318:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "3318:6:2"
													},
													"referencedDeclaration": 77,
													"src": "3318:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3340:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "3332:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3332:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3357:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "3349:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3349:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:46:2"
									},
									"returnParameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3373:0:2"
									},
									"scope": 403,
									"src": "3296:380:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 352,
										"nodeType": "Block",
										"src": "4129:559:2",
										"statements": [
											{
												"assignments": [
													321
												],
												"declarations": [
													{
														"constant": false,
														"id": 321,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4491:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 352,
														"src": "4478:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 320,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4478:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 329,
												"initialValue": {
													"arguments": [
														{
															"id": 327,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "4532:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 324,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "4512:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 323,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4504:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 322,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4504:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4504:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 326,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4519:12:2",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 477,
														"src": "4504:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory) returns (bytes memory)"
														}
													},
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4504:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4478:59:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 333,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 330,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 321,
																"src": "4551:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 331,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4562:6:2",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4551:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 332,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4572:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4551:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 341,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4577:31:2",
														"subExpression": {
															"arguments": [
																{
																	"id": 336,
																	"name": "returndata",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 321,
																	"src": "4589:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"components": [
																		{
																			"id": 338,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4602:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bool_$",
																				"typeString": "type(bool)"
																			},
																			"typeName": {
																				"id": 337,
																				"name": "bool",
																				"nodeType": "ElementaryTypeName",
																				"src": "4602:4:2",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"id": 339,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4601:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																],
																"expression": {
																	"id": 334,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4578:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 335,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4582:6:2",
																"memberName": "decode",
																"nodeType": "MemberAccess",
																"src": "4578:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4578:30:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4551:57:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 351,
												"nodeType": "IfStatement",
												"src": "4547:135:2",
												"trueBody": {
													"id": 350,
													"nodeType": "Block",
													"src": "4610:72:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 346,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 315,
																				"src": "4664:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$77",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$77",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 345,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4656:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 344,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4656:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 347,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4656:14:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 343,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 130,
																	"src": "4631:24:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 348,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4631:40:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 349,
															"nodeType": "RevertStatement",
															"src": "4624:47:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 312,
										"nodeType": "StructuredDocumentation",
										"src": "3682:372:2",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "4068:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4095:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "4088:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 314,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 313,
														"name": "IERC20",
														"nameLocations": [
															"4088:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "4088:6:2"
													},
													"referencedDeclaration": 77,
													"src": "4088:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4115:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "4102:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 316,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4102:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4087:33:2"
									},
									"returnParameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4129:0:2"
									},
									"scope": 403,
									"src": "4059:629:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 401,
										"nodeType": "Block",
										"src": "5278:489:2",
										"statements": [
											{
												"assignments": [
													365,
													367
												],
												"declarations": [
													{
														"constant": false,
														"id": 365,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5579:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 401,
														"src": "5574:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 364,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5574:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 367,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5601:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 401,
														"src": "5588:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 366,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5588:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 375,
												"initialValue": {
													"arguments": [
														{
															"id": 373,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 359,
															"src": "5635:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 370,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 357,
																	"src": "5623:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 369,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5615:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 368,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5615:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5615:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 372,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5630:4:2",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "5615:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5615:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5573:67:2"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 390,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 376,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "5657:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 380,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 377,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 367,
																				"src": "5669:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 378,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5680:6:2",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "5669:17:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 379,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5690:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "5669:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 383,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 367,
																				"src": "5706:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 385,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "5719:4:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 384,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "5719:4:2",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 386,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5718:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 381,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5695:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 382,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5699:6:2",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "5695:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5695:30:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "5669:56:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 389,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5668:58:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "5657:69:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 398,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 393,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 357,
																			"src": "5738:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 392,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5730:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 391,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5730:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 394,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5730:14:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 395,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5745:4:2",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "5730:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 396,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5750:6:2",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "5730:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 397,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5759:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5730:30:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5657:103:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 363,
												"id": 400,
												"nodeType": "Return",
												"src": "5650:110:2"
											}
										]
									},
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "4694:490:2",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."
									},
									"id": 402,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "5198:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5229:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "5222:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 356,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 355,
														"name": "IERC20",
														"nameLocations": [
															"5222:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "5222:6:2"
													},
													"referencedDeclaration": 77,
													"src": "5222:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5249:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "5236:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 358,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5236:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5221:33:2"
									},
									"returnParameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "5272:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 361,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5272:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5271:6:2"
									},
									"scope": 403,
									"src": "5189:578:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 404,
							"src": "751:5018:2",
							"usedErrors": [
								130,
								139
							],
							"usedEvents": []
						}
					],
					"src": "115:5655:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							656
						]
					},
					"id": 657,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 405,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 406,
								"nodeType": "StructuredDocumentation",
								"src": "127:67:3",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 656,
							"linearizedBaseContracts": [
								656
							],
							"name": "Address",
							"nameLocation": "203:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 407,
										"nodeType": "StructuredDocumentation",
										"src": "217:94:3",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cd786059",
									"id": 411,
									"name": "AddressInsufficientBalance",
									"nameLocation": "322:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "357:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "349:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:17:3"
									},
									"src": "316:50:3"
								},
								{
									"documentation": {
										"id": 412,
										"nodeType": "StructuredDocumentation",
										"src": "372:75:3",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 416,
									"name": "AddressEmptyCode",
									"nameLocation": "458:16:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "483:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "475:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:16:3"
									},
									"src": "452:39:3"
								},
								{
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "497:89:3",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "1425ea42",
									"id": 419,
									"name": "FailedInnerCall",
									"nameLocation": "597:15:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:2:3"
									},
									"src": "591:24:3"
								},
								{
									"body": {
										"id": 459,
										"nodeType": "Block",
										"src": "1602:260:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 429,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1624:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$656",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$656",
																		"typeString": "library Address"
																	}
																],
																"id": 428,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1616:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 427,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1616:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1616:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 431,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1630:7:3",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1616:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 432,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 424,
														"src": "1640:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1616:30:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 442,
												"nodeType": "IfStatement",
												"src": "1612:109:3",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "1648:73:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 437,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1704:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$656",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$656",
																					"typeString": "library Address"
																				}
																			],
																			"id": 436,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1696:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 435,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1696:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1696:13:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 434,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 411,
																	"src": "1669:26:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 439,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1669:41:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 440,
															"nodeType": "RevertStatement",
															"src": "1662:48:3"
														}
													]
												}
											},
											{
												"assignments": [
													444,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 444,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1737:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 459,
														"src": "1732:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 443,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1732:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 451,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 449,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1780:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 445,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 422,
																"src": "1750:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 446,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1760:4:3",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1750:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 448,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 447,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 424,
																"src": "1772:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1750:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1731:52:3"
											},
											{
												"condition": {
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1797:8:3",
													"subExpression": {
														"id": 452,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 444,
														"src": "1798:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 458,
												"nodeType": "IfStatement",
												"src": "1793:63:3",
												"trueBody": {
													"id": 457,
													"nodeType": "Block",
													"src": "1807:49:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 454,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "1828:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 455,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1828:17:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 456,
															"nodeType": "RevertStatement",
															"src": "1821:24:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 420,
										"nodeType": "StructuredDocumentation",
										"src": "621:905:3",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 460,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1540:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1566:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "1550:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 421,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1550:15:3",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1585:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "1577:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:43:3"
									},
									"returnParameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:0:3"
									},
									"scope": 656,
									"src": "1531:331:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 476,
										"nodeType": "Block",
										"src": "2794:62:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 471,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "2833:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 472,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 465,
															"src": "2841:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2847:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 470,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 523,
														"src": "2811:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:38:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 469,
												"id": 475,
												"nodeType": "Return",
												"src": "2804:45:3"
											}
										]
									},
									"documentation": {
										"id": 461,
										"nodeType": "StructuredDocumentation",
										"src": "1868:832:3",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2714:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2735:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "2727:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 462,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2756:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "2743:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 464,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2743:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2726:35:3"
									},
									"returnParameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "2780:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 467,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2779:14:3"
									},
									"scope": 656,
									"src": "2705:151:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 522,
										"nodeType": "Block",
										"src": "3293:279:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 491,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3315:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$656",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$656",
																		"typeString": "library Address"
																	}
																],
																"id": 490,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3307:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 489,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3307:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3307:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 493,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3321:7:3",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3307:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 494,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 484,
														"src": "3331:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3307:29:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 504,
												"nodeType": "IfStatement",
												"src": "3303:108:3",
												"trueBody": {
													"id": 503,
													"nodeType": "Block",
													"src": "3338:73:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 499,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3394:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$656",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$656",
																					"typeString": "library Address"
																				}
																			],
																			"id": 498,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3386:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 497,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3386:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 500,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3386:13:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 496,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 411,
																	"src": "3359:26:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 501,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3359:41:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 502,
															"nodeType": "RevertStatement",
															"src": "3352:48:3"
														}
													]
												}
											},
											{
												"assignments": [
													506,
													508
												],
												"declarations": [
													{
														"constant": false,
														"id": 506,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3426:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 522,
														"src": "3421:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 505,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3421:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 508,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3448:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 522,
														"src": "3435:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 507,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3435:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 515,
												"initialValue": {
													"arguments": [
														{
															"id": 513,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "3488:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 509,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 480,
																"src": "3462:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3469:4:3",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3462:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 512,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 511,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 484,
																"src": "3481:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3462:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3462:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3420:73:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 517,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "3537:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 518,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "3545:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 519,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "3554:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 516,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "3510:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3510:55:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 488,
												"id": 521,
												"nodeType": "Return",
												"src": "3503:62:3"
											}
										]
									},
									"documentation": {
										"id": 478,
										"nodeType": "StructuredDocumentation",
										"src": "2862:313:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 523,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "3189:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3219:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "3211:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3211:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3240:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "3227:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 481,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3227:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3254:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "3246:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 483,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3246:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:50:3"
									},
									"returnParameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "3279:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 486,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3279:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:14:3"
									},
									"scope": 656,
									"src": "3180:392:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 548,
										"nodeType": "Block",
										"src": "3811:154:3",
										"statements": [
											{
												"assignments": [
													534,
													536
												],
												"declarations": [
													{
														"constant": false,
														"id": 534,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3827:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 548,
														"src": "3822:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 533,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3822:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 536,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3849:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 548,
														"src": "3836:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 535,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3836:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 541,
												"initialValue": {
													"arguments": [
														{
															"id": 539,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "3881:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 537,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "3863:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 538,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3870:10:3",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3863:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3863:23:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3821:65:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 543,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "3930:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 544,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "3938:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 545,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "3947:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 542,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "3903:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3903:55:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 532,
												"id": 547,
												"nodeType": "Return",
												"src": "3896:62:3"
											}
										]
									},
									"documentation": {
										"id": 524,
										"nodeType": "StructuredDocumentation",
										"src": "3578:128:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 549,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3720:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3747:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "3739:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3768:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "3755:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 527,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3755:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:35:3"
									},
									"returnParameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "3797:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 530,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3797:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:14:3"
									},
									"scope": 656,
									"src": "3711:254:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 574,
										"nodeType": "Block",
										"src": "4203:156:3",
										"statements": [
											{
												"assignments": [
													560,
													562
												],
												"declarations": [
													{
														"constant": false,
														"id": 560,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4219:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 574,
														"src": "4214:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 559,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4214:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 562,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4241:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 574,
														"src": "4228:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 561,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4228:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 567,
												"initialValue": {
													"arguments": [
														{
															"id": 565,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "4275:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 563,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "4255:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 564,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4262:12:3",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4255:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4255:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4213:67:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 569,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "4324:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 570,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "4332:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 571,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 562,
															"src": "4341:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 568,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "4297:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4297:55:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 558,
												"id": 573,
												"nodeType": "Return",
												"src": "4290:62:3"
											}
										]
									},
									"documentation": {
										"id": 550,
										"nodeType": "StructuredDocumentation",
										"src": "3971:130:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "4115:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4144:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "4136:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4136:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4165:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "4152:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 553,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4152:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4135:35:3"
									},
									"returnParameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "4189:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 556,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4189:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:14:3"
									},
									"scope": 656,
									"src": "4106:253:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 614,
										"nodeType": "Block",
										"src": "4783:424:3",
										"statements": [
											{
												"condition": {
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4797:8:3",
													"subExpression": {
														"id": 587,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 580,
														"src": "4798:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 612,
													"nodeType": "Block",
													"src": "4857:344:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 597,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 594,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 582,
																			"src": "5045:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 595,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5056:6:3",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5045:17:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5066:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5045:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 602,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 598,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 578,
																				"src": "5071:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 599,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5078:4:3",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "5071:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 600,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5083:6:3",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5071:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 601,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5093:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5071:23:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5045:49:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 609,
															"nodeType": "IfStatement",
															"src": "5041:119:3",
															"trueBody": {
																"id": 608,
																"nodeType": "Block",
																"src": "5096:64:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 605,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 578,
																					"src": "5138:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 604,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 416,
																				"src": "5121:16:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 606,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5121:24:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 607,
																		"nodeType": "RevertStatement",
																		"src": "5114:31:3"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 610,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 582,
																"src": "5180:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 586,
															"id": 611,
															"nodeType": "Return",
															"src": "5173:17:3"
														}
													]
												},
												"id": 613,
												"nodeType": "IfStatement",
												"src": "4793:408:3",
												"trueBody": {
													"id": 593,
													"nodeType": "Block",
													"src": "4807:44:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 590,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 582,
																		"src": "4829:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 589,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 655,
																	"src": "4821:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 591,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4821:19:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 592,
															"nodeType": "ExpressionStatement",
															"src": "4821:19:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 576,
										"nodeType": "StructuredDocumentation",
										"src": "4365:255:3",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."
									},
									"id": 615,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4634:26:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4678:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "4670:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4670:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4699:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "4694:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 579,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4694:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4729:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "4716:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 581,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4716:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4660:85:3"
									},
									"returnParameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "4769:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 584,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4769:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:14:3"
									},
									"scope": 656,
									"src": "4625:582:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 636,
										"nodeType": "Block",
										"src": "5509:122:3",
										"statements": [
											{
												"condition": {
													"id": 626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5523:8:3",
													"subExpression": {
														"id": 625,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 618,
														"src": "5524:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 634,
													"nodeType": "Block",
													"src": "5583:42:3",
													"statements": [
														{
															"expression": {
																"id": 632,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 620,
																"src": "5604:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 624,
															"id": 633,
															"nodeType": "Return",
															"src": "5597:17:3"
														}
													]
												},
												"id": 635,
												"nodeType": "IfStatement",
												"src": "5519:106:3",
												"trueBody": {
													"id": 631,
													"nodeType": "Block",
													"src": "5533:44:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 628,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 620,
																		"src": "5555:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 627,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 655,
																	"src": "5547:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 629,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5547:19:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 630,
															"nodeType": "ExpressionStatement",
															"src": "5547:19:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 616,
										"nodeType": "StructuredDocumentation",
										"src": "5213:189:3",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."
									},
									"id": 637,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5416:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5438:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "5433:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 617,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5433:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5460:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "5447:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 619,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5447:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5432:39:3"
									},
									"returnParameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "5495:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 622,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5495:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5494:14:3"
									},
									"scope": 656,
									"src": "5407:224:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 654,
										"nodeType": "Block",
										"src": "5798:461:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 643,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 640,
															"src": "5874:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 644,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5885:6:3",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5874:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 645,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5894:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5874:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 652,
													"nodeType": "Block",
													"src": "6204:49:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 649,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "6225:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6225:17:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 651,
															"nodeType": "RevertStatement",
															"src": "6218:24:3"
														}
													]
												},
												"id": 653,
												"nodeType": "IfStatement",
												"src": "5870:383:3",
												"trueBody": {
													"id": 648,
													"nodeType": "Block",
													"src": "5897:301:3",
													"statements": [
														{
															"AST": {
																"nativeSrc": "6055:133:3",
																"nodeType": "YulBlock",
																"src": "6055:133:3",
																"statements": [
																	{
																		"nativeSrc": "6073:40:3",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6073:40:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "6102:10:3",
																					"nodeType": "YulIdentifier",
																					"src": "6102:10:3"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "6096:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "6096:5:3"
																			},
																			"nativeSrc": "6096:17:3",
																			"nodeType": "YulFunctionCall",
																			"src": "6096:17:3"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "6077:15:3",
																				"nodeType": "YulTypedName",
																				"src": "6077:15:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6141:2:3",
																							"nodeType": "YulLiteral",
																							"src": "6141:2:3",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "6145:10:3",
																							"nodeType": "YulIdentifier",
																							"src": "6145:10:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6137:3:3",
																						"nodeType": "YulIdentifier",
																						"src": "6137:3:3"
																					},
																					"nativeSrc": "6137:19:3",
																					"nodeType": "YulFunctionCall",
																					"src": "6137:19:3"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "6158:15:3",
																					"nodeType": "YulIdentifier",
																					"src": "6158:15:3"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6130:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "6130:6:3"
																			},
																			"nativeSrc": "6130:44:3",
																			"nodeType": "YulFunctionCall",
																			"src": "6130:44:3"
																		},
																		"nativeSrc": "6130:44:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "6130:44:3"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "shanghai",
															"externalReferences": [
																{
																	"declaration": 640,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6102:10:3",
																	"valueSize": 1
																},
																{
																	"declaration": 640,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6145:10:3",
																	"valueSize": 1
																}
															],
															"id": 647,
															"nodeType": "InlineAssembly",
															"src": "6046:142:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 638,
										"nodeType": "StructuredDocumentation",
										"src": "5637:101:3",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."
									},
									"id": 655,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5752:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5773:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "5760:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 639,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5760:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5759:25:3"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5798:0:3"
									},
									"scope": 656,
									"src": "5743:516:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 657,
							"src": "195:6066:3",
							"usedErrors": [
								411,
								416,
								419
							],
							"usedEvents": []
						}
					],
					"src": "101:6161:3"
				},
				"id": 3
			},
			"contracts/swap.sol": {
				"ast": {
					"absolutePath": "contracts/swap.sol",
					"exportedSymbols": {
						"Address": [
							656
						],
						"IERC20": [
							77
						],
						"IERC20Permit": [
							113
						],
						"SafeERC20": [
							403
						],
						"TokenSwap": [
							882
						]
					},
					"id": 883,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 658,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 659,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 883,
							"sourceUnit": 78,
							"src": "60:56:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 660,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 883,
							"sourceUnit": 404,
							"src": "118:65:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TokenSwap",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 882,
							"linearizedBaseContracts": [
								882
							],
							"name": "TokenSwap",
							"nameLocation": "196:9:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 664,
									"libraryName": {
										"id": 661,
										"name": "SafeERC20",
										"nameLocations": [
											"219:9:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 403,
										"src": "219:9:4"
									},
									"nodeType": "UsingForDirective",
									"src": "213:27:4",
									"typeName": {
										"id": 663,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 662,
											"name": "IERC20",
											"nameLocations": [
												"233:6:4"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "233:6:4"
										},
										"referencedDeclaration": 77,
										"src": "233:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 666,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "263:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 882,
									"src": "248:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 665,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "248:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0fc63d10",
									"id": 669,
									"mutability": "mutable",
									"name": "tokenA",
									"nameLocation": "289:6:4",
									"nodeType": "VariableDeclaration",
									"scope": 882,
									"src": "275:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$77",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 668,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 667,
											"name": "IERC20",
											"nameLocations": [
												"275:6:4"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "275:6:4"
										},
										"referencedDeclaration": 77,
										"src": "275:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5f64b55b",
									"id": 672,
									"mutability": "mutable",
									"name": "tokenB",
									"nameLocation": "316:6:4",
									"nodeType": "VariableDeclaration",
									"scope": 882,
									"src": "302:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$77",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 671,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 670,
											"name": "IERC20",
											"nameLocations": [
												"302:6:4"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "302:6:4"
										},
										"referencedDeclaration": 77,
										"src": "302:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3ba0b9a9",
									"id": 674,
									"mutability": "mutable",
									"name": "exchangeRate",
									"nameLocation": "344:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 882,
									"src": "329:27:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 673,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "329:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "77f92a1b6a1a11de8ca49515ad4c1fad45632dd3442167d74b90b304a3c7a758",
									"id": 682,
									"name": "Swap",
									"nameLocation": "371:4:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "392:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "376:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 675,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "376:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 678,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "406:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "398:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "398:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 680,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "423:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "415:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 679,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "415:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "375:56:4"
									},
									"src": "365:67:4"
								},
								{
									"body": {
										"id": 693,
										"nodeType": "Block",
										"src": "461:76:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 688,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 685,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "480:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 686,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "484:6:4",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "480:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 687,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 666,
																"src": "494:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "480:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420746865206f776e6572",
															"id": 689,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "501:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5",
																"typeString": "literal_string \"Not the owner\""
															},
															"value": "Not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5",
																"typeString": "literal_string \"Not the owner\""
															}
														],
														"id": 684,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "472:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "472:45:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 691,
												"nodeType": "ExpressionStatement",
												"src": "472:45:4"
											},
											{
												"id": 692,
												"nodeType": "PlaceholderStatement",
												"src": "528:1:4"
											}
										]
									},
									"id": 694,
									"name": "onlyOwner",
									"nameLocation": "449:9:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "458:2:4"
									},
									"src": "440:97:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 724,
										"nodeType": "Block",
										"src": "648:146:4",
										"statements": [
											{
												"expression": {
													"id": 706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 703,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 666,
														"src": "659:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 704,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "667:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 705,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "671:6:4",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "667:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "659:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 707,
												"nodeType": "ExpressionStatement",
												"src": "659:18:4"
											},
											{
												"expression": {
													"id": 712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 708,
														"name": "tokenA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 669,
														"src": "688:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 710,
																"name": "_tokenA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 696,
																"src": "704:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 709,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "697:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 711,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "697:15:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"src": "688:24:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"id": 713,
												"nodeType": "ExpressionStatement",
												"src": "688:24:4"
											},
											{
												"expression": {
													"id": 718,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 714,
														"name": "tokenB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "723:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 716,
																"name": "_tokenB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 698,
																"src": "739:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 715,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "732:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 717,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "732:15:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"src": "723:24:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"id": 719,
												"nodeType": "ExpressionStatement",
												"src": "723:24:4"
											},
											{
												"expression": {
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 720,
														"name": "exchangeRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 674,
														"src": "758:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 721,
														"name": "_exchangeRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 700,
														"src": "773:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "758:28:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 723,
												"nodeType": "ExpressionStatement",
												"src": "758:28:4"
											}
										]
									},
									"id": 725,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "_tokenA",
												"nameLocation": "575:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "567:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 695,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "567:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 698,
												"mutability": "mutable",
												"name": "_tokenB",
												"nameLocation": "601:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "593:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 697,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "593:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "_exchangeRate",
												"nameLocation": "627:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "619:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 699,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:91:4"
									},
									"returnParameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:0:4"
									},
									"scope": 882,
									"src": "545:249:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 790,
										"nodeType": "Block",
										"src": "847:476:4",
										"statements": [
											{
												"assignments": [
													731
												],
												"declarations": [
													{
														"constant": false,
														"id": 731,
														"mutability": "mutable",
														"name": "amountB",
														"nameLocation": "866:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 790,
														"src": "858:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 730,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "858:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 738,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 734,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 732,
																	"name": "amountA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 727,
																	"src": "877:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 733,
																	"name": "exchangeRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 674,
																	"src": "887:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "877:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 735,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "876:24:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31653138",
														"id": 736,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "903:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"value": "1e18"
													},
													"src": "876:31:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "858:49:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 746,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 742,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "987:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 743,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "991:6:4",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "987:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 740,
																		"name": "tokenA",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 669,
																		"src": "970:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 741,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "977:9:4",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 34,
																	"src": "970:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 744,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "970:28:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 745,
																"name": "amountA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 727,
																"src": "1002:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "970:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365206f6620546f6b656e41",
															"id": 747,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1011:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e5e86d24105f446628b7770ea89f01e235192c13dc97249afdbb723252e86722",
																"typeString": "literal_string \"Insufficient balance of TokenA\""
															},
															"value": "Insufficient balance of TokenA"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e5e86d24105f446628b7770ea89f01e235192c13dc97249afdbb723252e86722",
																"typeString": "literal_string \"Insufficient balance of TokenA\""
															}
														],
														"id": 739,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "962:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 748,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "962:82:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 749,
												"nodeType": "ExpressionStatement",
												"src": "962:82:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 759,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 755,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1088:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_TokenSwap_$882",
																					"typeString": "contract TokenSwap"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_TokenSwap_$882",
																					"typeString": "contract TokenSwap"
																				}
																			],
																			"id": 754,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1080:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 753,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1080:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 756,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1080:13:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 751,
																		"name": "tokenB",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 672,
																		"src": "1063:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 752,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1070:9:4",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 34,
																	"src": "1063:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 757,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1063:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 758,
																"name": "amountB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 731,
																"src": "1098:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1063:42:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365206f6620546f6b656e42",
															"id": 760,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1107:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2489c2847e47b29424caed51f0e2e975c305e94d1dc98ef54bbe32a1fae1be8a",
																"typeString": "literal_string \"Insufficient balance of TokenB\""
															},
															"value": "Insufficient balance of TokenB"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2489c2847e47b29424caed51f0e2e975c305e94d1dc98ef54bbe32a1fae1be8a",
																"typeString": "literal_string \"Insufficient balance of TokenB\""
															}
														],
														"id": 750,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1055:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1055:85:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 762,
												"nodeType": "ExpressionStatement",
												"src": "1055:85:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 766,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1177:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 767,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1181:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1177:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 770,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1197:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TokenSwap_$882",
																		"typeString": "contract TokenSwap"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TokenSwap_$882",
																		"typeString": "contract TokenSwap"
																	}
																],
																"id": 769,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1189:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 768,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1189:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1189:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 772,
															"name": "amountA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "1204:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 763,
															"name": "tokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "1153:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 765,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1160:16:4",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 190,
														"src": "1153:23:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$77_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1153:59:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 774,
												"nodeType": "ExpressionStatement",
												"src": "1153:59:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 778,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1243:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 779,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1247:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1243:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 780,
															"name": "amountB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 731,
															"src": "1255:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 775,
															"name": "tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 672,
															"src": "1223:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 777,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1230:12:4",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 163,
														"src": "1223:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$77_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1223:40:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 782,
												"nodeType": "ExpressionStatement",
												"src": "1223:40:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 784,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1286:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 785,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1290:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1286:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 786,
															"name": "amountA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "1298:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 787,
															"name": "amountB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 731,
															"src": "1307:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 783,
														"name": "Swap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 682,
														"src": "1281:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1281:34:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 789,
												"nodeType": "EmitStatement",
												"src": "1276:39:4"
											}
										]
									},
									"functionSelector": "03102091",
									"id": 791,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapAForB",
									"nameLocation": "811:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "829:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "821:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 726,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:17:4"
									},
									"returnParameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "847:0:4"
									},
									"scope": 882,
									"src": "802:521:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 856,
										"nodeType": "Block",
										"src": "1376:476:4",
										"statements": [
											{
												"assignments": [
													797
												],
												"declarations": [
													{
														"constant": false,
														"id": 797,
														"mutability": "mutable",
														"name": "amountA",
														"nameLocation": "1395:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 856,
														"src": "1387:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 796,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1387:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 804,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 800,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 798,
																	"name": "amountB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 793,
																	"src": "1406:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "31653138",
																	"id": 799,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1416:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1e18"
																},
																"src": "1406:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 801,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1405:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 802,
														"name": "exchangeRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 674,
														"src": "1424:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1405:31:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1387:49:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 812,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 808,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1516:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 809,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1520:6:4",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1516:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 806,
																		"name": "tokenB",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 672,
																		"src": "1499:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 807,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1506:9:4",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 34,
																	"src": "1499:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 810,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1499:28:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 811,
																"name": "amountB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 793,
																"src": "1531:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1499:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365206f6620546f6b656e42",
															"id": 813,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1540:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2489c2847e47b29424caed51f0e2e975c305e94d1dc98ef54bbe32a1fae1be8a",
																"typeString": "literal_string \"Insufficient balance of TokenB\""
															},
															"value": "Insufficient balance of TokenB"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2489c2847e47b29424caed51f0e2e975c305e94d1dc98ef54bbe32a1fae1be8a",
																"typeString": "literal_string \"Insufficient balance of TokenB\""
															}
														],
														"id": 805,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1491:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1491:82:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 815,
												"nodeType": "ExpressionStatement",
												"src": "1491:82:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 825,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 821,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1617:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_TokenSwap_$882",
																					"typeString": "contract TokenSwap"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_TokenSwap_$882",
																					"typeString": "contract TokenSwap"
																				}
																			],
																			"id": 820,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1609:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 819,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1609:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 822,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1609:13:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 817,
																		"name": "tokenA",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 669,
																		"src": "1592:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 818,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1599:9:4",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 34,
																	"src": "1592:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 823,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1592:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 824,
																"name": "amountA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 797,
																"src": "1627:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1592:42:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365206f6620546f6b656e41",
															"id": 826,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1636:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e5e86d24105f446628b7770ea89f01e235192c13dc97249afdbb723252e86722",
																"typeString": "literal_string \"Insufficient balance of TokenA\""
															},
															"value": "Insufficient balance of TokenA"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e5e86d24105f446628b7770ea89f01e235192c13dc97249afdbb723252e86722",
																"typeString": "literal_string \"Insufficient balance of TokenA\""
															}
														],
														"id": 816,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1584:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1584:85:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 828,
												"nodeType": "ExpressionStatement",
												"src": "1584:85:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 832,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1706:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 833,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1710:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1706:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 836,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1726:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TokenSwap_$882",
																		"typeString": "contract TokenSwap"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TokenSwap_$882",
																		"typeString": "contract TokenSwap"
																	}
																],
																"id": 835,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1718:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 834,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1718:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 837,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1718:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 838,
															"name": "amountB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 793,
															"src": "1733:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 829,
															"name": "tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 672,
															"src": "1682:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 831,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1689:16:4",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 190,
														"src": "1682:23:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$77_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1682:59:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 840,
												"nodeType": "ExpressionStatement",
												"src": "1682:59:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 844,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1772:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 845,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1776:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1772:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 846,
															"name": "amountA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "1784:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 841,
															"name": "tokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "1752:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 843,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1759:12:4",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 163,
														"src": "1752:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$77_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1752:40:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 848,
												"nodeType": "ExpressionStatement",
												"src": "1752:40:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 850,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1815:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 851,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1819:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1815:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 852,
															"name": "amountB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 793,
															"src": "1827:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 853,
															"name": "amountA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "1836:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 849,
														"name": "Swap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 682,
														"src": "1810:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1810:34:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 855,
												"nodeType": "EmitStatement",
												"src": "1805:39:4"
											}
										]
									},
									"functionSelector": "e619a498",
									"id": 857,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapBForA",
									"nameLocation": "1340:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "1358:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "1350:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 792,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1350:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1349:17:4"
									},
									"returnParameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1376:0:4"
									},
									"scope": 882,
									"src": "1331:521:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 868,
										"nodeType": "Block",
										"src": "1972:47:4",
										"statements": [
											{
												"expression": {
													"id": 866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 864,
														"name": "exchangeRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 674,
														"src": "1983:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 865,
														"name": "_exchangeRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 859,
														"src": "1998:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1983:28:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 867,
												"nodeType": "ExpressionStatement",
												"src": "1983:28:4"
											}
										]
									},
									"functionSelector": "db068e0e",
									"id": 869,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 862,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 861,
												"name": "onlyOwner",
												"nameLocations": [
													"1962:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 694,
												"src": "1962:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1962:9:4"
										}
									],
									"name": "setExchangeRate",
									"nameLocation": "1914:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "_exchangeRate",
												"nameLocation": "1938:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "1930:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1930:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1929:23:4"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1972:0:4"
									},
									"scope": 882,
									"src": "1905:114:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 880,
										"nodeType": "Block",
										"src": "2091:35:4",
										"statements": [
											{
												"expression": {
													"id": 878,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 876,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 666,
														"src": "2102:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 877,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 871,
														"src": "2110:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2102:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 879,
												"nodeType": "ExpressionStatement",
												"src": "2102:16:4"
											}
										]
									},
									"functionSelector": "f2fde38b",
									"id": 881,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 874,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 873,
												"name": "onlyOwner",
												"nameLocations": [
													"2081:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 694,
												"src": "2081:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2081:9:4"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2036:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2062:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "2054:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 870,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2054:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2053:18:4"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2091:0:4"
									},
									"scope": 882,
									"src": "2027:99:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 883,
							"src": "187:1942:4",
							"usedErrors": [
								130,
								411,
								416,
								419
							],
							"usedEvents": [
								682
							]
						}
					],
					"src": "33:2098:4"
				},
				"id": 4
			}
		}
	}
}